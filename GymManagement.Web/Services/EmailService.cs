using MailKit.Net.Smtp;
using MailKit.Security;
using MimeKit;
using Microsoft.Extensions.Options;

namespace GymManagement.Web.Services
{
    public class EmailSettings
    {
        public string SmtpServer { get; set; } = string.Empty;
        public int SmtpPort { get; set; }
        public string SmtpUsername { get; set; } = string.Empty;
        public string SmtpPassword { get; set; } = string.Empty;
        public string SenderEmail { get; set; } = string.Empty;
        public string SenderName { get; set; } = string.Empty;
    }

    public class EmailService : IEmailService
    {
        private readonly EmailSettings _emailSettings;
        private readonly ILogger<EmailService> _logger;

        public EmailService(IConfiguration configuration, ILogger<EmailService> logger)
        {
            _emailSettings = configuration.GetSection("EmailSettings").Get<EmailSettings>() ?? new EmailSettings();
            _logger = logger;
        }

        public async Task SendEmailAsync(string toEmail, string subject, string body)
        {
            await SendEmailAsync(toEmail, "", subject, body);
        }

        public async Task SendEmailAsync(string toEmail, string toName, string subject, string body)
        {
            try
            {
                var message = new MimeMessage();
                message.From.Add(new MailboxAddress(_emailSettings.SenderName, _emailSettings.SenderEmail));
                message.To.Add(new MailboxAddress(toName, toEmail));
                message.Subject = subject;

                var bodyBuilder = new BodyBuilder
                {
                    HtmlBody = body
                };
                message.Body = bodyBuilder.ToMessageBody();

                using var client = new SmtpClient();

                // Bypass SSL certificate validation (ƒë√£ ƒë∆∞·ª£c th√™m)
                client.ServerCertificateValidationCallback = (s, c, h, e) => true;

                await client.ConnectAsync(_emailSettings.SmtpServer, _emailSettings.SmtpPort, SecureSocketOptions.StartTls);
                await client.AuthenticateAsync(_emailSettings.SmtpUsername, _emailSettings.SmtpPassword);
                await client.SendAsync(message);
                await client.DisconnectAsync(true);

                _logger.LogInformation("Email sent successfully to {Email}", toEmail);
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Failed to send email to {Email}", toEmail);
                throw;
            }
        }

        public async Task SendBulkEmailAsync(IEnumerable<string> toEmails, string subject, string body)
        {
            var tasks = toEmails.Select(email => SendEmailAsync(email, subject, body));
            await Task.WhenAll(tasks);
        }

        public async Task SendWelcomeEmailAsync(string toEmail, string memberName, string username, string tempPassword)
        {
            var subject = "Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi Gym Management System";
            var body = $@"
                <html>
                <body>
                    <h2>Ch√†o m·ª´ng {memberName}!</h2>
                    <p>T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng.</p>
                    <p><strong>Th√¥ng tin ƒëƒÉng nh·∫≠p:</strong></p>
                    <ul>
                        <li>T√™n ƒëƒÉng nh·∫≠p: {username}</li>
                        <li>M·∫≠t kh·∫©u t·∫°m th·ªùi: {tempPassword}</li>
                    </ul>
                    <p>Vui l√≤ng ƒëƒÉng nh·∫≠p v√† ƒë·ªïi m·∫≠t kh·∫©u ngay l·∫≠p t·ª©c.</p>
                    <p>Tr√¢n tr·ªçng,<br/>ƒê·ªôi ng≈© Gym Management</p>
                </body>
                </html>";

            await SendEmailAsync(toEmail, memberName, subject, body);
        }

        public async Task SendPasswordResetEmailAsync(string toEmail, string memberName, string resetLink)
        {
            var subject = "ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u - Gym Management System";
            var body = $@"
                <html>
                <body>
                    <h2>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h2>
                    <p>Xin ch√†o {memberName},</p>
                    <p>B·∫°n ƒë√£ y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u. Vui l√≤ng click v√†o link b√™n d∆∞·ªõi ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u:</p>
                    <p><a href='{resetLink}'>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</a></p>
                    <p>Link n√†y s·∫Ω h·∫øt h·∫°n sau 24 gi·ªù.</p>
                    <p>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y.</p>
                    <p>Tr√¢n tr·ªçng,<br/>ƒê·ªôi ng≈© Gym Management</p>
                </body>
                </html>";

            await SendEmailAsync(toEmail, memberName, subject, body);
        }

        public async Task SendRegistrationConfirmationEmailAsync(string toEmail, string memberName, string packageName, DateTime expiryDate)
        {
            var subject = "X√°c nh·∫≠n ƒëƒÉng k√Ω g√≥i t·∫≠p - Gym Management System";
            var body = $@"
                <html>
                <body>
                    <h2>X√°c nh·∫≠n ƒëƒÉng k√Ω th√†nh c√¥ng</h2>
                    <p>Xin ch√†o {memberName},</p>
                    <p>B·∫°n ƒë√£ ƒëƒÉng k√Ω th√†nh c√¥ng g√≥i t·∫≠p: <strong>{packageName}</strong></p>
                    <p>Th√¥ng tin g√≥i t·∫≠p:</p>
                    <ul>
                        <li>T√™n g√≥i: {packageName}</li>
                        <li>Ng√†y h·∫øt h·∫°n: {expiryDate:dd/MM/yyyy}</li>
                    </ul>
                    <p>C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng v√† s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i!</p>
                    <p>Tr√¢n tr·ªçng,<br/>ƒê·ªôi ng≈© Gym Management</p>
                </body>
                </html>";

            await SendEmailAsync(toEmail, memberName, subject, body);
        }

        public async Task SendPaymentConfirmationEmailAsync(string toEmail, string memberName, decimal amount, string paymentMethod)
        {
            var subject = "X√°c nh·∫≠n thanh to√°n - Gym Management System";
            var body = $@"
                <html>
                <body>
                    <h2>X√°c nh·∫≠n thanh to√°n th√†nh c√¥ng</h2>
                    <p>Xin ch√†o {memberName},</p>
                    <p>Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c thanh to√°n c·ªßa b·∫°n v·ªõi th√¥ng tin sau:</p>
                    <ul>
                        <li>S·ªë ti·ªÅn: {amount:N0} VNƒê</li>
                        <li>Ph∆∞∆°ng th·ª©c: {paymentMethod}</li>
                        <li>Th·ªùi gian: {DateTime.Now:dd/MM/yyyy HH:mm}</li>
                    </ul>
                    <p>C·∫£m ∆°n b·∫°n ƒë√£ thanh to√°n!</p>
                    <p>Tr√¢n tr·ªçng,<br/>ƒê·ªôi ng≈© Gym Management</p>
                </body>
                </html>";

            await SendEmailAsync(toEmail, memberName, subject, body);
        }

        #region New Email Templates

        public async Task SendScheduleChangeNotificationAsync(string toEmail, string memberName, string changeDetails, string classOrSessionInfo)
        {
            var subject = "üîî Th√¥ng b√°o thay ƒë·ªïi l·ªãch - Gym Management";
            var body = $@"
                <html>
                <head>
                    <style>
                        body {{ font-family: Arial, sans-serif; line-height: 1.6; }}
                        .header {{ background-color: #3498db; color: white; padding: 20px; text-align: center; }}
                        .content {{ padding: 20px; }}
                        .alert {{ background-color: #fff3cd; border: 1px solid #ffeeba; padding: 15px; border-radius: 5px; margin: 15px 0; }}
                        .footer {{ background-color: #f8f9fa; padding: 15px; text-align: center; font-size: 12px; }}
                    </style>
                </head>
                <body>
                    <div class='header'>
                        <h2>üìÖ Th√¥ng b√°o thay ƒë·ªïi l·ªãch</h2>
                    </div>
                    <div class='content'>
                        <p>Xin ch√†o <strong>{memberName}</strong>,</p>
                        <div class='alert'>
                            <strong>‚ö†Ô∏è TH√îNG B√ÅO QUAN TR·ªåNG:</strong> C√≥ thay ƒë·ªïi trong l·ªãch c·ªßa b·∫°n
                        </div>
                        <p><strong>Th√¥ng tin l·ªõp/bu·ªïi t·∫≠p:</strong></p>
                        <p>{classOrSessionInfo}</p>
                        <p><strong>Chi ti·∫øt thay ƒë·ªïi:</strong></p>
                        <p>{changeDetails}</p>
                        <p>Vui l√≤ng ki·ªÉm tra l·∫°i l·ªãch tr√¨nh v√† s·∫Øp x·∫øp th·ªùi gian ph√π h·ª£p.</p>
                        <p>N·∫øu c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>
                    </div>
                    <div class='footer'>
                        <p>Tr√¢n tr·ªçng,<br/>ƒê·ªôi ng≈© Gym Management<br/>üìû Hotline: 1900-xxxx | üìß Email: clbhtsvtvu@gmail.com</p>
                    </div>
                </body>
                </html>";

            await SendEmailAsync(toEmail, memberName, subject, body);
        }

        public async Task SendClassReminderEmailAsync(string toEmail, string memberName, string className, DateTime classTime, string instructorName, string location)
        {
            var subject = "‚è∞ Nh·∫Øc nh·ªü l·ªõp h·ªçc s·∫Øp di·ªÖn ra";
            var body = $@"
                <html>
                <head>
                    <style>
                        body {{ font-family: Arial, sans-serif; line-height: 1.6; }}
                        .header {{ background-color: #28a745; color: white; padding: 20px; text-align: center; }}
                        .content {{ padding: 20px; }}
                        .class-info {{ background-color: #d4edda; border: 1px solid #c3e6cb; padding: 15px; border-radius: 5px; margin: 15px 0; }}
                        .footer {{ background-color: #f8f9fa; padding: 15px; text-align: center; font-size: 12px; }}
                    </style>
                </head>
                <body>
                    <div class='header'>
                        <h2>‚è∞ Nh·∫Øc nh·ªü l·ªõp h·ªçc</h2>
                    </div>
                    <div class='content'>
                        <p>Xin ch√†o <strong>{memberName}</strong>,</p>
                        <p>ƒê√¢y l√† l·ªùi nh·∫Øc v·ªÅ l·ªõp h·ªçc s·∫Øp di·ªÖn ra c·ªßa b·∫°n:</p>
                        <div class='class-info'>
                            <table style='width: 100%; border-collapse: collapse;'>
                                <tr><td style='padding: 5px;'><strong>üèÉ‚Äç‚ôÇÔ∏è L·ªõp h·ªçc:</strong></td><td style='padding: 5px;'>{className}</td></tr>
                                <tr><td style='padding: 5px;'><strong>üïê Th·ªùi gian:</strong></td><td style='padding: 5px;'>{classTime:dddd, dd/MM/yyyy l√∫c HH:mm}</td></tr>
                                <tr><td style='padding: 5px;'><strong>üë®‚Äçüè´ Hu·∫•n luy·ªán vi√™n:</strong></td><td style='padding: 5px;'>{instructorName}</td></tr>
                                <tr><td style='padding: 5px;'><strong>üìç ƒê·ªãa ƒëi·ªÉm:</strong></td><td style='padding: 5px;'>{location}</td></tr>
                            </table>
                        </div>
                        <p>üìù <strong>L∆∞u √Ω:</strong> Vui l√≤ng c√≥ m·∫∑t s·ªõm 10-15 ph√∫t ƒë·ªÉ chu·∫©n b·ªã.</p>
                        <p>Ch√∫c b·∫°n c√≥ bu·ªïi t·∫≠p th·ªÉ d·ª•c hi·ªáu qu·∫£! üí™</p>
                    </div>
                    <div class='footer'>
                        <p>Tr√¢n tr·ªçng,<br/>ƒê·ªôi ng≈© Gym Management</p>
                    </div>
                </body>
                </html>";

            await SendEmailAsync(toEmail, memberName, subject, body);
        }

        public async Task SendClassCancellationEmailAsync(string toEmail, string memberName, string className, DateTime originalTime, string reason)
        {
            var subject = "‚ùå Th√¥ng b√°o h·ªßy l·ªõp h·ªçc";
            var body = $@"
                <html>
                <head>
                    <style>
                        body {{ font-family: Arial, sans-serif; line-height: 1.6; }}
                        .header {{ background-color: #dc3545; color: white; padding: 20px; text-align: center; }}
                        .content {{ padding: 20px; }}
                        .cancel-info {{ background-color: #f8d7da; border: 1px solid #f5c6cb; padding: 15px; border-radius: 5px; margin: 15px 0; }}
                        .footer {{ background-color: #f8f9fa; padding: 15px; text-align: center; font-size: 12px; }}
                    </style>
                </head>
                <body>
                    <div class='header'>
                        <h2>‚ùå Th√¥ng b√°o h·ªßy l·ªõp h·ªçc</h2>
                    </div>
                    <div class='content'>
                        <p>Xin ch√†o <strong>{memberName}</strong>,</p>
                        <p>Ch√∫ng t√¥i r·∫•t ti·∫øc ph·∫£i th√¥ng b√°o r·∫±ng l·ªõp h·ªçc sau ƒë√¢y ƒë√£ b·ªã h·ªßy:</p>
                        <div class='cancel-info'>
                            <p><strong>üèÉ‚Äç‚ôÇÔ∏è L·ªõp h·ªçc:</strong> {className}</p>
                            <p><strong>üïê Th·ªùi gian d·ª± ki·∫øn:</strong> {originalTime:dddd, dd/MM/yyyy l√∫c HH:mm}</p>
                            <p><strong>üìù L√Ω do:</strong> {reason}</p>
                        </div>
                        <p>Ch√∫ng t√¥i s·∫Ω th√¥ng b√°o l·ªãch h·ªçc b√π ho·∫∑c l·ªãch thay th·∫ø s·ªõm nh·∫•t c√≥ th·ªÉ.</p>
                        <p>Xin l·ªói v·ªÅ s·ª± b·∫•t ti·ªán n√†y v√† c·∫£m ∆°n s·ª± th√¥ng hi·ªÉu c·ªßa b·∫°n.</p>
                    </div>
                    <div class='footer'>
                        <p>Tr√¢n tr·ªçng,<br/>ƒê·ªôi ng≈© Gym Management<br/>üìû Li√™n h·ªá: 1900-xxxx ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt</p>
                    </div>
                </body>
                </html>";

            await SendEmailAsync(toEmail, memberName, subject, body);
        }

        public async Task SendInstructorScheduleChangeAsync(string toEmail, string instructorName, string changeDetails, DateTime effectiveDate)
        {
            var subject = "üìã Th√¥ng b√°o thay ƒë·ªïi l·ªãch d·∫°y";
            var body = $@"
                <html>
                <head>
                    <style>
                        body {{ font-family: Arial, sans-serif; line-height: 1.6; }}
                        .header {{ background-color: #6f42c1; color: white; padding: 20px; text-align: center; }}
                        .content {{ padding: 20px; }}
                        .schedule-info {{ background-color: #e2e3e5; border: 1px solid #d6d8db; padding: 15px; border-radius: 5px; margin: 15px 0; }}
                        .footer {{ background-color: #f8f9fa; padding: 15px; text-align: center; font-size: 12px; }}
                    </style>
                </head>
                <body>
                    <div class='header'>
                        <h2>üìã Th√¥ng b√°o thay ƒë·ªïi l·ªãch d·∫°y</h2>
                    </div>
                    <div class='content'>
                        <p>Xin ch√†o HLV <strong>{instructorName}</strong>,</p>
                        <p>C√≥ thay ƒë·ªïi trong l·ªãch d·∫°y c·ªßa b·∫°n:</p>
                        <div class='schedule-info'>
                            <p><strong>üìÖ C√≥ hi·ªáu l·ª±c t·ª´:</strong> {effectiveDate:dddd, dd/MM/yyyy}</p>
                            <p><strong>üìù Chi ti·∫øt thay ƒë·ªïi:</strong></p>
                            <p>{changeDetails}</p>
                        </div>
                        <p>Vui l√≤ng xem x√©t v√† x√°c nh·∫≠n vi·ªác ti·∫øp nh·∫≠n thay ƒë·ªïi n√†y.</p>
                        <p>N·∫øu c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá v·ªõi b·ªô ph·∫≠n l·∫≠p l·ªãch.</p>
                    </div>
                    <div class='footer'>
                        <p>Tr√¢n tr·ªçng,<br/>Ban qu·∫£n l√Ω Gym<br/>üìû N·ªôi b·ªô: ext-xxx</p>
                    </div>
                </body>
                </html>";

            await SendEmailAsync(toEmail, instructorName, subject, body);
        }

        public async Task SendMembershipExpiryReminderAsync(string toEmail, string memberName, string packageName, DateTime expiryDate, int daysRemaining)
        {
            var subject = $"‚è≥ G√≥i t·∫≠p s·∫Øp h·∫øt h·∫°n - c√≤n {daysRemaining} ng√†y";
            var urgencyClass = daysRemaining <= 3 ? "urgent" : daysRemaining <= 7 ? "warning" : "info";
            var urgencyColor = daysRemaining <= 3 ? "#dc3545" : daysRemaining <= 7 ? "#ffc107" : "#17a2b8";

            // Format date in Vietnamese
            var vietnameseCulture = new System.Globalization.CultureInfo("vi-VN");
            var dayNames = new Dictionary<DayOfWeek, string>
            {
                { DayOfWeek.Monday, "Th·ª© Hai" },
                { DayOfWeek.Tuesday, "Th·ª© Ba" },
                { DayOfWeek.Wednesday, "Th·ª© T∆∞" },
                { DayOfWeek.Thursday, "Th·ª© NƒÉm" },
                { DayOfWeek.Friday, "Th·ª© S√°u" },
                { DayOfWeek.Saturday, "Th·ª© B·∫£y" },
                { DayOfWeek.Sunday, "Ch·ªß Nh·∫≠t" }
            };

            var vietnameseDayName = dayNames[expiryDate.DayOfWeek];
            var formattedExpiryDate = $"{vietnameseDayName}, {expiryDate:dd/MM/yyyy}";

            var body = $@"
                <html>
                <head>
                    <style>
                        body {{ font-family: Arial, sans-serif; line-height: 1.6; }}
                        .header {{ background-color: {urgencyColor}; color: white; padding: 20px; text-align: center; }}
                        .content {{ padding: 20px; }}
                        .expiry-info {{ background-color: #fff3cd; border: 1px solid #ffeeba; padding: 15px; border-radius: 5px; margin: 15px 0; }}
                        .footer {{ background-color: #f8f9fa; padding: 15px; text-align: center; font-size: 12px; }}
                        .renewal-btn {{ background-color: #28a745; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; display: inline-block; margin: 10px 0; }}
                    </style>
                </head>
                <body>
                    <div class='header'>
                        <h2>‚è≥ Nh·∫Øc nh·ªü gia h·∫°n g√≥i t·∫≠p</h2>
                    </div>
                    <div class='content'>
                        <p>Xin ch√†o <strong>{memberName}</strong>,</p>
                        <p>G√≥i t·∫≠p c·ªßa b·∫°n s·∫Øp h·∫øt h·∫°n:</p>
                        <div class='expiry-info'>
                            <p><strong>üì¶ G√≥i t·∫≠p:</strong> {packageName}</p>
                            <p><strong>üìÖ Ng√†y h·∫øt h·∫°n:</strong> {formattedExpiryDate}</p>
                            <p><strong>‚è∞ C√≤n l·∫°i:</strong> <span style='color: {urgencyColor}; font-weight: bold;'>{daysRemaining} ng√†y</span></p>
                        </div>
                        <p>ƒê·ªÉ kh√¥ng b·ªã gi√°n ƒëo·∫°n vi·ªác t·∫≠p luy·ªán, vui l√≤ng gia h·∫°n g√≥i t·∫≠p s·ªõm.</p>
                        <p style='text-align: center;'>
                            <a href='#' class='renewal-btn'>üîÑ Gia h·∫°n ngay</a>
                        </p>
                        <p>üìû Li√™n h·ªá hotline ho·∫∑c ƒë·∫øn tr·ª±c ti·∫øp gym ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ gia h·∫°n.</p>
                    </div>
                    <div class='footer'>
                        <p>Tr√¢n tr·ªçng,<br/>ƒê·ªôi ng≈© Gym Management</p>
                    </div>
                </body>
                </html>";

            await SendEmailAsync(toEmail, memberName, subject, body);
        }

        public async Task SendBookingConfirmationEmailAsync(string toEmail, string memberName, string sessionType, DateTime sessionTime, string instructorName)
        {
            var subject = "‚úÖ X√°c nh·∫≠n ƒë·∫∑t l·ªãch th√†nh c√¥ng";
            var body = $@"
                <html>
                <head>
                    <style>
                        body {{ font-family: Arial, sans-serif; line-height: 1.6; }}
                        .header {{ background-color: #28a745; color: white; padding: 20px; text-align: center; }}
                        .content {{ padding: 20px; }}
                        .booking-info {{ background-color: #d4edda; border: 1px solid #c3e6cb; padding: 15px; border-radius: 5px; margin: 15px 0; }}
                        .footer {{ background-color: #f8f9fa; padding: 15px; text-align: center; font-size: 12px; }}
                    </style>
                </head>
                <body>
                    <div class='header'>
                        <h2>‚úÖ X√°c nh·∫≠n ƒë·∫∑t l·ªãch</h2>
                    </div>
                    <div class='content'>
                        <p>Xin ch√†o <strong>{memberName}</strong>,</p>
                        <p>B·∫°n ƒë√£ ƒë·∫∑t l·ªãch th√†nh c√¥ng:</p>
                        <div class='booking-info'>
                            <table style='width: 100%; border-collapse: collapse;'>
                                <tr><td style='padding: 5px;'><strong>üèãÔ∏è‚Äç‚ôÇÔ∏è Lo·∫°i bu·ªïi t·∫≠p:</strong></td><td style='padding: 5px;'>{sessionType}</td></tr>
                                <tr><td style='padding: 5px;'><strong>üïê Th·ªùi gian:</strong></td><td style='padding: 5px;'>{sessionTime:dddd, dd/MM/yyyy l√∫c HH:mm}</td></tr>
                                <tr><td style='padding: 5px;'><strong>üë®‚Äçüè´ Hu·∫•n luy·ªán vi√™n:</strong></td><td style='padding: 5px;'>{instructorName}</td></tr>
                            </table>
                        </div>
                        <p>üìù <strong>L∆∞u √Ω quan tr·ªçng:</strong></p>
                        <ul>
                            <li>Vui l√≤ng c√≥ m·∫∑t ƒë√∫ng gi·ªù ho·∫∑c s·ªõm 5-10 ph√∫t</li>
                            <li>Mang theo ƒë·ªì t·∫≠p v√† n∆∞·ªõc u·ªëng</li>
                            <li>N·∫øu c·∫ßn h·ªßy, vui l√≤ng th√¥ng b√°o tr∆∞·ªõc √≠t nh·∫•t 2 gi·ªù</li>
                        </ul>
                    </div>
                    <div class='footer'>
                        <p>Tr√¢n tr·ªçng,<br/>ƒê·ªôi ng≈© Gym Management</p>
                    </div>
                </body>
                </html>";

            await SendEmailAsync(toEmail, memberName, subject, body);
        }

        public async Task SendBookingCancellationEmailAsync(string toEmail, string memberName, string sessionType, DateTime sessionTime, string reason)
        {
            var subject = "‚ùå X√°c nh·∫≠n h·ªßy l·ªãch ƒë·∫∑t";
            var body = $@"
                <html>
                <head>
                    <style>
                        body {{ font-family: Arial, sans-serif; line-height: 1.6; }}
                        .header {{ background-color: #dc3545; color: white; padding: 20px; text-align: center; }}
                        .content {{ padding: 20px; }}
                        .cancel-info {{ background-color: #f8d7da; border: 1px solid #f5c6cb; padding: 15px; border-radius: 5px; margin: 15px 0; }}
                        .footer {{ background-color: #f8f9fa; padding: 15px; text-align: center; font-size: 12px; }}
                    </style>
                </head>
                <body>
                    <div class='header'>
                        <h2>‚ùå X√°c nh·∫≠n h·ªßy l·ªãch</h2>
                    </div>
                    <div class='content'>
                        <p>Xin ch√†o <strong>{memberName}</strong>,</p>
                        <p>L·ªãch ƒë·∫∑t c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c h·ªßy:</p>
                        <div class='cancel-info'>
                            <p><strong>üèãÔ∏è‚Äç‚ôÇÔ∏è Lo·∫°i bu·ªïi t·∫≠p:</strong> {sessionType}</p>
                            <p><strong>üïê Th·ªùi gian ƒë√£ h·ªßy:</strong> {sessionTime:dddd, dd/MM/yyyy l√∫c HH:mm}</p>
                            <p><strong>üìù L√Ω do:</strong> {reason}</p>
                        </div>
                        <p>B·∫°n c√≥ th·ªÉ ƒë·∫∑t l·ªãch m·ªõi b·∫•t k·ª≥ l√∫c n√†o th√¥ng qua h·ªá th·ªëng.</p>
                        <p>C·∫£m ∆°n b·∫°n ƒë√£ th√¥ng b√°o tr∆∞·ªõc!</p>
                    </div>
                    <div class='footer'>
                        <p>Tr√¢n tr·ªçng,<br/>ƒê·ªôi ng≈© Gym Management</p>
                    </div>
                </body>
                </html>";

            await SendEmailAsync(toEmail, memberName, subject, body);
        }

        public async Task SendImportantChangeConfirmationAsync(string toEmail, string memberName, string changeType, string changeDetails, DateTime effectiveDate)
        {
            var subject = "üîî X√°c nh·∫≠n thay ƒë·ªïi quan tr·ªçng";
            var body = $@"
                <html>
                <head>
                    <style>
                        body {{ font-family: Arial, sans-serif; line-height: 1.6; }}
                        .header {{ background-color: #fd7e14; color: white; padding: 20px; text-align: center; }}
                        .content {{ padding: 20px; }}
                        .change-info {{ background-color: #fff3cd; border: 1px solid #ffeeba; padding: 15px; border-radius: 5px; margin: 15px 0; }}
                        .footer {{ background-color: #f8f9fa; padding: 15px; text-align: center; font-size: 12px; }}
                        .important {{ color: #dc3545; font-weight: bold; }}
                    </style>
                </head>
                <body>
                    <div class='header'>
                        <h2>üîî X√°c nh·∫≠n thay ƒë·ªïi quan tr·ªçng</h2>
                    </div>
                    <div class='content'>
                        <p>Xin ch√†o <strong>{memberName}</strong>,</p>
                        <p class='important'>ƒê√¢y l√† email x√°c nh·∫≠n v·ªÅ thay ƒë·ªïi quan tr·ªçng trong t√†i kho·∫£n c·ªßa b·∫°n:</p>
                        <div class='change-info'>
                            <p><strong>üìù Lo·∫°i thay ƒë·ªïi:</strong> {changeType}</p>
                            <p><strong>üìÖ C√≥ hi·ªáu l·ª±c t·ª´:</strong> {effectiveDate:dddd, dd/MM/yyyy l√∫c HH:mm}</p>
                            <p><strong>üîç Chi ti·∫øt:</strong></p>
                            <p>{changeDetails}</p>
                        </div>
                        <p>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán thay ƒë·ªïi n√†y ho·∫∑c c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá ngay v·ªõi ch√∫ng t√¥i.</p>
                        <p class='important'>üìû Hotline kh·∫©n c·∫•p: 1900-xxxx (24/7)</p>
                    </div>
                    <div class='footer'>
                        <p>Tr√¢n tr·ªçng,<br/>ƒê·ªôi ng≈© Gym Management<br/>üîí Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông ƒë·ªÉ ƒë·∫£m b·∫£o b·∫£o m·∫≠t</p>
                    </div>
                </body>
                </html>";

            await SendEmailAsync(toEmail, memberName, subject, body);
        }

        public async Task SendPasswordResetNotificationAsync(string toEmail, string memberName, string newPassword)
        {
            var subject = "üîë M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t l·∫°i - Gym Management System";
            var body = $@"
                <html>
                <head>
                    <style>
                        body {{ font-family: Arial, sans-serif; line-height: 1.6; }}
                        .header {{ background-color: #dc3545; color: white; padding: 20px; text-align: center; }}
                        .content {{ padding: 20px; }}
                        .password-info {{ background-color: #f8d7da; border: 1px solid #f5c6cb; padding: 15px; border-radius: 5px; margin: 15px 0; }}
                        .footer {{ background-color: #f8f9fa; padding: 15px; text-align: center; font-size: 12px; }}
                        .password {{ background-color: #fff; border: 2px solid #007bff; padding: 10px; border-radius: 5px; font-family: monospace; font-size: 16px; font-weight: bold; text-align: center; color: #007bff; }}
                        .warning {{ background-color: #fff3cd; border: 1px solid #ffeeba; padding: 10px; border-radius: 5px; margin: 10px 0; }}
                    </style>
                </head>
                <body>
                    <div class='header'>
                        <h2>üîë M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t l·∫°i</h2>
                    </div>
                    <div class='content'>
                        <p>Xin ch√†o <strong>{memberName}</strong>,</p>
                        <p>M·∫≠t kh·∫©u t√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c qu·∫£n tr·ªã vi√™n ƒë·∫∑t l·∫°i.</p>

                        <div class='password-info'>
                            <p><strong>üîê M·∫≠t kh·∫©u m·ªõi c·ªßa b·∫°n:</strong></p>
                            <div class='password'>{newPassword}</div>
                        </div>

                        <div class='warning'>
                            <p><strong>‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:</strong></p>
                            <ul>
                                <li>Vui l√≤ng ƒëƒÉng nh·∫≠p v√† ƒë·ªïi m·∫≠t kh·∫©u ngay l·∫≠p t·ª©c</li>
                                <li>Kh√¥ng chia s·∫ª m·∫≠t kh·∫©u n√†y v·ªõi b·∫•t k·ª≥ ai</li>
                                <li>Ch·ªçn m·∫≠t kh·∫©u m·ªõi m·∫°nh v√† d·ªÖ nh·ªõ</li>
                            </ul>
                        </div>

                        <p>üìû N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng li√™n h·ªá ngay v·ªõi qu·∫£n tr·ªã vi√™n.</p>
                    </div>
                    <div class='footer'>
                        <p>Tr√¢n tr·ªçng,<br/>ƒê·ªôi ng≈© Gym Management</p>
                    </div>
                </body>
                </html>";

            await SendEmailAsync(toEmail, memberName, subject, body);
        }

        #endregion
    }
}
