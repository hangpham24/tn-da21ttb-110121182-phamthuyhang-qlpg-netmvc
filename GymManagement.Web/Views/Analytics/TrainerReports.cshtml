@model IEnumerable<GymManagement.Web.Models.DTOs.ReportTemplateDto>
@{
    ViewData["Title"] = "B√°o c√°o - Hu·∫•n luy·ªán vi√™n";
    Layout = "_TrainerLayout";
}

@section Styles {
    <style>
        .report-card {
            transition: all 0.3s ease;
        }
        .report-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
        .export-btn {
            transition: all 0.2s ease;
        }
        .export-btn:hover {
            transform: scale(1.05);
        }
    </style>
}

<div class="min-h-screen bg-gray-50 p-6">
    <!-- Header Section -->
    <div class="mb-8">
        <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center">
            <div>
                <h1 class="text-3xl font-bold text-gray-900 mb-2">üìÑ B√°o c√°o ph√¢n t√≠ch</h1>
                <p class="text-gray-600">Xu·∫•t c√°c b√°o c√°o v·ªÅ hi·ªáu su·∫•t v√† ho·∫°t ƒë·ªông c·ªßa b·∫°n</p>
            </div>
            <div class="mt-4 sm:mt-0">
                <a href="@Url.Action("TrainerDashboard", "Analytics")" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 17l-5-5m0 0l5-5m-5 5h12"></path>
                    </svg>
                    Quay l·∫°i Dashboard
                </a>
            </div>
        </div>
    </div>

    <!-- Quick Export Section -->
    <div class="bg-white rounded-lg shadow-md p-6 mb-8">
        <h2 class="text-lg font-semibold text-gray-900 mb-4">üöÄ Xu·∫•t nhanh</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
            <!-- Monthly Performance Report -->
            <div class="border border-gray-200 rounded-lg p-4 text-center hover:border-blue-500 cursor-pointer" onclick="quickExport('monthly_performance')">
                <div class="text-3xl mb-2">üìä</div>
                <h3 class="font-semibold text-gray-900">Hi·ªáu su·∫•t th√°ng n√†y</h3>
                <p class="text-sm text-gray-600 mt-1">B√°o c√°o t·ªïng h·ª£p th√°ng hi·ªán t·∫°i</p>
            </div>

            <!-- Attendance Report -->
            <div class="border border-gray-200 rounded-lg p-4 text-center hover:border-blue-500 cursor-pointer" onclick="quickExport('attendance_report')">
                <div class="text-3xl mb-2">‚úÖ</div>
                <h3 class="font-semibold text-gray-900">ƒêi·ªÉm danh tu·∫ßn n√†y</h3>
                <p class="text-sm text-gray-600 mt-1">Chi ti·∫øt ƒëi·ªÉm danh 7 ng√†y qua</p>
            </div>

            <!-- Class Summary -->
            <div class="border border-gray-200 rounded-lg p-4 text-center hover:border-blue-500 cursor-pointer" onclick="quickExport('class_summary')">
                <div class="text-3xl mb-2">üéì</div>
                <h3 class="font-semibold text-gray-900">T·ªïng h·ª£p l·ªõp h·ªçc</h3>
                <p class="text-sm text-gray-600 mt-1">Th√¥ng tin c√°c l·ªõp ƒëang d·∫°y</p>
            </div>

            <!-- Salary Report -->
            <div class="border border-gray-200 rounded-lg p-4 text-center hover:border-blue-500 cursor-pointer" onclick="quickExport('salary_report')">
                <div class="text-3xl mb-2">üí∞</div>
                <h3 class="font-semibold text-gray-900">B√°o c√°o l∆∞∆°ng</h3>
                <p class="text-sm text-gray-600 mt-1">Chi ti·∫øt l∆∞∆°ng 3 th√°ng g·∫ßn nh·∫•t</p>
            </div>
        </div>
    </div>

    <!-- Custom Report Section -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <!-- Available Reports -->
        <div class="bg-white rounded-lg shadow-md p-6">
            <h2 class="text-lg font-semibold text-gray-900 mb-4">üìã B√°o c√°o c√≥ s·∫µn</h2>
            
            @if (Model != null && Model.Any())
            {
                <div class="space-y-4">
                    @foreach (var template in Model)
                    {
                        <div class="report-card border border-gray-200 rounded-lg p-4 hover:shadow-md">
                            <div class="flex justify-between items-start">
                                <div class="flex-1">
                                    <h3 class="font-semibold text-gray-900">@template.TemplateName</h3>
                                    <p class="text-sm text-gray-600 mt-1">@template.Description</p>
                                    <div class="flex gap-2 mt-2">
                                        <span class="px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded">@template.ReportType</span>
                                        <span class="px-2 py-1 text-xs bg-gray-100 text-gray-800 rounded">@template.ReportFormat</span>
                                    </div>
                                </div>
                                <div class="flex gap-2">
                                    <button onclick="exportTemplate(@template.TemplateId, 'pdf')" 
                                            class="export-btn p-2 text-red-600 hover:bg-red-50 rounded transition-colors" 
                                            title="Xu·∫•t PDF">
                                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
                                        </svg>
                                    </button>
                                    <button onclick="exportTemplate(@template.TemplateId, 'excel')" 
                                            class="export-btn p-2 text-green-600 hover:bg-green-50 rounded transition-colors" 
                                            title="Xu·∫•t Excel">
                                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                        </svg>
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center py-8">
                    <svg class="w-12 h-12 mx-auto mb-4 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                    </svg>
                    <p class="text-gray-500">Ch∆∞a c√≥ m·∫´u b√°o c√°o n√†o</p>
                </div>
            }
        </div>

        <!-- Custom Date Range Export -->
        <div class="bg-white rounded-lg shadow-md p-6">
            <h2 class="text-lg font-semibold text-gray-900 mb-4">üîß B√°o c√°o t√πy ch·ªânh</h2>
            
            <form id="customReportForm" class="space-y-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Lo·∫°i b√°o c√°o</label>
                    <select id="reportType" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <option value="performance">Hi·ªáu su·∫•t gi·∫£ng d·∫°y</option>
                        <option value="attendance">ƒêi·ªÉm danh chi ti·∫øt</option>
                        <option value="class_analysis">Ph√¢n t√≠ch l·ªõp h·ªçc</option>
                        <option value="student_progress">Ti·∫øn ƒë·ªô h·ªçc vi√™n</option>
                    </select>
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Kho·∫£ng th·ªùi gian</label>
                    <div class="grid grid-cols-2 gap-3">
                        <input type="date" id="startDate" class="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <input type="date" id="endDate" class="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                    </div>
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">ƒê·ªãnh d·∫°ng xu·∫•t</label>
                    <div class="flex gap-4">
                        <label class="flex items-center">
                            <input type="radio" name="format" value="pdf" checked class="mr-2">
                            <span class="text-sm">PDF</span>
                        </label>
                        <label class="flex items-center">
                            <input type="radio" name="format" value="excel" class="mr-2">
                            <span class="text-sm">Excel</span>
                        </label>
                    </div>
                </div>

                <button type="submit" class="w-full py-2 px-4 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
                    <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                    </svg>
                    Xu·∫•t b√°o c√°o
                </button>
            </form>
        </div>
    </div>

    <!-- Recent Exports -->
    <div class="bg-white rounded-lg shadow-md p-6 mt-8">
        <h2 class="text-lg font-semibold text-gray-900 mb-4">üïê L·ªãch s·ª≠ xu·∫•t b√°o c√°o</h2>
        <div class="text-center py-8 text-gray-500">
            <p>T√≠nh nƒÉng ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn</p>
        </div>
    </div>
</div>

<!-- Loading Overlay -->
<div id="loadingOverlay" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50">
    <div class="bg-white rounded-lg p-6 flex items-center space-x-4">
        <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
        <span class="text-gray-700">ƒêang xu·∫•t b√°o c√°o...</span>
    </div>
</div>

@section Scripts {
    <script>
        // Initialize date inputs
        document.addEventListener('DOMContentLoaded', function() {
            const endDate = new Date();
            const startDate = new Date();
            startDate.setDate(startDate.getDate() - 30);

            document.getElementById('startDate').value = startDate.toISOString().split('T')[0];
            document.getElementById('endDate').value = endDate.toISOString().split('T')[0];
        });

        // Quick export function
        function quickExport(reportType) {
            showLoading();
            
            const params = {
                reportType: reportType,
                format: 'pdf'
            };

            // Add date ranges based on report type
            const today = new Date();
            switch(reportType) {
                case 'monthly_performance':
                    params.startDate = new Date(today.getFullYear(), today.getMonth(), 1).toISOString();
                    params.endDate = today.toISOString();
                    break;
                case 'attendance_report':
                    const weekAgo = new Date(today);
                    weekAgo.setDate(weekAgo.getDate() - 7);
                    params.startDate = weekAgo.toISOString();
                    params.endDate = today.toISOString();
                    break;
                case 'salary_report':
                    const threeMonthsAgo = new Date(today);
                    threeMonthsAgo.setMonth(threeMonthsAgo.getMonth() - 3);
                    params.startDate = threeMonthsAgo.toISOString();
                    params.endDate = today.toISOString();
                    break;
            }

            exportReport(params);
        }

        // Export template
        function exportTemplate(templateId, format) {
            showLoading();
            
            const params = {
                templateId: templateId,
                format: format
            };

            exportReport(params);
        }

        // Custom report form submission
        document.getElementById('customReportForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const reportType = document.getElementById('reportType').value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            const format = document.querySelector('input[name="format"]:checked').value;

            if (!startDate || !endDate) {
                showNotification('error', 'Vui l√≤ng ch·ªçn kho·∫£ng th·ªùi gian');
                return;
            }

            showLoading();
            
            const params = {
                reportType: reportType,
                startDate: new Date(startDate).toISOString(),
                endDate: new Date(endDate).toISOString(),
                format: format
            };

            exportReport(params);
        });

        // Export report function
        function exportReport(params) {
            fetch('@Url.Action("ExportTrainerReport", "Analytics")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                },
                body: JSON.stringify(params)
            })
            .then(response => {
                if (response.ok) {
                    return response.blob();
                } else {
                    return response.json().then(data => {
                        throw new Error(data.message || 'C√≥ l·ªói x·∫£y ra');
                    });
                }
            })
            .then(blob => {
                // Create download link
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = `trainer_report_${Date.now()}.${params.format}`;
                document.body.appendChild(a);
                a.click();
                window.URL.revokeObjectURL(url);
                
                hideLoading();
                showNotification('success', 'Xu·∫•t b√°o c√°o th√†nh c√¥ng!');
            })
            .catch(error => {
                hideLoading();
                showNotification('error', error.message || 'C√≥ l·ªói x·∫£y ra khi xu·∫•t b√°o c√°o');
            });
        }

        // Show/hide loading
        function showLoading() {
            document.getElementById('loadingOverlay').classList.remove('hidden');
        }

        function hideLoading() {
            document.getElementById('loadingOverlay').classList.add('hidden');
        }

        // Show notification
        function showNotification(type, message) {
            const toast = document.createElement('div');
            toast.className = `fixed top-4 right-4 z-50 p-4 rounded-md shadow-lg ${
                type === 'success' ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'
            }`;

            toast.innerHTML = `
                <div class="flex">
                    <div class="flex-shrink-0">
                        ${type === 'success'
                            ? '<svg class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" /></svg>'
                            : '<svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" /></svg>'
                        }
                    </div>
                    <div class="ml-3">
                        <p class="text-sm font-medium ${type === 'success' ? 'text-green-800' : 'text-red-800'}">${message}</p>
                    </div>
                </div>
            `;

            document.body.appendChild(toast);

            setTimeout(() => {
                if (toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 5000);
        }
    </script>
}
