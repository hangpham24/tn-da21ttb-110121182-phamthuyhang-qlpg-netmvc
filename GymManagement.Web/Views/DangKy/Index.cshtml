@model IEnumerable<GymManagement.Web.Data.Models.DangKy>
@{
    ViewData["Title"] = "Qu·∫£n l√Ω ƒëƒÉng k√Ω";
    Layout = "_Layout";
}

<div class="p-6">
    <!-- Header -->
    <div class="flex justify-between items-center mb-8">
        <div>
            <h1 class="text-3xl font-bold text-gray-900 mb-2">üìÖ Qu·∫£n l√Ω ƒëƒÉng k√Ω</h1>
            <p class="text-gray-600">Qu·∫£n l√Ω t·∫•t c·∫£ ƒëƒÉng k√Ω g√≥i t·∫≠p v√† l·ªõp h·ªçc c·ªßa th√†nh vi√™n</p>
        </div>
        <div class="flex gap-3">
            @if (User.IsInRole("Admin"))
            {
                <a href="@Url.Action("Create")" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                    ‚ûï T·∫°o ƒëƒÉng k√Ω m·ªõi
                </a>
            }
            <a href="@Url.Action("ActiveRegistrations")" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                ‚úÖ ƒêang ho·∫°t ƒë·ªông
            </a>
            <a href="@Url.Action("ExpiredRegistrations")" class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                ‚è∞ ƒê√£ h·∫øt h·∫°n
            </a>
        </div>
    </div>

    <!-- Filters -->
    <form method="get" class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">T√¨m ki·∫øm</label>
                <input type="text" name="searchTerm" value="@ViewBag.SearchTerm" placeholder="T√¨m theo t√™n th√†nh vi√™n..."
                       class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Tr·∫°ng th√°i</label>
                <select name="status" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                    <option value="">T·∫•t c·∫£ tr·∫°ng th√°i</option>
                    <option value="ACTIVE" selected="@(ViewBag.Status == "ACTIVE" ? "selected" : null)">ƒêang ho·∫°t ƒë·ªông</option>
                    <option value="EXPIRED" selected="@(ViewBag.Status == "EXPIRED" ? "selected" : null)">ƒê√£ h·∫øt h·∫°n</option>
                    <option value="CANCELLED" selected="@(ViewBag.Status == "CANCELLED" ? "selected" : null)">ƒê√£ h·ªßy</option>
                    <option value="PENDING" selected="@(ViewBag.Status == "PENDING" ? "selected" : null)">Ch·ªù x·ª≠ l√Ω</option>
                </select>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Lo·∫°i ƒëƒÉng k√Ω</label>
                <select name="type" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                    <option value="">T·∫•t c·∫£ lo·∫°i</option>
                    <option value="PACKAGE" selected="@(ViewBag.Type == "PACKAGE" ? "selected" : null)">G√≥i t·∫≠p</option>
                    <option value="CLASS" selected="@(ViewBag.Type == "CLASS" ? "selected" : null)">L·ªõp h·ªçc</option>
                </select>
            </div>
            <div class="flex items-end gap-2">
                <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md font-medium transition-colors">
                    üîç T√¨m ki·∫øm
                </button>
                <a href="@Url.Action("Index")" class="bg-gray-100 hover:bg-gray-200 text-gray-700 px-4 py-2 rounded-md font-medium transition-colors">
                    üóëÔ∏è X√≥a b·ªô l·ªçc
                </a>
            </div>
        </div>
    </form>

    <!-- Registrations Table -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Th√†nh vi√™n</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Lo·∫°i ƒëƒÉng k√Ω</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Th·ªùi gian</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tr·∫°ng th√°i</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Thao t√°c</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200" id="registrationsTableBody">
                    @foreach (var dangKy in Model)
                    {
                        <tr class="hover:bg-gray-50 registration-row" 
                            data-member="@(dangKy.NguoiDung?.Ho + " " + dangKy.NguoiDung?.Ten)"
                            data-status="@dangKy.TrangThai"
                            data-type="@(dangKy.GoiTapId.HasValue ? "PACKAGE" : "CLASS")">
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center">
                                    <div class="flex-shrink-0 h-10 w-10">
                                        @if (!string.IsNullOrEmpty(dangKy.NguoiDung?.AnhDaiDien))
                                        {
                                            <img class="h-10 w-10 rounded-full object-cover" src="@dangKy.NguoiDung.AnhDaiDien" alt="Avatar">
                                        }
                                        else
                                        {
                                            <div class="h-10 w-10 rounded-full bg-gray-300 flex items-center justify-center">
                                                <span class="text-sm font-medium text-gray-700">@((!string.IsNullOrEmpty(dangKy.NguoiDung?.Ho) && dangKy.NguoiDung.Ho.Length > 0) ? dangKy.NguoiDung.Ho.Substring(0, 1).ToUpper() : "?")</span>
                                            </div>
                                        }
                                    </div>
                                    <div class="ml-4">
                                        <div class="text-sm font-medium text-gray-900">@dangKy.NguoiDung?.Ho @dangKy.NguoiDung?.Ten</div>
                                        <div class="text-sm text-gray-500">@dangKy.NguoiDung?.Email</div>
                                    </div>
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                @if (dangKy.GoiTapId.HasValue)
                                {
                                    <div class="flex items-center">
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                            üí≥ G√≥i t·∫≠p
                                        </span>
                                        <div class="ml-2">
                                            <div class="text-sm font-medium text-gray-900">@dangKy.GoiTap?.TenGoi</div>
                                            <div class="text-sm text-gray-500">@dangKy.GoiTap?.Gia.ToString("N0") VNƒê</div>
                                        </div>
                                    </div>
                                }
                                else if (dangKy.LopHocId.HasValue)
                                {
                                    <div class="flex items-center">
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                            üéì L·ªõp h·ªçc
                                        </span>
                                        <div class="ml-2">
                                            <div class="text-sm font-medium text-gray-900">@dangKy.LopHoc?.TenLop</div>
                                            <div class="text-sm text-gray-500">HLV ID: @dangKy.LopHoc?.HlvId</div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                                        KH√ÅCH V√ÉNG LAI
                                    </span>
                                }
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                <div>
                                    <div class="font-medium">@dangKy.NgayBatDau.ToString("dd/MM/yyyy")</div>
                                    <div class="text-gray-500">ƒë·∫øn @dangKy.NgayKetThuc.ToString("dd/MM/yyyy")</div>
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                @switch (dangKy.TrangThai)
                                {
                                    case "ACTIVE":
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                            ‚úÖ ƒêang ho·∫°t ƒë·ªông
                                        </span>
                                        break;
                                    case "EXPIRED":
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                                            ‚è∞ ƒê√£ h·∫øt h·∫°n
                                        </span>
                                        break;
                                    case "CANCELLED":
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                                            ‚ùå ƒê√£ h·ªßy
                                        </span>
                                        break;
                                    case "PENDING":
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
                                            ‚è≥ Ch·ªù x·ª≠ l√Ω
                                        </span>
                                        break;
                                    default:
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                                            @dangKy.TrangThai
                                        </span>
                                        break;
                                }
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                <div class="flex space-x-2">
                                    <a href="@Url.Action("Details", new { id = dangKy.DangKyId })" 
                                       class="text-blue-600 hover:text-blue-900" title="Xem chi ti·∫øt">
                                        üëÅÔ∏è
                                    </a>
                                    @if (dangKy.TrangThai == "ACTIVE" && User.IsInRole("Admin"))
                                    {
                                        <button type="button" onclick="showExtendModal(@dangKy.DangKyId, '@(dangKy.NguoiDung?.Ho + " " + dangKy.NguoiDung?.Ten)')" 
                                                class="text-green-600 hover:text-green-900" title="Gia h·∫°n">
                                            ‚è∞
                                        </button>
                                        <button type="button" onclick="showCancelModal(@dangKy.DangKyId, '@(dangKy.NguoiDung?.Ho + " " + dangKy.NguoiDung?.Ten)')" 
                                                class="text-red-600 hover:text-red-900" title="H·ªßy ƒëƒÉng k√Ω">
                                            ‚ùå
                                        </button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        
        @if (!Model.Any())
        {
            <div class="text-center py-12">
                <div class="text-gray-400 text-6xl mb-4">üìÖ</div>
                <h3 class="text-lg font-medium text-gray-900 mb-2">Ch∆∞a c√≥ ƒëƒÉng k√Ω n√†o</h3>
                <p class="text-gray-500 mb-4">B·∫Øt ƒë·∫ßu b·∫±ng c√°ch t·∫°o ƒëƒÉng k√Ω m·ªõi cho th√†nh vi√™n.</p>
                @if (User.IsInRole("Admin"))
                {
                    <a href="@Url.Action("Create")" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                        ‚ûï T·∫°o ƒëƒÉng k√Ω m·ªõi
                    </a>
                }
            </div>
        }
    </div>

    <!-- Pagination -->
    @if (ViewBag.TotalPages > 1)
    {
        <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6 mt-6 rounded-lg shadow-sm">
            <div class="flex-1 flex justify-between sm:hidden">
                @if (ViewBag.CurrentPage > 1)
                {
                    <a href="@Url.Action("Index", new { page = ViewBag.CurrentPage - 1, searchTerm = ViewBag.SearchTerm, status = ViewBag.Status, type = ViewBag.Type })"
                       class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                        Tr∆∞·ªõc
                    </a>
                }
                @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                {
                    <a href="@Url.Action("Index", new { page = ViewBag.CurrentPage + 1, searchTerm = ViewBag.SearchTerm, status = ViewBag.Status, type = ViewBag.Type })"
                       class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                        Sau
                    </a>
                }
            </div>
            <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                <div>
                    <p class="text-sm text-gray-700">
                        Hi·ªÉn th·ªã <span class="font-medium">@((ViewBag.CurrentPage - 1) * ViewBag.PageSize + 1)</span> ƒë·∫øn
                        <span class="font-medium">@Math.Min(ViewBag.CurrentPage * ViewBag.PageSize, ViewBag.TotalCount)</span>
                        trong t·ªïng s·ªë <span class="font-medium">@ViewBag.TotalCount</span> k·∫øt qu·∫£
                    </p>
                </div>
                <div>
                    <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                        @if (ViewBag.CurrentPage > 1)
                        {
                            <a href="@Url.Action("Index", new { page = ViewBag.CurrentPage - 1, searchTerm = ViewBag.SearchTerm, status = ViewBag.Status, type = ViewBag.Type })"
                               class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                <span class="sr-only">Tr∆∞·ªõc</span>
                                <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                                </svg>
                            </a>
                        }

                        @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                        {
                            @if (i == ViewBag.CurrentPage)
                            {
                                <span class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-blue-50 text-sm font-medium text-blue-600">
                                    @i
                                </span>
                            }
                            else
                            {
                                <a href="@Url.Action("Index", new { page = i, searchTerm = ViewBag.SearchTerm, status = ViewBag.Status, type = ViewBag.Type })"
                                   class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                                    @i
                                </a>
                            }
                        }

                        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                        {
                            <a href="@Url.Action("Index", new { page = ViewBag.CurrentPage + 1, searchTerm = ViewBag.SearchTerm, status = ViewBag.Status, type = ViewBag.Type })"
                               class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                <span class="sr-only">Sau</span>
                                <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                                </svg>
                            </a>
                        }
                    </nav>
                </div>
            </div>
        </div>
    }
</div>

<!-- Extend Modal -->
<div id="extendModal" class="fixed inset-0 z-50 overflow-y-auto hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
        <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
            <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                <div class="sm:flex sm:items-start">
                    <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-green-100 sm:mx-0 sm:h-10 sm:w-10">
                        <svg class="h-6 w-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                    </div>
                    <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
                        <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-title">Gia h·∫°n ƒëƒÉng k√Ω</h3>
                        <div class="mt-2">
                            <p class="text-sm text-gray-500">Gia h·∫°n ƒëƒÉng k√Ω cho th√†nh vi√™n: <span id="extendMemberName" class="font-medium"></span></p>
                            <div class="mt-4">
                                <label class="block text-sm font-medium text-gray-700">S·ªë th√°ng gia h·∫°n</label>
                                <input type="number" id="additionalMonths" min="1" max="12" value="1" 
                                       class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                <button type="button" id="confirmExtend" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-green-600 text-base font-medium text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 sm:ml-3 sm:w-auto sm:text-sm">
                    Gia h·∫°n
                </button>
                <button type="button" onclick="hideExtendModal()" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
                    H·ªßy
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Cancel Modal -->
<div id="cancelModal" class="fixed inset-0 z-50 overflow-y-auto hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
        <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
            <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                <div class="sm:flex sm:items-start">
                    <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
                        <svg class="h-6 w-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                        </svg>
                    </div>
                    <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
                        <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-title">H·ªßy ƒëƒÉng k√Ω</h3>
                        <div class="mt-2">
                            <p class="text-sm text-gray-500">H·ªßy ƒëƒÉng k√Ω cho th√†nh vi√™n: <span id="cancelMemberName" class="font-medium"></span></p>
                            <div class="mt-4">
                                <label class="block text-sm font-medium text-gray-700">L√Ω do h·ªßy</label>
                                <textarea id="cancelReason" rows="3" 
                                          class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-red-500 focus:border-red-500"
                                          placeholder="Nh·∫≠p l√Ω do h·ªßy ƒëƒÉng k√Ω..."></textarea>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                <button type="button" id="confirmCancel" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm">
                    H·ªßy ƒëƒÉng k√Ω
                </button>
                <button type="button" onclick="hideCancelModal()" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
                    ƒê√≥ng
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentRegistrationId = null;

        // No client-side filtering needed - using server-side filtering

        // Extend modal functions
        function showExtendModal(registrationId, memberName) {
            currentRegistrationId = registrationId;
            document.getElementById('extendMemberName').textContent = memberName;
            document.getElementById('additionalMonths').value = 1;
            document.getElementById('extendModal').classList.remove('hidden');
        }

        function hideExtendModal() {
            document.getElementById('extendModal').classList.add('hidden');
            currentRegistrationId = null;
        }

        document.getElementById('confirmExtend').addEventListener('click', function() {
            const additionalMonths = document.getElementById('additionalMonths').value;
            if (currentRegistrationId && additionalMonths) {
                extendRegistration(currentRegistrationId, additionalMonths);
            }
        });

        function extendRegistration(registrationId, additionalMonths) {
            GymApp.showLoading(document.getElementById('confirmExtend'));
            
            fetch('@Url.Action("Extend")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                },
                body: `id=${registrationId}&additionalMonths=${additionalMonths}`
            })
            .then(response => response.json())
            .then(data => {
                GymApp.hideLoading(document.getElementById('confirmExtend'));
                if (data.success) {
                    showNotification(data.message, 'success');
                    hideExtendModal();
                    location.reload();
                } else {
                    showNotification(data.message, 'error');
                }
            })
            .catch(error => {
                GymApp.hideLoading(document.getElementById('confirmExtend'));
                showNotification('C√≥ l·ªói x·∫£y ra khi gia h·∫°n ƒëƒÉng k√Ω.', 'error');
                console.error('Extend error:', error);
            });
        }

        // Cancel modal functions
        function showCancelModal(registrationId, memberName) {
            currentRegistrationId = registrationId;
            document.getElementById('cancelMemberName').textContent = memberName;
            document.getElementById('cancelReason').value = '';
            document.getElementById('cancelModal').classList.remove('hidden');
        }

        function hideCancelModal() {
            document.getElementById('cancelModal').classList.add('hidden');
            currentRegistrationId = null;
        }

        document.getElementById('confirmCancel').addEventListener('click', function() {
            const reason = document.getElementById('cancelReason').value.trim();
            if (currentRegistrationId && reason) {
                cancelRegistration(currentRegistrationId, reason);
            } else {
                showNotification('Vui l√≤ng nh·∫≠p l√Ω do h·ªßy ƒëƒÉng k√Ω.', 'warning');
            }
        });

        function cancelRegistration(registrationId, reason) {
            GymApp.showLoading(document.getElementById('confirmCancel'));
            
            fetch('@Url.Action("Cancel")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                },
                body: `id=${registrationId}&reason=${encodeURIComponent(reason)}`
            })
            .then(response => response.json())
            .then(data => {
                GymApp.hideLoading(document.getElementById('confirmCancel'));
                if (data.success) {
                    showNotification(data.message, 'success');
                    hideCancelModal();
                    location.reload();
                } else {
                    showNotification(data.message, 'error');
                }
            })
            .catch(error => {
                GymApp.hideLoading(document.getElementById('confirmCancel'));
                showNotification('C√≥ l·ªói x·∫£y ra khi h·ªßy ƒëƒÉng k√Ω.', 'error');
                console.error('Cancel error:', error);
            });
        }
    </script>
}
