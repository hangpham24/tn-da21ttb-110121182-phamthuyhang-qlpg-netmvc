@model IEnumerable<GymManagement.Web.Data.Models.MauMat>
@{
    ViewData["Title"] = "Qu·∫£n l√Ω khu√¥n m·∫∑t";
    Layout = "_MemberLayout";
}

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Header -->
    <div class="mb-8">
        <div class="flex items-center justify-between mb-4">
            <div>
                <h1 class="text-3xl font-bold text-gray-900">üëÅÔ∏è Qu·∫£n l√Ω khu√¥n m·∫∑t</h1>
                <p class="text-gray-600 mt-2">Qu·∫£n l√Ω khu√¥n m·∫∑t ƒë·ªÉ s·ª≠ d·ª•ng t√≠nh nƒÉng check-in t·ª± ƒë·ªông</p>
            </div>
            <a asp-action="Register" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors">
                ‚ûï ƒêƒÉng k√Ω khu√¥n m·∫∑t m·ªõi
            </a>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
        <div class="bg-white rounded-lg shadow-md p-6">
            <div class="flex items-center">
                <div class="p-3 rounded-full bg-blue-100 text-blue-600">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                    </svg>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600">Khu√¥n m·∫∑t ƒë√£ ƒëƒÉng k√Ω</p>
                    <p class="text-2xl font-bold text-gray-900">@ViewBag.FaceCount</p>
                </div>
            </div>
        </div>

        <div class="bg-white rounded-lg shadow-md p-6">
            <div class="flex items-center">
                <div class="p-3 rounded-full bg-green-100 text-green-600">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600">Tr·∫°ng th√°i</p>
                    <p class="text-lg font-bold text-green-600">
                        @(ViewBag.FaceCount > 0 ? "ƒê√£ k√≠ch ho·∫°t" : "Ch∆∞a k√≠ch ho·∫°t")
                    </p>
                </div>
            </div>
        </div>

        <div class="bg-white rounded-lg shadow-md p-6">
            <div class="flex items-center">
                <div class="p-3 rounded-full bg-purple-100 text-purple-600">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                    </svg>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600">Thu·∫≠t to√°n</p>
                    <p class="text-lg font-bold text-gray-900">Face-API.js</p>
                </div>
            </div>
        </div>

        <div class="bg-white rounded-lg shadow-md p-6">
            <div class="flex items-center">
                <div class="p-3 rounded-full bg-yellow-100 text-yellow-600">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                    </svg>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600">B·∫£o m·∫≠t</p>
                    <p class="text-lg font-bold text-gray-900">Cao</p>
                </div>
            </div>
        </div>
    </div>

    @if (Model.Any())
    {
        <!-- Face List -->
        <div class="bg-white rounded-lg shadow-md overflow-hidden">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-semibold text-gray-900">üìã Danh s√°ch khu√¥n m·∫∑t</h3>
            </div>
            <div class="divide-y divide-gray-200">
                @foreach (var face in Model)
                {
                    <div class="px-6 py-4 hover:bg-gray-50 transition-colors">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-4">
                                <div class="flex-shrink-0">
                                    <div class="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center">
                                        <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                        </svg>
                                    </div>
                                </div>
                                <div>
                                    <p class="text-sm font-medium text-gray-900">Khu√¥n m·∫∑t #@face.MauMatId</p>
                                    <p class="text-sm text-gray-500">ƒêƒÉng k√Ω: @face.NgayTao.ToString("dd/MM/yyyy HH:mm")</p>
                                    <p class="text-xs text-gray-400">Thu·∫≠t to√°n: @face.ThuatToan</p>
                                </div>
                            </div>
                            <div class="flex items-center space-x-2">
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                    ‚úÖ Ho·∫°t ƒë·ªông
                                </span>
                                <div class="flex space-x-1">
                                    <button onclick="updateFace(@face.MauMatId)" 
                                            class="text-blue-600 hover:text-blue-800 p-2 rounded-md hover:bg-blue-50 transition-colors"
                                            title="C·∫≠p nh·∫≠t khu√¥n m·∫∑t">
                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                        </svg>
                                    </button>
                                    <button onclick="deleteFace(@face.MauMatId)" 
                                            class="text-red-600 hover:text-red-800 p-2 rounded-md hover:bg-red-50 transition-colors"
                                            title="X√≥a khu√¥n m·∫∑t">
                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                        </svg>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <!-- Empty State -->
        <div class="bg-white rounded-lg shadow-md p-12 text-center">
            <div class="w-24 h-24 mx-auto mb-6 bg-gray-100 rounded-full flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                </svg>
            </div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">Ch∆∞a c√≥ khu√¥n m·∫∑t n√†o ƒë∆∞·ª£c ƒëƒÉng k√Ω</h3>
            <p class="text-gray-500 mb-6">ƒêƒÉng k√Ω khu√¥n m·∫∑t ƒë·ªÉ s·ª≠ d·ª•ng t√≠nh nƒÉng check-in t·ª± ƒë·ªông b·∫±ng nh·∫≠n di·ªán khu√¥n m·∫∑t.</p>
            <a asp-action="Register" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors inline-flex items-center">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
                ƒêƒÉng k√Ω khu√¥n m·∫∑t ƒë·∫ßu ti√™n
            </a>
        </div>
    }

    <!-- Information Cards -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mt-8">
        <!-- How it works -->
        <div class="bg-white rounded-lg shadow-md p-6">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">üîç C√°ch th·ª©c ho·∫°t ƒë·ªông</h3>
            <div class="space-y-3 text-sm text-gray-600">
                <div class="flex items-start">
                    <span class="flex-shrink-0 w-6 h-6 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-xs font-bold mr-3 mt-0.5">1</span>
                    <p>H·ªá th·ªëng ch·ª•p ·∫£nh khu√¥n m·∫∑t v√† t·∫°o "d·∫•u v√¢n tay s·ªë" duy nh·∫•t</p>
                </div>
                <div class="flex items-start">
                    <span class="flex-shrink-0 w-6 h-6 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-xs font-bold mr-3 mt-0.5">2</span>
                    <p>D·ªØ li·ªáu ƒë∆∞·ª£c m√£ h√≥a v√† l∆∞u tr·ªØ an to√†n (kh√¥ng l∆∞u ·∫£nh g·ªëc)</p>
                </div>
                <div class="flex items-start">
                    <span class="flex-shrink-0 w-6 h-6 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-xs font-bold mr-3 mt-0.5">3</span>
                    <p>Khi check-in, camera so s√°nh khu√¥n m·∫∑t v·ªõi d·ªØ li·ªáu ƒë√£ l∆∞u</p>
                </div>
                <div class="flex items-start">
                    <span class="flex-shrink-0 w-6 h-6 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-xs font-bold mr-3 mt-0.5">4</span>
                    <p>N·∫øu kh·ªõp > 60%, h·ªá th·ªëng t·ª± ƒë·ªông check-in cho b·∫°n</p>
                </div>
            </div>
        </div>

        <!-- Security & Privacy -->
        <div class="bg-white rounded-lg shadow-md p-6">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">üîí B·∫£o m·∫≠t & Quy·ªÅn ri√™ng t∆∞</h3>
            <div class="space-y-3 text-sm text-gray-600">
                <div class="flex items-center">
                    <svg class="w-4 h-4 text-green-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <p>Kh√¥ng l∆∞u tr·ªØ ·∫£nh khu√¥n m·∫∑t g·ªëc</p>
                </div>
                <div class="flex items-center">
                    <svg class="w-4 h-4 text-green-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <p>D·ªØ li·ªáu ƒë∆∞·ª£c m√£ h√≥a AES-256</p>
                </div>
                <div class="flex items-center">
                    <svg class="w-4 h-4 text-green-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <p>Ch·ªâ b·∫°n m·ªõi c√≥ th·ªÉ qu·∫£n l√Ω khu√¥n m·∫∑t c·ªßa m√¨nh</p>
                </div>
                <div class="flex items-center">
                    <svg class="w-4 h-4 text-green-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <p>C√≥ th·ªÉ x√≥a ho√†n to√†n b·∫•t c·ª© l√∫c n√†o</p>
                </div>
                <div class="flex items-center">
                    <svg class="w-4 h-4 text-green-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <p>Tu√¢n th·ªß chu·∫©n b·∫£o m·∫≠t GDPR</p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateFace(mauMatId) {
            // Redirect to update page or show modal
            alert('T√≠nh nƒÉng c·∫≠p nh·∫≠t khu√¥n m·∫∑t s·∫Ω ƒë∆∞·ª£c tri·ªÉn khai trong phi√™n b·∫£n ti·∫øp theo.');
        }

        async function deleteFace(mauMatId) {
            if (!confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a khu√¥n m·∫∑t n√†y?')) {
                return;
            }

            try {
                const response = await fetch(`@Url.Action("DeleteFace")?mauMatId=${mauMatId}`, {
                    method: 'DELETE',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    }
                });

                const result = await response.json();

                if (result.success) {
                    alert('‚úÖ ' + result.message);
                    location.reload();
                } else {
                    if (result.isLastFace) {
                        if (confirm(result.message)) {
                            // Force delete last face
                            const forceResponse = await fetch(`@Url.Action("ForceDeleteFace")?mauMatId=${mauMatId}`, {
                                method: 'DELETE',
                                headers: {
                                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                                }
                            });

                            const forceResult = await forceResponse.json();
                            alert(forceResult.success ? '‚úÖ ' + forceResult.message : '‚ùå ' + forceResult.message);
                            location.reload();
                        }
                    } else {
                        alert('‚ùå ' + result.message);
                    }
                }
            } catch (error) {
                console.error('Error deleting face:', error);
                alert('C√≥ l·ªói x·∫£y ra khi x√≥a khu√¥n m·∫∑t. Vui l√≤ng th·ª≠ l·∫°i.');
            }
        }
    </script>
}
