@{
    ViewData["Title"] = "Dashboard Admin";
    Layout = "_Layout";
}

@section Styles {
    <style>
        .stat-card {
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
            border-left: 4px solid #3b82f6;
        }
        .stat-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
        .stat-number {
            font-size: 2.5rem;
            font-weight: bold;
            color: #1f2937;
        }
        .stat-label {
            color: #6b7280;
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }
        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid #f3f3f3;
            border-top: 3px solid #3498db;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }
        @@keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        .chart-container {
            position: relative;
            height: 300px;
        }
    </style>
}

<div class="p-6">
    <!-- Header -->
    <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-900 mb-2">üìä Dashboard Admin</h1>
        <p class="text-gray-600">T·ªïng quan h·ªá th·ªëng qu·∫£n l√Ω ph√≤ng gym</p>
        <div class="text-sm text-gray-500 mt-2">
            C·∫≠p nh·∫≠t l·∫ßn cu·ªëi: <span id="lastUpdated">-</span>
        </div>
    </div>

    <!-- Quick Stats Cards -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <!-- Total Members -->
        <div class="bg-white rounded-lg shadow-md p-6 stat-card">
            <div class="flex items-center justify-between">
                <div>
                    <div class="stat-label">T·ªïng th√†nh vi√™n</div>
                    <div class="stat-number" id="totalMembers">
                        <div class="loading"></div>
                    </div>
                </div>
                <div class="text-blue-500 text-3xl">
                    üë•
                </div>
            </div>
        </div>

        <!-- Total Trainers -->
        <div class="bg-white rounded-lg shadow-md p-6 stat-card">
            <div class="flex items-center justify-between">
                <div>
                    <div class="stat-label">T·ªïng HLV</div>
                    <div class="stat-number" id="totalTrainers">
                        <div class="loading"></div>
                    </div>
                </div>
                <div class="text-green-500 text-3xl">
                    üí™
                </div>
            </div>
        </div>

        <!-- Total Classes -->
        <div class="bg-white rounded-lg shadow-md p-6 stat-card">
            <div class="flex items-center justify-between">
                <div>
                    <div class="stat-label">T·ªïng l·ªõp h·ªçc</div>
                    <div class="stat-number" id="totalClasses">
                        <div class="loading"></div>
                    </div>
                </div>
                <div class="text-purple-500 text-3xl">
                    üèãÔ∏è
                </div>
            </div>
        </div>

        <!-- Total Packages -->
        <div class="bg-white rounded-lg shadow-md p-6 stat-card">
            <div class="flex items-center justify-between">
                <div>
                    <div class="stat-label">T·ªïng g√≥i t·∫≠p</div>
                    <div class="stat-number" id="totalPackages">
                        <div class="loading"></div>
                    </div>
                </div>
                <div class="text-orange-500 text-3xl">
                    üì¶
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Section -->
    <div class="grid grid-cols-1 lg:grid-cols-1 gap-6 mb-8">
        <!-- Revenue Chart -->
        <div class="bg-white rounded-lg shadow-md p-6">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">üìä Doanh thu 7 ng√†y g·∫ßn ƒë√¢y</h3>
            <div class="chart-container">
                <canvas id="revenueChart"></canvas>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="bg-white rounded-lg shadow-md p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">‚ö° Thao t√°c nhanh</h3>
        <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
            <a href="/NguoiDung" class="flex items-center justify-center p-4 bg-blue-50 rounded-lg hover:bg-blue-100 transition-colors">
                <div class="text-center">
                    <div class="text-2xl mb-2">üë•</div>
                    <div class="text-sm font-medium">Qu·∫£n l√Ω th√†nh vi√™n</div>
                </div>
            </a>
            <a href="/LopHoc" class="flex items-center justify-center p-4 bg-green-50 rounded-lg hover:bg-green-100 transition-colors">
                <div class="text-center">
                    <div class="text-2xl mb-2">üèãÔ∏è</div>
                    <div class="text-sm font-medium">Qu·∫£n l√Ω l·ªõp h·ªçc</div>
                </div>
            </a>
            <a href="/ThanhToan" class="flex items-center justify-center p-4 bg-yellow-50 rounded-lg hover:bg-yellow-100 transition-colors">
                <div class="text-center">
                    <div class="text-2xl mb-2">üí∞</div>
                    <div class="text-sm font-medium">Thanh to√°n</div>
                </div>
            </a>
            <a href="/BaoCao" class="flex items-center justify-center p-4 bg-purple-50 rounded-lg hover:bg-purple-100 transition-colors">
                <div class="text-center">
                    <div class="text-2xl mb-2">üìä</div>
                    <div class="text-sm font-medium">B√°o c√°o</div>
                </div>
            </a>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let revenueChart;

        // Format currency
        function formatCurrency(amount) {
            return new Intl.NumberFormat('vi-VN', {
                style: 'currency',
                currency: 'VND'
            }).format(amount);
        }

        // Format number
        function formatNumber(num) {
            return new Intl.NumberFormat('vi-VN').format(num);
        }

        // Load dashboard data
        async function loadDashboardData() {
            try {
                console.log('üöÄ Starting to load dashboard data...'); // Debug log

                const response = await fetch('/Home/GetRealtimeStats', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });
                console.log('üì° Response status:', response.status); // Debug log
                console.log('üì° Response headers:', response.headers); // Debug log

                if (!response.ok) {
                    const errorText = await response.text();
                    console.error('‚ùå HTTP Error:', response.status, errorText);
                    throw new Error(`HTTP error! status: ${response.status} - ${errorText}`);
                }

                const data = await response.json();
                console.log('‚úÖ Dashboard data received:', data); // Debug log

                // Check if data has expected properties
                if (!data || typeof data !== 'object') {
                    throw new Error('Invalid data format received');
                }

                // Update stats - 4 tr∆∞·ªùng v·ªõi fallback values
                const totalMembers = data.TotalMembers || data.totalMembers || 0;
                const totalTrainers = data.TotalTrainers || data.totalTrainers || 0;
                const totalClasses = data.TotalClasses || data.totalClasses || 0;
                const totalPackages = data.TotalPackages || data.totalPackages || 0;

                console.log('üìä Updating UI with:', { totalMembers, totalTrainers, totalClasses, totalPackages });

                document.getElementById('totalMembers').textContent = formatNumber(totalMembers);
                document.getElementById('totalTrainers').textContent = formatNumber(totalTrainers);
                document.getElementById('totalClasses').textContent = formatNumber(totalClasses);
                document.getElementById('totalPackages').textContent = formatNumber(totalPackages);

                const lastUpdated = data.LastUpdated || data.lastUpdated || new Date();
                document.getElementById('lastUpdated').textContent = new Date(lastUpdated).toLocaleString('vi-VN');

                console.log('‚úÖ Dashboard updated successfully!'); // Debug log

                // Load charts
                loadCharts();
            } catch (error) {
                console.error('‚ùå Error loading dashboard data:', error);
                // Show error state with actual error message
                document.querySelectorAll('.loading').forEach(el => {
                    el.parentElement.textContent = 'L·ªói';
                });

                // Show error notification
                alert('L·ªói t·∫£i d·ªØ li·ªáu Dashboard: ' + error.message);
            }
        }

        // Load charts v·ªõi d·ªØ li·ªáu m·∫´u
        function loadCharts() {
            // D·ªØ li·ªáu m·∫´u cho 7 ng√†y g·∫ßn ƒë√¢y
            const today = new Date();
            const last7Days = [];
            const revenueData = [];

            // T·∫°o labels cho 7 ng√†y g·∫ßn ƒë√¢y
            for (let i = 6; i >= 0; i--) {
                const date = new Date(today);
                date.setDate(date.getDate() - i);
                last7Days.push(date.toLocaleDateString('vi-VN', {
                    month: 'short',
                    day: 'numeric'
                }));
            }

            // D·ªØ li·ªáu doanh thu m·∫´u (VNƒê)
            revenueData.push(
                2500000,  // 6 ng√†y tr∆∞·ªõc
                3200000,  // 5 ng√†y tr∆∞·ªõc
                1800000,  // 4 ng√†y tr∆∞·ªõc
                4100000,  // 3 ng√†y tr∆∞·ªõc
                2900000,  // 2 ng√†y tr∆∞·ªõc
                3800000,  // H√¥m qua
                4500000   // H√¥m nay
            );

            console.log('üìä Loading revenue chart with sample data:', { last7Days, revenueData });

            // Revenue Chart
            const revenueCtx = document.getElementById('revenueChart').getContext('2d');
            if (revenueChart) revenueChart.destroy();
            revenueChart = new Chart(revenueCtx, {
                type: 'line',
                data: {
                    labels: last7Days,
                    datasets: [{
                        label: 'Doanh thu (VNƒê)',
                        data: revenueData,
                        borderColor: '#3b82f6',
                        backgroundColor: 'rgba(59, 130, 246, 0.1)',
                        tension: 0.4,
                        fill: true,
                        pointBackgroundColor: '#3b82f6',
                        pointBorderColor: '#ffffff',
                        pointBorderWidth: 2,
                        pointRadius: 6
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return 'Doanh thu: ' + new Intl.NumberFormat('vi-VN', {
                                        style: 'currency',
                                        currency: 'VND'
                                    }).format(context.parsed.y);
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return new Intl.NumberFormat('vi-VN', {
                                        style: 'currency',
                                        currency: 'VND',
                                        notation: 'compact'
                                    }).format(value);
                                }
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    }
                }
            });

            console.log('‚úÖ Revenue chart loaded successfully!');


        }

        // Initialize dashboard
        document.addEventListener('DOMContentLoaded', function() {
            loadDashboardData();

            // Auto refresh every 5 minutes
            setInterval(loadDashboardData, 5 * 60 * 1000);
        });
    </script>
}
