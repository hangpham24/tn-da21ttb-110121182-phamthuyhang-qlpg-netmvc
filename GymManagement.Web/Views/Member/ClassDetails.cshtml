@model GymManagement.Web.Data.Models.LopHoc

@{
    ViewData["Title"] = $"Chi ti·∫øt l·ªõp h·ªçc - {Model.TenLop}";
    Layout = "_MemberLayout";
    
    // Determine level and styling based on class name
    var gradientClass = "";
    var levelClass = "";
    var levelText = "";
    var iconEmoji = "";
    
    if (Model.TenLop.ToLower().Contains("n√¢ng cao") || Model.TenLop.ToLower().Contains("advanced"))
    {
        gradientClass = "from-red-500 to-pink-600";
        levelClass = "bg-red-100 text-red-800 border-red-200";
        levelText = "N√ÇNG CAO";
        iconEmoji = "üî•";
    }
    else if (Model.TenLop.ToLower().Contains("trung c·∫•p") || Model.TenLop.ToLower().Contains("intermediate"))
    {
        gradientClass = "from-yellow-500 to-orange-600";
        levelClass = "bg-yellow-100 text-yellow-800 border-yellow-200";
        levelText = "TRUNG C·∫§P";
        iconEmoji = "‚ö°";
    }
    else
    {
        gradientClass = "from-green-500 to-emerald-600";
        levelClass = "bg-green-100 text-green-800 border-green-200";
        levelText = "C∆† B·∫¢N";
        iconEmoji = "üå±";
    }
}

<div class="min-h-screen bg-gradient-to-br from-gray-50 via-blue-50 to-purple-50">
    <div class="container mx-auto px-4 py-8">
        <!-- Breadcrumb -->
        <nav class="flex items-center space-x-2 text-sm text-gray-600 mb-8">
            <a href="@Url.Action("Dashboard", "Member")" class="hover:text-blue-600 transition-colors">
                <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
                </svg>
                Dashboard
            </a>
            <span>‚Ä∫</span>
            <a href="@Url.Action("Classes", "Member")" class="hover:text-blue-600 transition-colors">L·ªõp h·ªçc</a>
            <span>‚Ä∫</span>
            <span class="text-gray-900 font-medium">Chi ti·∫øt</span>
        </nav>

        <!-- Main Content -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Class Details Card -->
            <div class="lg:col-span-2">
                <div class="bg-white rounded-2xl shadow-xl overflow-hidden border border-gray-100">
                    <!-- Header -->
                    <div class="bg-gradient-to-br @gradientClass text-white p-8 relative overflow-hidden">
                        <!-- Background Pattern -->
                        <div class="absolute inset-0 opacity-10">
                            <div class="absolute inset-0 bg-white bg-opacity-5"></div>
                            <div class="absolute top-0 right-0 w-40 h-40 bg-white bg-opacity-5 rounded-full -translate-y-20 translate-x-20"></div>
                            <div class="absolute bottom-0 left-0 w-32 h-32 bg-white bg-opacity-5 rounded-full translate-y-16 -translate-x-16"></div>
                        </div>

                        <div class="relative z-10">
                            <!-- Header with Icon and Level -->
                            <div class="flex items-start justify-between mb-6">
                                <div class="flex items-center space-x-4">
                                    <div class="w-16 h-16 bg-white bg-opacity-20 rounded-2xl flex items-center justify-center backdrop-blur-sm">
                                        <span class="text-3xl">@iconEmoji</span>
                                    </div>
                                    <div>
                                        <div class="@levelClass px-4 py-2 rounded-full text-sm font-bold border inline-block mb-2">
                                            @levelText
                                        </div>
                                        <h1 class="text-3xl font-bold leading-tight">@Model.TenLop</h1>
                                    </div>
                                </div>
                                
                                <!-- Status Badge -->
                                @if (Model.TrangThai == "OPEN")
                                {
                                    <div class="bg-green-400 text-green-900 px-4 py-2 rounded-full text-sm font-bold">
                                        ‚úÖ ƒêANG M·ªû
                                    </div>
                                }
                                else
                                {
                                    <div class="bg-gray-400 text-gray-900 px-4 py-2 rounded-full text-sm font-bold">
                                        ‚è∏Ô∏è T·∫†M ƒê√ìNG
                                    </div>
                                }
                            </div>

                            <!-- Quick Stats -->
                            <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                                <div class="text-center">
                                    <div class="text-2xl font-bold">@(Model.ThoiLuong ?? 0)</div>
                                    <div class="text-sm opacity-90">Ph√∫t</div>
                                </div>
                                <div class="text-center">
                                    <div class="text-2xl font-bold">@Model.SucChua</div>
                                    <div class="text-sm opacity-90">S·ª©c ch·ª©a</div>
                                </div>
                                <div class="text-center">
                                    <div class="text-2xl font-bold">@ViewBag.ActiveBookingCount</div>
                                    <div class="text-sm opacity-90">ƒê√£ booking</div>
                                </div>
                                <div class="text-center">
                                    <div class="text-2xl font-bold">@ViewBag.AvailableSlots</div>
                                    <div class="text-sm opacity-90">C√≤n tr·ªëng</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Content -->
                    <div class="p-8">
                        <!-- Description -->
                        @if (!string.IsNullOrEmpty(Model.MoTa))
                        {
                            <div class="mb-8">
                                <h2 class="text-xl font-bold text-gray-900 mb-4 flex items-center">
                                    <svg class="w-5 h-5 mr-2 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                    </svg>
                                    M√¥ t·∫£ l·ªõp h·ªçc
                                </h2>
                                <p class="text-gray-600 leading-relaxed">@Model.MoTa</p>
                            </div>
                        }

                        <!-- Class Details Grid -->
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
                            <!-- Schedule -->
                            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 p-6 rounded-xl border border-blue-100">
                                <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                                    <svg class="w-5 h-5 mr-2 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                    </svg>
                                    L·ªãch h·ªçc
                                </h3>
                                <div class="space-y-3">
                                    <div class="flex items-center justify-between">
                                        <span class="text-gray-600">Th·ªùi gian:</span>
                                        <span class="font-medium">@Model.GioBatDau.ToString("HH:mm") - @Model.GioKetThuc.ToString("HH:mm")</span>
                                    </div>
                                    <div class="flex items-center justify-between">
                                        <span class="text-gray-600">Th·ª© trong tu·∫ßn:</span>
                                        <span class="font-medium">@Model.ThuTrongTuan</span>
                                    </div>
                                    <div class="flex items-center justify-between">
                                        <span class="text-gray-600">Th·ªùi l∆∞·ª£ng:</span>
                                        <span class="font-medium">@(Model.ThoiLuong ?? 0) ph√∫t</span>
                                    </div>
                                </div>
                            </div>

                            <!-- Capacity -->
                            <div class="bg-gradient-to-r from-green-50 to-emerald-50 p-6 rounded-xl border border-green-100">
                                <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                                    <svg class="w-5 h-5 mr-2 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                                    </svg>
                                    S·ª©c ch·ª©a
                                </h3>
                                <div class="space-y-3">
                                    <div class="flex items-center justify-between">
                                        <span class="text-gray-600">T·ªëi ƒëa:</span>
                                        <span class="font-medium">@Model.SucChua ng∆∞·ªùi</span>
                                    </div>
                                    <div class="flex items-center justify-between">
                                        <span class="text-gray-600">ƒê√£ booking:</span>
                                        <span class="font-medium text-blue-600">@ViewBag.ActiveBookingCount ng∆∞·ªùi</span>
                                    </div>
                                    <div class="flex items-center justify-between">
                                        <span class="text-gray-600">C√≤n tr·ªëng:</span>
                                        <span class="font-medium text-green-600">@ViewBag.AvailableSlots ch·ªó</span>
                                    </div>
                                    
                                    <!-- Progress Bar -->
                                    @{
                                        var activeBookingCount = (int)ViewBag.ActiveBookingCount;
                                        var fillPercentage = Model.SucChua > 0 ? (double)activeBookingCount / Model.SucChua * 100 : 0;
                                    }
                                    <div class="mt-4">
                                        <div class="flex justify-between text-sm text-gray-600 mb-1">
                                            <span>T·ª∑ l·ªá l·∫•p ƒë·∫ßy</span>
                                            <span>@fillPercentage.ToString("F1")%</span>
                                        </div>
                                        <div class="w-full bg-gray-200 rounded-full h-2">
                                            <div class="bg-gradient-to-r from-green-400 to-green-600 h-2 rounded-full transition-all duration-300" 
                                                 style="width: @fillPercentage%"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="lg:col-span-1">
                <!-- Trainer Card -->
                @if (Model.Hlv != null)
                {
                    <div class="bg-white rounded-2xl shadow-lg p-6 mb-6 border border-gray-100">
                        <h3 class="text-lg font-bold text-gray-900 mb-4 flex items-center">
                            <svg class="w-5 h-5 mr-2 text-purple-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                            </svg>
                            Hu·∫•n luy·ªán vi√™n
                        </h3>
                        
                        <div class="flex items-center space-x-4 mb-4">
                            <div class="w-16 h-16 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center text-white font-bold text-xl">
                                @(Model.Hlv.Ho?.Substring(0, 1))@(Model.Hlv.Ten?.Substring(0, 1))
                            </div>
                            <div>
                                <h4 class="font-semibold text-gray-900">@Model.Hlv.Ho @Model.Hlv.Ten</h4>
                                <p class="text-sm text-gray-600">Hu·∫•n luy·ªán vi√™n chuy√™n nghi·ªáp</p>
                            </div>
                        </div>
                        
                        @if (!string.IsNullOrEmpty(Model.Hlv.Email))
                        {
                            <div class="flex items-center text-sm text-gray-600 mb-2">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                </svg>
                                @Model.Hlv.Email
                            </div>
                        }
                        
                        @if (!string.IsNullOrEmpty(Model.Hlv.SoDienThoai))
                        {
                            <div class="flex items-center text-sm text-gray-600">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                                </svg>
                                @Model.Hlv.SoDienThoai
                            </div>
                        }
                    </div>
                }

                <!-- Registration Card -->
                <div class="bg-white rounded-2xl shadow-lg p-6 border border-gray-100">
                    <h3 class="text-lg font-bold text-gray-900 mb-4 flex items-center">
                        <svg class="w-5 h-5 mr-2 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                        ƒêƒÉng k√Ω l·ªõp h·ªçc
                    </h3>
                    
                    @if (Model.TrangThai == "OPEN")
                    {
                        @if (ViewBag.IsUserRegistered == true)
                        {
                            <!-- User Already Registered -->
                            <div class="space-y-4">
                                <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
                                    <div class="flex items-center">
                                        <svg class="w-6 h-6 text-blue-500 mr-3" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                                        </svg>
                                        <div>
                                            <span class="text-base font-semibold text-blue-800">‚úÖ ƒê√£ ƒëƒÉng k√Ω</span>
                                            <p class="text-sm text-blue-700 mt-1">B·∫°n ƒë√£ ƒëƒÉng k√Ω l·ªõp h·ªçc n√†y th√†nh c√¥ng</p>
                                        </div>
                                    </div>
                                    @if (ViewBag.UserRegistration != null)
                                    {
                                        <div class="mt-3 pt-3 border-t border-blue-200">
                                            <div class="grid grid-cols-2 gap-3 text-sm">
                                                <div>
                                                    <span class="text-blue-600 font-medium">Ng√†y b·∫Øt ƒë·∫ßu:</span>
                                                    <span class="text-blue-800">@((ViewBag.UserRegistration as GymManagement.Web.Data.Models.DangKy)?.NgayBatDau.ToString("dd/MM/yyyy"))</span>
                                                </div>
                                                <div>
                                                    <span class="text-blue-600 font-medium">Ng√†y k·∫øt th√∫c:</span>
                                                    <span class="text-blue-800">@((ViewBag.UserRegistration as GymManagement.Web.Data.Models.DangKy)?.NgayKetThuc.ToString("dd/MM/yyyy"))</span>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>

                                <div class="flex space-x-3">
                                    <a asp-controller="Member" asp-action="MyRegistrations"
                                       class="flex-1 bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-4 rounded-xl transition-all duration-300 text-center">
                                        <span class="flex items-center justify-center">
                                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                                            </svg>
                                            Xem ƒëƒÉng k√Ω c·ªßa t√¥i
                                        </span>
                                    </a>
                                </div>
                            </div>
                        }
                        else if ((int)ViewBag.AvailableSlots > 0)
                        {
                            <!-- Available for Registration -->
                            <div class="space-y-4">
                                <div class="bg-green-50 border border-green-200 rounded-lg p-4">
                                    <div class="flex items-center">
                                        <svg class="w-5 h-5 text-green-500 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                                        </svg>
                                        <span class="text-sm font-medium text-green-800">C√≤n ch·ªó tr·ªëng</span>
                                    </div>
                                    <p class="text-xs text-green-700 mt-1">B·∫°n c√≥ th·ªÉ ƒëƒÉng k√Ω l·ªõp h·ªçc n√†y</p>
                                </div>

                                <button onclick="registerClass(@Model.LopHocId, '@Model.TenLop')"
                                        class="w-full bg-gradient-to-r @gradientClass hover:shadow-xl text-white font-semibold py-4 px-6 rounded-xl transition-all duration-300 transform hover:scale-[1.02] hover:-translate-y-1 group relative overflow-hidden">
                                    <!-- Button Background Effect -->
                                    <div class="absolute inset-0 bg-green-600 opacity-0 group-hover:opacity-10 transition-opacity duration-300"></div>

                                    <span class="relative flex items-center justify-center">
                                        <svg class="w-5 h-5 mr-2 group-hover:rotate-12 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                                        </svg>
                                        <span class="text-base font-bold">ƒêƒÉng K√Ω Ngay</span>
                                    </span>
                                </button>
                            </div>
                        }
                        else
                        {
                            <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                                <div class="flex items-center">
                                    <svg class="w-5 h-5 text-yellow-500 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                        <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                                    </svg>
                                    <span class="text-sm font-medium text-yellow-800">L·ªõp ƒë√£ ƒë·∫ßy</span>
                                </div>
                                <p class="text-xs text-yellow-700 mt-1">Hi·ªán t·∫°i kh√¥ng c√≤n ch·ªó tr·ªëng</p>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="bg-red-50 border border-red-200 rounded-lg p-4">
                            <div class="flex items-center">
                                <svg class="w-5 h-5 text-red-500 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                                </svg>
                                <span class="text-sm font-medium text-red-800">L·ªõp ƒë√£ ƒë√≥ng</span>
                            </div>
                            <p class="text-xs text-red-700 mt-1">Hi·ªán t·∫°i kh√¥ng th·ªÉ ƒëƒÉng k√Ω</p>
                        </div>
                    }
                    
                    <!-- Back to Classes -->
                    <div class="mt-6 pt-4 border-t border-gray-100">
                        <a href="@Url.Action("Classes", "Member")" 
                           class="w-full bg-gray-100 hover:bg-gray-200 text-gray-700 font-medium py-3 px-6 rounded-xl transition-all duration-300 border-2 border-gray-200 hover:border-gray-300 group flex items-center justify-center">
                            <svg class="w-4 h-4 mr-2 group-hover:scale-110 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                            </svg>
                            Quay l·∫°i danh s√°ch
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Enhanced Registration Modal -->
<div id="classRegistrationModal" class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm hidden z-50 transition-all duration-300">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div id="modalContent" class="bg-white rounded-2xl shadow-2xl max-w-lg w-full transform scale-95 transition-all duration-300">
            <!-- Modal Header -->
            <div class="bg-gradient-to-r @gradientClass text-white p-6 rounded-t-2xl">
                <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-3">
                        <div class="w-10 h-10 bg-white bg-opacity-20 rounded-full flex items-center justify-center">
                            <span class="text-xl">@iconEmoji</span>
                        </div>
                        <div>
                            <h3 class="text-xl font-bold">ƒêƒÉng k√Ω l·ªõp h·ªçc</h3>
                            <p class="text-white text-opacity-90 text-sm" id="selectedClassName">@Model.TenLop</p>
                        </div>
                    </div>
                    <button onclick="closeClassModal()" class="text-white hover:text-gray-200 transition-colors">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Modal Content -->
            <div class="p-6">
                <div class="space-y-6">
                    <!-- Date Selection -->
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-semibold text-gray-700 mb-2">
                                <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                </svg>
                                Ng√†y b·∫Øt ƒë·∫ßu
                            </label>
                            <input type="date" id="startDate"
                                   class="w-full border-2 border-gray-300 rounded-xl px-4 py-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200">
                        </div>
                        <div>
                            <label class="block text-sm font-semibold text-gray-700 mb-2">
                                <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                </svg>
                                Ng√†y k·∫øt th√∫c
                            </label>
                            <input type="date" id="endDate"
                                   class="w-full border-2 border-gray-300 rounded-xl px-4 py-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200">
                        </div>
                    </div>

                    <!-- Class Info Summary -->
                    <div class="bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-xl p-4">
                        <h4 class="text-sm font-semibold text-blue-900 mb-3">üìã Th√¥ng tin l·ªõp h·ªçc</h4>
                        <div class="grid grid-cols-2 gap-4 text-sm">
                            <div>
                                <span class="text-blue-700">Th·ªùi gian:</span>
                                <div class="font-medium text-blue-900">@Model.GioBatDau.ToString("HH:mm") - @Model.GioKetThuc.ToString("HH:mm")</div>
                            </div>
                            <div>
                                <span class="text-blue-700">Th·ª©:</span>
                                <div class="font-medium text-blue-900">@Model.ThuTrongTuan</div>
                            </div>
                            <div>
                                <span class="text-blue-700">Th·ªùi l∆∞·ª£ng:</span>
                                <div class="font-medium text-blue-900">@(Model.ThoiLuong ?? 0) ph√∫t</div>
                            </div>
                            <div>
                                <span class="text-blue-700">C√≤n tr·ªëng:</span>
                                <div class="font-medium text-green-600">@(Model.SucChua - (Model.DangKys?.Count(d => d.TrangThai == "ACTIVE") ?? 0)) ch·ªó</div>
                            </div>
                        </div>
                    </div>

                    <!-- Info Box -->
                    <div class="bg-amber-50 border border-amber-200 rounded-xl p-4">
                        <div class="flex items-start space-x-3">
                            <svg class="w-5 h-5 text-amber-500 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
                            </svg>
                            <div>
                                <h4 class="text-sm font-semibold text-amber-900 mb-1">‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng</h4>
                                <ul class="text-xs text-amber-700 space-y-1">
                                    <li>‚Ä¢ Ng√†y b·∫Øt ƒë·∫ßu ph·∫£i t·ª´ tu·∫ßn t·ªõi tr·ªü ƒëi</li>
                                    <li>‚Ä¢ Th·ªùi gian ƒëƒÉng k√Ω t·ªëi thi·ªÉu 1 th√°ng</li>
                                    <li>‚Ä¢ C√≥ th·ªÉ h·ªßy ƒëƒÉng k√Ω tr∆∞·ªõc 24h</li>
                                    <li>‚Ä¢ Vui l√≤ng ƒë·∫øn ƒë√∫ng gi·ªù ƒë·ªÉ kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn l·ªõp</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="flex space-x-3 mt-8">
                    <button onclick="closeClassModal()"
                            class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 font-semibold py-3 px-6 rounded-xl transition-all duration-300 border-2 border-gray-200 hover:border-gray-300">
                        <span class="flex items-center justify-center">
                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                            H·ªßy b·ªè
                        </span>
                    </button>
                    <button onclick="confirmRegistration()"
                            class="flex-1 bg-gradient-to-r @gradientClass hover:shadow-xl text-white font-semibold py-3 px-6 rounded-xl transition-all duration-300 transform hover:scale-105 group">
                        <span class="flex items-center justify-center">
                            <svg class="w-4 h-4 mr-2 group-hover:rotate-12 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                            </svg>
                            X√°c nh·∫≠n ƒëƒÉng k√Ω
                        </span>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let selectedClassId = @Model.LopHocId;
        let selectedClassName = '@Model.TenLop';

        // Class registration function
        function registerClass(classId, className) {
            selectedClassId = classId;
            selectedClassName = className;

            // Set default dates
            const today = new Date();
            const nextWeek = new Date(today.getTime() + 7 * 24 * 60 * 60 * 1000);
            const nextMonth = new Date(today.getTime() + 30 * 24 * 60 * 60 * 1000);

            document.getElementById('startDate').value = nextWeek.toISOString().split('T')[0];
            document.getElementById('endDate').value = nextMonth.toISOString().split('T')[0];

            // Show modal with animation
            const modal = document.getElementById('classRegistrationModal');
            const modalContent = document.getElementById('modalContent');
            modal.classList.remove('hidden');

            // Animate modal appearance
            setTimeout(() => {
                modalContent.classList.remove('scale-95');
                modalContent.classList.add('scale-100');
            }, 10);
        }

        // Close modal function
        function closeClassModal() {
            const modal = document.getElementById('classRegistrationModal');
            const modalContent = document.getElementById('modalContent');

            // Animate modal disappearance
            modalContent.classList.remove('scale-100');
            modalContent.classList.add('scale-95');

            setTimeout(() => {
                modal.classList.add('hidden');
            }, 300);
        }

        // Confirm registration function
        function confirmRegistration() {
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            if (!startDate || !endDate) {
                showNotification('‚ùå Vui l√≤ng ch·ªçn ng√†y b·∫Øt ƒë·∫ßu v√† k·∫øt th√∫c.', 'error');
                return;
            }

            if (new Date(startDate) >= new Date(endDate)) {
                showNotification('‚ùå Ng√†y k·∫øt th√∫c ph·∫£i sau ng√†y b·∫Øt ƒë·∫ßu.', 'error');
                return;
            }

            // Check if start date is at least 1 week from now
            const today = new Date();
            const oneWeekFromNow = new Date(today.getTime() + 7 * 24 * 60 * 60 * 1000);
            if (new Date(startDate) < oneWeekFromNow) {
                showNotification('‚ùå Ng√†y b·∫Øt ƒë·∫ßu ph·∫£i t·ª´ tu·∫ßn t·ªõi tr·ªü ƒëi.', 'error');
                return;
            }

            if (selectedClassId) {
                const button = event.target.closest('button');
                const originalText = button.innerHTML;

                // Show loading state
                button.innerHTML = `
                    <span class="flex items-center justify-center">
                        <svg class="animate-spin w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                        ƒêang x·ª≠ l√Ω thanh to√°n...
                    </span>
                `;
                button.disabled = true;

                const formData = new FormData();
                formData.append('lopHocId', selectedClassId);
                formData.append('ngayBatDau', startDate);
                formData.append('ngayKetThuc', endDate);
                formData.append('__RequestVerificationToken', document.querySelector('input[name="__RequestVerificationToken"]').value);

                fetch('@Url.Action("CreateClassPayment", "ThanhToan")', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Redirect to VNPay payment page
                        showNotification('‚úÖ Chuy·ªÉn h∆∞·ªõng ƒë·∫øn c·ªïng thanh to√°n...', 'success');
                        setTimeout(() => {
                            window.location.href = data.redirectUrl;
                        }, 1000);
                    } else {
                        showNotification('‚ùå ' + data.message, 'error');
                        button.innerHTML = originalText;
                        button.disabled = false;
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('‚ùå C√≥ l·ªói x·∫£y ra khi x·ª≠ l√Ω thanh to√°n.', 'error');
                    button.innerHTML = originalText;
                    button.disabled = false;
                });
            }
        }

        // Notification function
        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg transform transition-all duration-300 translate-x-full ${
                type === 'success' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'
            }`;
            notification.innerHTML = `
                <div class="flex items-center">
                    <span class="mr-2">${message}</span>
                    <button onclick="this.parentElement.parentElement.remove()" class="ml-2 text-white hover:text-gray-200">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            `;

            document.body.appendChild(notification);

            // Animate in
            setTimeout(() => {
                notification.classList.remove('translate-x-full');
            }, 10);

            // Auto remove after 5 seconds
            setTimeout(() => {
                notification.classList.add('translate-x-full');
                setTimeout(() => {
                    if (notification.parentElement) {
                        notification.remove();
                    }
                }, 300);
            }, 5000);
        }

        // Event listeners
        document.addEventListener('DOMContentLoaded', function() {
            // Add entrance animations
            const cards = document.querySelectorAll('.bg-white');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(30px)';

                setTimeout(() => {
                    card.style.transition = 'all 0.6s ease';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 200);
            });
        });

        // Close modal when clicking outside
        document.getElementById('classRegistrationModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeClassModal();
            }
        });

        // Keyboard navigation
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && !document.getElementById('classRegistrationModal').classList.contains('hidden')) {
                closeClassModal();
            }
        });
    </script>
}

@section Styles {
    <style>
        /* Custom animations and transitions */
        .bg-white {
            transition: all 0.3s ease;
        }

        .bg-white:hover {
            transform: translateY(-2px);
        }

        /* Gradient text effect */
        .gradient-text {
            background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb {
            background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: linear-gradient(135deg, #2563eb 0%, #7c3aed 100%);
        }

        /* Modal backdrop blur effect */
        .backdrop-blur-sm {
            backdrop-filter: blur(4px);
        }

        /* Smooth transitions for all interactive elements */
        button, a, select, input {
            transition: all 0.3s ease;
        }

        /* Custom focus styles */
        button:focus, a:focus, select:focus, input:focus {
            outline: 2px solid #3b82f6;
            outline-offset: 2px;
        }

        /* Enhanced hover effects for buttons */
        .btn-gradient:hover {
            box-shadow: 0 10px 25px rgba(59, 130, 246, 0.3);
        }

        /* Progress bar animation */
        .progress-bar {
            transition: width 1s ease-in-out;
        }

        /* Responsive improvements */
        @@media (max-width: 768px) {
            .container {
                padding-left: 1rem;
                padding-right: 1rem;
            }
        }
    </style>
}

<!-- Anti-forgery token -->
@Html.AntiForgeryToken()
