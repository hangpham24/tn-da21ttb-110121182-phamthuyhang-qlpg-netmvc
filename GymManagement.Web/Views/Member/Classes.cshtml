@model IEnumerable<GymManagement.Web.Data.Models.LopHoc>

@{
    ViewData["Title"] = "L·ªõp H·ªçc - Th√†nh vi√™n";
    Layout = "_MemberLayout";
}

<div class="min-h-screen bg-gradient-to-br from-gray-50 via-blue-50 to-purple-50">
    <div class="container mx-auto px-4 py-8">
        <!-- Hero Section -->
        <div class="text-center mb-12">
            <div class="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full mb-6 shadow-lg">
                <span class="text-4xl">üéì</span>
            </div>
            <h1 class="text-4xl md:text-5xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent mb-4">
                L·ªõp H·ªçc Gym
            </h1>
            <p class="text-xl text-gray-600 max-w-2xl mx-auto leading-relaxed">
                Tham gia c√°c l·ªõp h·ªçc chuy√™n nghi·ªáp ƒë·ªÉ n√¢ng cao k·ªπ nƒÉng t·∫≠p luy·ªán v√† ƒë·∫°t ƒë∆∞·ª£c m·ª•c ti√™u fitness c·ªßa b·∫°n
            </p>
            @if (ViewBag.RegisteredClasses != null && ViewBag.RegisteredClasses > 0)
            {
                <div class="mt-6 inline-flex items-center px-4 py-2 bg-green-100 text-green-800 rounded-full text-sm font-medium">
                    <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                    </svg>
                    B·∫°n ƒë√£ ƒëƒÉng k√Ω @ViewBag.RegisteredClasses l·ªõp h·ªçc
                </div>
            }
        </div>

        <!-- Th√¥ng tin quy·ªÅn l·ª£i member -->
        <div id="memberBenefitCard" class="mb-8">
            <!-- Card s·∫Ω ƒë∆∞·ª£c load b·∫±ng JavaScript -->
        </div>

        <!-- Policy Notice -->
        <div class="bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-xl p-6 mb-8">
            <div class="flex items-start">
                <div class="flex-shrink-0">
                    <div class="w-10 h-10 bg-green-500 rounded-lg flex items-center justify-center">
                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                        </svg>
                    </div>
                </div>
                <div class="ml-4 flex-1">
                    <h3 class="text-lg font-semibold text-green-900 mb-2">üßò‚Äç‚ôÇÔ∏è Ch√≠nh s√°ch ƒëƒÉng k√Ω l·ªõp h·ªçc</h3>
                    <div class="text-green-800 space-y-2">
                        <p class="flex items-center">
                            <svg class="w-4 h-4 mr-2 text-green-600" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                            </svg>
                            <strong>Th√†nh vi√™n c√≥ th·ªÉ ƒëƒÉng k√Ω nhi·ªÅu l·ªõp h·ªçc c√πng l√∫c</strong>
                        </p>
                        <p class="text-sm ml-6">Kh√¥ng gi·ªëng nh∆∞ g√≥i t·∫≠p, v·ªõi l·ªõp h·ªçc b·∫°n c√≥ th·ªÉ ƒëƒÉng k√Ω nhi·ªÅu l·ªõp n·∫øu th·ªùi gian kh√¥ng b·ªã tr√πng nhau.</p>

                        <div class="mt-4 grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div class="p-3 bg-green-100 rounded-lg">
                                <p class="text-sm font-medium text-green-900 mb-2">üìÖ Quy ƒë·ªãnh v·ªÅ th·ªùi gian</p>
                                <p class="text-sm text-green-800">Ki·ªÉm tra l·ªãch h·ªçc c·ª• th·ªÉ ƒë·ªÉ tr√°nh tr√πng l·ªãch. H·ªá th·ªëng s·∫Ω t·ª± ƒë·ªông ki·ªÉm tra xung ƒë·ªôt th·ªùi gian.</p>
                            </div>
                            <div class="p-3 bg-green-100 rounded-lg">
                                <p class="text-sm font-medium text-green-900 mb-2">üö® Gi·ªõi h·∫°n s·ª©c ch·ª©a</p>
                                <p class="text-sm text-green-800">M·ªói l·ªõp c√≥ gi·ªõi h·∫°n c·ª• th·ªÉ. Khi ƒë·∫ßy, b·∫°n c·∫ßn ch·ªù l∆∞·ª£t sau ho·∫∑c ch·ªçn l·ªõp kh√°c.</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Filter & Search Section -->
        <div class="bg-white rounded-2xl shadow-lg p-6 mb-8 border border-gray-100">
            <div class="flex flex-col lg:flex-row gap-4 items-center justify-between">
                <!-- Search Bar -->
                <div class="flex-1 w-full lg:max-w-md">
                    <div class="relative">
                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                            </svg>
                        </div>
                        <input type="text" id="searchClasses" placeholder="T√¨m ki·∫øm l·ªõp h·ªçc..."
                               class="block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-xl leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200">
                    </div>
                </div>

                <!-- Filter Options -->
                <div class="flex flex-wrap gap-3 items-center">
                    <!-- Status Filter -->
                    <select id="statusFilter" class="px-4 py-3 border border-gray-300 rounded-xl bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200">
                        <option value="">T·∫•t c·∫£ tr·∫°ng th√°i</option>
                        <option value="OPEN">ƒêang ho·∫°t ƒë·ªông</option>
                        <option value="CLOSED">Kh√¥ng ho·∫°t ƒë·ªông</option>
                    </select>

                    <!-- Sort Options -->
                    <select id="sortClasses" class="px-4 py-3 border border-gray-300 rounded-xl bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200">
                        <option value="name-asc">T√™n A-Z</option>
                        <option value="name-desc">T√™n Z-A</option>
                        <option value="duration-asc">Th·ªùi l∆∞·ª£ng tƒÉng</option>
                        <option value="duration-desc">Th·ªùi l∆∞·ª£ng gi·∫£m</option>
                    </select>
                </div>

                <!-- Results Counter -->
                <div class="text-sm text-gray-600">
                    @if (ViewBag.RegisteredClasses != null && ViewBag.RegisteredClasses > 0)
                    {
                        <span>Hi·ªÉn th·ªã <span id="classCount" class="font-semibold text-gray-900">@(Model?.Count() ?? 0)</span> l·ªõp c√≥ th·ªÉ ƒëƒÉng k√Ω</span>
                        <span class="mx-2">‚Ä¢</span>
                        <span>ƒê√£ ƒëƒÉng k√Ω: <span class="font-semibold text-green-600">@ViewBag.RegisteredClasses</span></span>
                    }
                    else
                    {
                        <span><span id="classCount" class="font-semibold text-gray-900">@(Model?.Count() ?? 0)</span> l·ªõp h·ªçc</span>
                    }
                </div>
            </div>
        </div>

        <!-- Classes Grid -->
        @if (Model != null && Model.Any())
        {
            <div id="classesGrid" class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-8">
                @foreach (var lopHoc in Model)
                {
                    var gradientClass = "";
                    var levelClass = "";
                    var levelText = "";
                    var iconEmoji = "";

                    // Determine level and styling
                    if (lopHoc.TenLop.ToLower().Contains("n√¢ng cao") || lopHoc.TenLop.ToLower().Contains("advanced"))
                    {
                        gradientClass = "from-red-500 to-pink-600";
                        levelClass = "bg-red-100 text-red-800 border-red-200";
                        levelText = "N√ÇNG CAO";
                        iconEmoji = "üî•";
                    }
                    else if (lopHoc.TenLop.ToLower().Contains("trung c·∫•p") || lopHoc.TenLop.ToLower().Contains("intermediate"))
                    {
                        gradientClass = "from-yellow-500 to-orange-600";
                        levelClass = "bg-yellow-100 text-yellow-800 border-yellow-200";
                        levelText = "TRUNG C·∫§P";
                        iconEmoji = "‚ö°";
                    }
                    else
                    {
                        gradientClass = "from-green-500 to-emerald-600";
                        levelClass = "bg-green-100 text-green-800 border-green-200";
                        levelText = "C∆† B·∫¢N";
                        iconEmoji = "üå±";
                    }

                    <div class="class-card bg-white rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-2 overflow-hidden border border-gray-100 flex flex-col h-full"
                         data-name="@lopHoc.TenLop.ToLower()"
                         data-level="@levelText.ToLower()"
                         data-status="@lopHoc.TrangThai"
                         data-duration="@lopHoc.ThoiLuong">

                        <!-- Class Header -->
                        <div class="bg-gradient-to-br @gradientClass text-white p-6 relative overflow-hidden">
                            <!-- Background Pattern -->
                            <div class="absolute inset-0 opacity-10">
                                <div class="absolute inset-0 bg-white bg-opacity-5"></div>
                                <div class="absolute top-0 right-0 w-32 h-32 bg-white bg-opacity-5 rounded-full -translate-y-16 translate-x-16"></div>
                                <div class="absolute bottom-0 left-0 w-24 h-24 bg-white bg-opacity-5 rounded-full translate-y-12 -translate-x-12"></div>
                            </div>

                            <div class="relative z-10">
                                <!-- Header with Icon and Level -->
                                <div class="flex items-start justify-between mb-4">
                                    <div class="flex items-center space-x-3">
                                        <div class="w-12 h-12 bg-white bg-opacity-20 rounded-xl flex items-center justify-center backdrop-blur-sm">
                                            <span class="text-2xl">@iconEmoji</span>
                                        </div>
                                        <div class="@levelClass px-3 py-1 rounded-full text-xs font-bold border">
                                            @levelText
                                        </div>
                                    </div>

                                    <!-- Status Badge -->
                                    @if (lopHoc.TrangThai == "OPEN")
                                    {
                                        <div class="bg-green-400 text-green-900 px-3 py-1 rounded-full text-xs font-bold">
                                            ‚úÖ HO·∫†T ƒê·ªòNG
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="bg-gray-400 text-gray-900 px-3 py-1 rounded-full text-xs font-bold">
                                            ‚è∏Ô∏è T·∫†M D·ª™NG
                                        </div>
                                    }
                                </div>

                                <!-- Class Name -->
                                <h3 class="text-xl font-bold mb-3 leading-tight">@lopHoc.TenLop</h3>

                                <!-- Duration -->
                                <div class="flex items-center text-white text-opacity-90">
                                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                    </svg>
                                    <span class="font-medium">@lopHoc.ThoiLuong ph√∫t</span>
                                </div>
                            </div>
                        </div>

                        <!-- Class Content -->
                        <div class="p-6 flex-1 flex flex-col">
                            <!-- Description -->
                            <div class="mb-6">
                                <p class="text-gray-600 leading-relaxed text-sm">@lopHoc.MoTa</p>
                            </div>

                            <!-- Class Info Grid -->
                            <div class="grid grid-cols-1 gap-4 mb-6 flex-1">
                                <!-- Capacity -->
                                <div class="flex items-center p-3 bg-blue-50 rounded-lg border border-blue-100">
                                    <div class="w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center mr-3">
                                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                                        </svg>
                                    </div>
                                    <div>
                                        <div class="text-sm font-medium text-gray-900">S·ª©c ch·ª©a</div>
                                        <div class="text-xs text-gray-600">@lopHoc.SucChua ng∆∞·ªùi tham gia</div>
                                    </div>
                                </div>

                                <!-- Duration -->
                                <div class="flex items-center p-3 bg-green-50 rounded-lg border border-green-100">
                                    <div class="w-10 h-10 bg-green-500 rounded-full flex items-center justify-center mr-3">
                                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                        </svg>
                                    </div>
                                    <div>
                                        <div class="text-sm font-medium text-gray-900">Th·ªùi l∆∞·ª£ng</div>
                                        <div class="text-xs text-gray-600">@lopHoc.ThoiLuong ph√∫t m·ªói bu·ªïi</div>
                                    </div>
                                </div>

                                <!-- Price -->
                                @if (lopHoc.GiaTuyChinh.HasValue)
                                {
                                    <div class="flex items-center p-3 bg-yellow-50 rounded-lg border border-yellow-100">
                                        <div class="w-10 h-10 bg-yellow-500 rounded-full flex items-center justify-center mr-3">
                                            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                                            </svg>
                                        </div>
                                        <div>
                                            <div class="text-sm font-medium text-gray-900">Gi√° l·ªõp h·ªçc</div>
                                            <div class="text-xs text-gray-600">@lopHoc.GiaTuyChinh.Value.ToString("N0") VNƒê/th√°ng</div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="flex items-center p-3 bg-gray-50 rounded-lg border border-gray-100">
                                        <div class="w-10 h-10 bg-gray-500 rounded-full flex items-center justify-center mr-3">
                                            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                                            </svg>
                                        </div>
                                        <div>
                                            <div class="text-sm font-medium text-gray-900">Gi√° l·ªõp h·ªçc</div>
                                            <div class="text-xs text-gray-600">200.000 VNƒê/bu·ªïi (m·∫∑c ƒë·ªãnh)</div>
                                        </div>
                                    </div>
                                }

                                <!-- Trainer -->
                                @if (lopHoc.Hlv != null)
                                {
                                    <div class="flex items-center p-3 bg-purple-50 rounded-lg border border-purple-100">
                                        <div class="w-10 h-10 bg-purple-500 rounded-full flex items-center justify-center mr-3">
                                            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                            </svg>
                                        </div>
                                        <div>
                                            <div class="text-sm font-medium text-gray-900">Hu·∫•n luy·ªán vi√™n</div>
                                            <div class="text-xs text-gray-600">@lopHoc.Hlv.Ho @lopHoc.Hlv.Ten</div>
                                        </div>
                                    </div>
                                }

                                <!-- Schedule Info -->
                                @if (!string.IsNullOrEmpty(lopHoc.ThuTrongTuan))
                                {
                                    <div class="flex items-center p-3 bg-orange-50 rounded-lg border border-orange-100">
                                        <div class="w-10 h-10 bg-orange-500 rounded-full flex items-center justify-center mr-3">
                                            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                            </svg>
                                        </div>
                                        <div>
                                            <div class="text-sm font-medium text-gray-900">L·ªãch h·ªçc</div>
                                            <div class="text-xs text-gray-600">@lopHoc.ThuTrongTuan</div>
                                        </div>
                                    </div>
                                }
                            </div>

                            <!-- Actions -->
                            <div class="mt-auto pt-6 border-t border-gray-100">
                                <div class="space-y-3">
                                    <!-- View Details Button -->
                                    <a asp-action="ClassDetails" asp-route-id="@lopHoc.LopHocId"
                                       class="block w-full text-center bg-white hover:bg-gray-50 text-gray-700 font-medium py-3 px-6 rounded-xl transition-all duration-300 border-2 border-gray-200 hover:border-gray-300 group">
                                        <span class="flex items-center justify-center">
                                            <svg class="w-4 h-4 mr-2 group-hover:scale-110 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                            </svg>
                                            Xem Chi Ti·∫øt
                                        </span>
                                    </a>

                                    <!-- Register/Login Button -->
                                    @if (lopHoc.TrangThai == "OPEN")
                                    {
                                        @if (User.Identity.IsAuthenticated)
                                        {
                                            <button onclick="registerClass(@lopHoc.LopHocId, '@lopHoc.TenLop')"
                                                    class="block w-full bg-gradient-to-r @gradientClass hover:shadow-xl text-white font-semibold py-4 px-6 rounded-xl transition-all duration-300 transform hover:scale-[1.02] hover:-translate-y-1 group relative overflow-hidden">
                                                <!-- Button Background Effect -->
                                                <div class="absolute inset-0 bg-white opacity-0 group-hover:opacity-10 transition-opacity duration-300"></div>

                                                <span class="relative flex items-center justify-center">
                                                    <svg class="w-5 h-5 mr-2 group-hover:rotate-12 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                                                    </svg>
                                                    <span class="text-base font-bold">ƒêƒÉng K√Ω Ngay</span>
                                                </span>
                                            </button>
                                        }
                                        else
                                        {
                                            <a href="@Url.Action("Login", "Auth")"
                                               class="block w-full bg-gradient-to-r @gradientClass hover:shadow-xl text-white font-semibold py-4 px-6 rounded-xl transition-all duration-300 transform hover:scale-[1.02] hover:-translate-y-1 group relative overflow-hidden text-center">
                                                <!-- Button Background Effect -->
                                                <div class="absolute inset-0 bg-white opacity-0 group-hover:opacity-10 transition-opacity duration-300"></div>

                                                <span class="relative flex items-center justify-center">
                                                    <svg class="w-5 h-5 mr-2 group-hover:rotate-12 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"></path>
                                                    </svg>
                                                    <span class="text-base font-bold">ƒêƒÉng Nh·∫≠p ƒë·ªÉ ƒêƒÉng K√Ω</span>
                                                </span>
                                            </a>
                                        }
                                    }
                                    else
                                    {
                                        <button disabled
                                                class="block w-full bg-gray-400 text-white font-medium py-4 px-6 rounded-xl cursor-not-allowed opacity-60">
                                            <span class="flex items-center justify-center">
                                                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L18.364 5.636M5.636 18.364l12.728-12.728"></path>
                                                </svg>
                                                Kh√¥ng th·ªÉ ƒëƒÉng k√Ω
                                            </span>
                                        </button>
                                    }
                                </div>

                                <!-- Trust Indicators -->
                                <div class="mt-4 flex items-center justify-center space-x-4 text-xs text-gray-500">
                                    <div class="flex items-center">
                                        <svg class="w-3 h-3 mr-1 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                                        </svg>
                                        HLV chuy√™n nghi·ªáp
                                    </div>
                                    <div class="flex items-center">
                                        <svg class="w-3 h-3 mr-1 text-blue-500" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                                        </svg>
                                        Linh ho·∫°t th·ªùi gian
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <!-- Empty State -->
            <div class="text-center py-20">
                <div class="max-w-md mx-auto">
                    <div class="w-24 h-24 bg-gradient-to-r from-blue-100 to-purple-200 rounded-full flex items-center justify-center mx-auto mb-6">
                        <span class="text-4xl">üéì</span>
                    </div>
                    @if (ViewBag.RegisteredClasses != null && ViewBag.RegisteredClasses > 0)
                    {
                        <h3 class="text-2xl font-bold text-gray-900 mb-4">üéâ B·∫°n ƒë√£ ƒëƒÉng k√Ω t·∫•t c·∫£ l·ªõp h·ªçc!</h3>
                        <p class="text-gray-600 mb-8">Tuy·ªát v·ªùi! B·∫°n ƒë√£ ƒëƒÉng k√Ω t·∫•t c·∫£ @ViewBag.RegisteredClasses l·ªõp h·ªçc c√≥ s·∫µn. H√£y xem ƒëƒÉng k√Ω c·ªßa b·∫°n ho·∫∑c kh√°m ph√° g√≥i t·∫≠p m·ªõi.</p>
                    }
                    else
                    {
                        <h3 class="text-2xl font-bold text-gray-900 mb-4">Ch∆∞a c√≥ l·ªõp h·ªçc n√†o</h3>
                        <p class="text-gray-600 mb-8">Hi·ªán t·∫°i ch∆∞a c√≥ l·ªõp h·ªçc n√†o ƒëang ho·∫°t ƒë·ªông. H√£y quay l·∫°i sau ƒë·ªÉ kh√°m ph√° c√°c l·ªõp h·ªçc m·ªõi!</p>
                    }
                    <div class="flex flex-col sm:flex-row gap-4 justify-center">
                        @if (ViewBag.RegisteredClasses != null && ViewBag.RegisteredClasses > 0)
                        {
                            <a href="@Url.Action("MyRegistrations", "Member")"
                               class="inline-flex items-center px-6 py-3 bg-green-600 hover:bg-green-700 text-white font-medium rounded-xl transition-all duration-300">
                                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                </svg>
                                Xem ƒëƒÉng k√Ω c·ªßa t√¥i
                            </a>
                        }
                        <a href="@Url.Action("Packages", "Member")"
                           class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-blue-500 to-purple-600 text-white font-medium rounded-xl hover:shadow-lg transition-all duration-300 transform hover:scale-105">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                            </svg>
                            Xem G√≥i T·∫≠p
                        </a>
                    </div>
                </div>
            </div>
        }

        <!-- No Results State (Hidden by default) -->
        <div id="noResultsState" class="text-center py-20 hidden">
            <div class="max-w-md mx-auto">
                <div class="w-24 h-24 bg-gradient-to-r from-gray-100 to-gray-200 rounded-full flex items-center justify-center mx-auto mb-6">
                    <span class="text-4xl">üîç</span>
                </div>
                <h3 class="text-2xl font-bold text-gray-900 mb-4">Kh√¥ng t√¨m th·∫•y l·ªõp h·ªçc</h3>
                <p class="text-gray-600 mb-8">Kh√¥ng c√≥ l·ªõp h·ªçc n√†o ph√π h·ª£p v·ªõi ti√™u ch√≠ t√¨m ki·∫øm c·ªßa b·∫°n. H√£y th·ª≠ ƒëi·ªÅu ch·ªânh b·ªô l·ªçc!</p>
                <button onclick="clearFilters()"
                        class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-blue-500 to-purple-600 text-white font-medium rounded-xl hover:shadow-lg transition-all duration-300 transform hover:scale-105">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                    </svg>
                    X√≥a B·ªô L·ªçc
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Enhanced Registration Modal -->
<div id="classRegistrationModal" class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm hidden z-50 transition-all duration-300">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div id="modalContent" class="bg-white rounded-2xl shadow-2xl max-w-lg w-full transform scale-95 transition-all duration-300">
            <!-- Modal Header -->
            <div class="bg-gradient-to-r from-blue-500 to-purple-600 text-white p-6 rounded-t-2xl">
                <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-3">
                        <div class="w-10 h-10 bg-white bg-opacity-20 rounded-full flex items-center justify-center">
                            <span class="text-xl">üéì</span>
                        </div>
                        <div>
                            <h3 class="text-xl font-bold">ƒêƒÉng k√Ω l·ªõp h·ªçc</h3>
                            <p class="text-blue-100 text-sm" id="selectedClassName">Ch·ªçn l·ªõp h·ªçc ƒë·ªÉ ƒëƒÉng k√Ω</p>
                        </div>
                    </div>
                    <button onclick="closeClassModal()" class="text-white hover:text-gray-200 transition-colors">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Modal Content -->
            <div class="p-6">
                <div class="space-y-6">
                    <!-- Date Selection -->
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-semibold text-gray-700 mb-2">
                                <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                </svg>
                                Ng√†y b·∫Øt ƒë·∫ßu
                            </label>
                            <input type="date" id="startDate"
                                   class="w-full border-2 border-gray-300 rounded-xl px-4 py-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200">
                        </div>
                        <div>
                            <label class="block text-sm font-semibold text-gray-700 mb-2">
                                <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                </svg>
                                Ng√†y k·∫øt th√∫c
                            </label>
                            <input type="date" id="endDate"
                                   class="w-full border-2 border-gray-300 rounded-xl px-4 py-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200">
                        </div>
                    </div>

                    <!-- Info Box -->
                    <div class="bg-blue-50 border border-blue-200 rounded-xl p-4">
                        <div class="flex items-start space-x-3">
                            <svg class="w-5 h-5 text-blue-500 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
                            </svg>
                            <div>
                                <h4 class="text-sm font-semibold text-blue-900 mb-1">L∆∞u √Ω quan tr·ªçng</h4>
                                <ul class="text-xs text-blue-700 space-y-1">
                                    <li>‚Ä¢ Ng√†y b·∫Øt ƒë·∫ßu ph·∫£i t·ª´ tu·∫ßn t·ªõi tr·ªü ƒëi</li>
                                    <li>‚Ä¢ Th·ªùi gian ƒëƒÉng k√Ω t·ªëi thi·ªÉu 1 th√°ng</li>
                                    <li>‚Ä¢ C√≥ th·ªÉ h·ªßy ƒëƒÉng k√Ω tr∆∞·ªõc 24h</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="flex space-x-3 mt-8">
                    <button onclick="closeClassModal()"
                            class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 font-semibold py-3 px-6 rounded-xl transition-all duration-300 border-2 border-gray-200 hover:border-gray-300">
                        <span class="flex items-center justify-center">
                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                            H·ªßy b·ªè
                        </span>
                    </button>
                    <button onclick="confirmRegistration()"
                            class="flex-1 bg-gradient-to-r from-blue-500 to-purple-600 hover:shadow-xl text-white font-semibold py-3 px-6 rounded-xl transition-all duration-300 transform hover:scale-105 group">
                        <span class="flex items-center justify-center">
                            <svg class="w-4 h-4 mr-2 group-hover:rotate-12 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                            </svg>
                            X√°c nh·∫≠n ƒëƒÉng k√Ω
                        </span>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let selectedClassId = null;
        let selectedClassName = null;

        // Load th√¥ng tin quy·ªÅn l·ª£i member khi trang load
        document.addEventListener('DOMContentLoaded', async function() {
            await loadMemberBenefits();
        });

        // Class registration function
        function registerClass(classId, className) {
            selectedClassId = classId;
            selectedClassName = className;

            // Update modal content
            document.getElementById('selectedClassName').textContent = className;

            // Set default dates
            const today = new Date();
            const nextWeek = new Date(today.getTime() + 7 * 24 * 60 * 60 * 1000);
            const nextMonth = new Date(today.getTime() + 30 * 24 * 60 * 60 * 1000);

            document.getElementById('startDate').value = nextWeek.toISOString().split('T')[0];
            document.getElementById('endDate').value = nextMonth.toISOString().split('T')[0];

            // Show modal with animation
            const modal = document.getElementById('classRegistrationModal');
            const modalContent = document.getElementById('modalContent');
            modal.classList.remove('hidden');

            // Animate modal appearance
            setTimeout(() => {
                modalContent.classList.remove('scale-95');
                modalContent.classList.add('scale-100');
            }, 10);
        }

        // Close modal function
        function closeClassModal() {
            const modal = document.getElementById('classRegistrationModal');
            const modalContent = document.getElementById('modalContent');

            // Animate modal disappearance
            modalContent.classList.remove('scale-100');
            modalContent.classList.add('scale-95');

            setTimeout(() => {
                modal.classList.add('hidden');
                selectedClassId = null;
                selectedClassName = null;
            }, 300);
        }

        // Confirm registration function
        function confirmRegistration() {
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            if (!startDate || !endDate) {
                showNotification('‚ùå Vui l√≤ng ch·ªçn ng√†y b·∫Øt ƒë·∫ßu v√† k·∫øt th√∫c.', 'error');
                return;
            }

            if (new Date(startDate) >= new Date(endDate)) {
                showNotification('‚ùå Ng√†y k·∫øt th√∫c ph·∫£i sau ng√†y b·∫Øt ƒë·∫ßu.', 'error');
                return;
            }

            // Check if start date is at least 1 week from now
            const today = new Date();
            const oneWeekFromNow = new Date(today.getTime() + 7 * 24 * 60 * 60 * 1000);
            if (new Date(startDate) < oneWeekFromNow) {
                showNotification('‚ùå Ng√†y b·∫Øt ƒë·∫ßu ph·∫£i t·ª´ tu·∫ßn t·ªõi tr·ªü ƒëi.', 'error');
                return;
            }

            if (selectedClassId) {
                const button = event.target.closest('button');
                const originalText = button.innerHTML;

                // Show loading state
                button.innerHTML = `
                    <span class="flex items-center justify-center">
                        <svg class="animate-spin w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                        ƒêang x·ª≠ l√Ω thanh to√°n...
                    </span>
                `;
                button.disabled = true;

                const formData = new FormData();
                formData.append('lopHocId', selectedClassId);
                formData.append('ngayBatDau', startDate);
                formData.append('ngayKetThuc', endDate);
                formData.append('__RequestVerificationToken', document.querySelector('input[name="__RequestVerificationToken"]').value);

                fetch('@Url.Action("CreateClassPayment", "ThanhToan")', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Call VNPay Area to create payment URL
                        showNotification('‚úÖ ƒêang t·∫°o thanh to√°n...', 'success');
                        
                        fetch('/VNPayAPI/Home/CreatePayment', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                thanhToanId: data.thanhToanId,
                                returnUrl: data.returnUrl
                            })
                        })
                        .then(response => response.json())
                        .then(vnpayData => {
                            if (vnpayData.success) {
                                showNotification('‚úÖ ƒê√£ t·∫°o thanh to√°n th√†nh c√¥ng! ƒêang chuy·ªÉn h∆∞·ªõng...', 'success');

                                // Close registration modal first
                                closeClassModal();

                                // Direct redirect to VNPay instead of showing modal
                                setTimeout(() => {
                                    window.location.href = vnpayData.paymentUrl;
                                }, 1000); // Small delay to show success message

                                button.innerHTML = originalText;
                                button.disabled = false;
                            } else {
                                showNotification('‚ùå ' + vnpayData.message, 'error');
                                button.innerHTML = originalText;
                                button.disabled = false;
                            }
                        })
                        .catch(error => {
                            console.error('VNPay Error:', error);
                            showNotification('‚ùå C√≥ l·ªói x·∫£y ra khi t·∫°o thanh to√°n VNPay.', 'error');
                            button.innerHTML = originalText;
                            button.disabled = false;
                        });
                    } else {
                        showNotification('‚ùå ' + data.message, 'error');
                        button.innerHTML = originalText;
                        button.disabled = false;
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('‚ùå C√≥ l·ªói x·∫£y ra khi x·ª≠ l√Ω thanh to√°n.', 'error');
                    button.innerHTML = originalText;
                    button.disabled = false;
                });
            }
        }

        // Notification function
        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg transform transition-all duration-300 translate-x-full ${
                type === 'success' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'
            }`;
            notification.innerHTML = `
                <div class="flex items-center">
                    <span class="mr-2">${message}</span>
                    <button onclick="this.parentElement.parentElement.remove()" class="ml-2 text-white hover:text-gray-200">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            `;

            document.body.appendChild(notification);

            // Animate in
            setTimeout(() => {
                notification.classList.remove('translate-x-full');
            }, 10);

            // Auto remove after 5 seconds
            setTimeout(() => {
                notification.classList.add('translate-x-full');
                setTimeout(() => {
                    if (notification.parentElement) {
                        notification.remove();
                    }
                }, 300);
            }, 5000);
        }

        // Filter and search functionality
        function filterClasses() {
            const searchTerm = document.getElementById('searchClasses').value.toLowerCase();
            const statusFilter = document.getElementById('statusFilter').value;
            const sortBy = document.getElementById('sortClasses').value;

            const cards = Array.from(document.querySelectorAll('.class-card'));
            let visibleCards = [];

            cards.forEach(card => {
                const name = card.dataset.name;
                const status = card.dataset.status;

                const matchesSearch = !searchTerm || name.includes(searchTerm);
                const matchesStatus = !statusFilter || status === statusFilter;

                if (matchesSearch && matchesStatus) {
                    card.style.display = 'block';
                    visibleCards.push(card);
                } else {
                    card.style.display = 'none';
                }
            });

            // Sort visible cards
            if (sortBy) {
                visibleCards.sort((a, b) => {
                    const nameA = a.dataset.name;
                    const nameB = b.dataset.name;
                    const durationA = parseInt(a.dataset.duration);
                    const durationB = parseInt(b.dataset.duration);

                    switch(sortBy) {
                        case 'name-asc':
                            return nameA.localeCompare(nameB);
                        case 'name-desc':
                            return nameB.localeCompare(nameA);
                        case 'duration-asc':
                            return durationA - durationB;
                        case 'duration-desc':
                            return durationB - durationA;
                        default:
                            return 0;
                    }
                });

                // Reorder cards in DOM
                const grid = document.getElementById('classesGrid');
                visibleCards.forEach(card => grid.appendChild(card));
            }

            // Update counter
            document.getElementById('classCount').textContent = visibleCards.length;

            // Show/hide no results state
            const noResultsState = document.getElementById('noResultsState');
            const classesGrid = document.getElementById('classesGrid');

            if (visibleCards.length === 0 && cards.length > 0) {
                noResultsState.classList.remove('hidden');
                classesGrid.classList.add('hidden');
            } else {
                noResultsState.classList.add('hidden');
                classesGrid.classList.remove('hidden');
            }
        }

        // Clear all filters
        function clearFilters() {
            document.getElementById('searchClasses').value = '';
            document.getElementById('statusFilter').value = '';
            document.getElementById('sortClasses').value = 'name-asc';
            filterClasses();
        }

        // Event listeners
        document.addEventListener('DOMContentLoaded', function() {
            // Add event listeners for filters
            document.getElementById('searchClasses').addEventListener('input', filterClasses);
            document.getElementById('statusFilter').addEventListener('change', filterClasses);
            document.getElementById('sortClasses').addEventListener('change', filterClasses);

            // Add entrance animations to cards
            const cards = document.querySelectorAll('.class-card');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(30px)';

                setTimeout(() => {
                    card.style.transition = 'all 0.6s ease';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 150);
            });
        });

        // Close modal when clicking outside
        document.getElementById('classRegistrationModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeClassModal();
            }
        });

        // Keyboard navigation
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && !document.getElementById('classRegistrationModal').classList.contains('hidden')) {
                closeClassModal();
            }
        });

        // Function load th√¥ng tin quy·ªÅn l·ª£i member
        async function loadMemberBenefits() {
            try {
                const response = await fetch('/Member/GetMemberBenefits');
                const result = await response.json();

                if (result.success) {
                    const benefits = result.data;
                    displayMemberBenefitCard(benefits);
                } else {
                    console.error('Failed to load member benefits:', result.message);
                }
            } catch (error) {
                console.error('Error loading member benefits:', error);
            }
        }

        // Function hi·ªÉn th·ªã card quy·ªÅn l·ª£i
        function displayMemberBenefitCard(benefits) {
            const cardContainer = document.getElementById('memberBenefitCard');
            if (!cardContainer) return;

            const cardClass = benefits.hasActivePackage ? 'border-green-200 bg-green-50' : 'border-orange-200 bg-orange-50';
            const iconClass = benefits.hasActivePackage ? 'text-green-600' : 'text-orange-600';
            const statusClass = benefits.hasActivePackage ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800';

            cardContainer.innerHTML = `
                <div class="${cardClass} border rounded-xl p-6 shadow-sm">
                    <div class="flex items-start justify-between">
                        <div class="flex items-center">
                            <div class="w-12 h-12 ${iconClass} bg-white rounded-lg flex items-center justify-center mr-4 shadow-sm">
                                ${benefits.hasActivePackage ?
                                    '<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>' :
                                    '<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path></svg>'
                                }
                            </div>
                            <div>
                                <h3 class="text-lg font-semibold text-gray-900">${benefits.statusText}</h3>
                                <p class="text-sm text-gray-600">
                                    ${benefits.hasActivePackage ?
                                        `<strong>${benefits.packageName || 'G√≥i t·∫≠p'}</strong>${benefits.packageExpiry ? ` - H·∫øt h·∫°n: ${new Date(benefits.packageExpiry).toLocaleDateString('vi-VN')}` : ''}` :
                                        'Mua g√≥i t·∫≠p ƒë·ªÉ ƒë∆∞·ª£c nhi·ªÅu ∆∞u ƒë√£i h∆°n'
                                    }
                                </p>
                            </div>
                        </div>
                        <span class="${statusClass} px-3 py-1 rounded-full text-sm font-medium">
                            ${benefits.hasActivePackage ? '‚úÖ C√≥ g√≥i t·∫≠p' : '‚ö†Ô∏è Ch∆∞a c√≥ g√≥i'}
                        </span>
                    </div>

                    <div class="mt-6 grid grid-cols-1 md:grid-cols-2 gap-4">
                        <!-- Quy·ªÅn v√†o gym -->
                        <div class="flex items-center p-3 bg-white rounded-lg border">
                            <div class="w-8 h-8 flex items-center justify-center mr-3">
                                <span class="${benefits.canAccessGym ? 'text-green-600' : 'text-gray-400'} text-xl">üèãÔ∏è</span>
                            </div>
                            <div class="flex-1">
                                <p class="font-medium text-gray-900">T·∫≠p gym</p>
                                <p class="text-sm ${benefits.canAccessGym ? 'text-green-600' : 'text-gray-500'}">
                                    ${benefits.gymAccessText}
                                </p>
                            </div>
                        </div>

                        <!-- Quy·ªÅn booking l·ªõp h·ªçc -->
                        <div class="flex items-center p-3 bg-white rounded-lg border">
                            <div class="w-8 h-8 flex items-center justify-center mr-3">
                                <span class="${benefits.canBookClassesFree ? 'text-green-600' : 'text-orange-600'} text-xl">üéì</span>
                            </div>
                            <div class="flex-1">
                                <p class="font-medium text-gray-900">L·ªõp h·ªçc</p>
                                <p class="text-sm ${benefits.canBookClassesFree ? 'text-green-600' : 'text-orange-600'}">
                                    ${benefits.classAccessText}
                                </p>
                            </div>
                        </div>
                    </div>

                    ${!benefits.hasActivePackage ? `
                        <div class="mt-6 p-4 bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg border border-blue-200">
                            <div class="flex items-center justify-between">
                                <div>
                                    <h4 class="font-semibold text-gray-900">üéØ Mua g√≥i t·∫≠p ngay!</h4>
                                    <p class="text-sm text-gray-600 mt-1">Ti·∫øt ki·ªám chi ph√≠ v√† ƒë∆∞·ª£c nhi·ªÅu ∆∞u ƒë√£i h∆°n</p>
                                </div>
                                <a href="/Member/Packages" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors">
                                    Xem g√≥i t·∫≠p
                                </a>
                            </div>
                        </div>
                    ` : ''}
                </div>
            `;
        }

        // Function ki·ªÉm tra ph√≠ booking tr∆∞·ªõc khi ƒë·∫∑t l·ªãch
        async function checkBookingFeeBeforeRegister(classId, className) {
            try {
                const response = await fetch(`/Booking/CheckBookingFee?classId=${classId}`);
                const data = await response.json();

                if (data.success && data.canBook) {
                    const message = data.isFree
                        ? `‚úÖ Mi·ªÖn ph√≠ v·ªõi g√≥i t·∫≠p\n\nB·∫°n c√≥ mu·ªën ƒëƒÉng k√Ω l·ªõp "${className}" kh√¥ng?`
                        : `üí∞ Ph√≠: ${data.feeText}\n\n${data.reason}\n\nB·∫°n c√≥ mu·ªën ti·∫øp t·ª•c kh√¥ng?`;

                    if (confirm(message)) {
                        if (data.isFree) {
                            // Proceed with registration
                            registerClass(classId);
                        } else {
                            alert('Vui l√≤ng thanh to√°n tr∆∞·ªõc khi ƒëƒÉng k√Ω l·ªõp h·ªçc.');
                            // C√≥ th·ªÉ redirect ƒë·∫øn trang thanh to√°n
                        }
                    }
                } else {
                    alert(data.message || 'Kh√¥ng th·ªÉ ƒëƒÉng k√Ω l·ªõp h·ªçc n√†y.');
                }
            } catch (error) {
                console.error('Error checking booking fee:', error);
                alert('C√≥ l·ªói x·∫£y ra khi ki·ªÉm tra ph√≠.');
            }
        }
    </script>
}

@section Styles {
    <style>
        /* Custom animations and transitions */
        .class-card {
            transition: all 0.3s ease;
        }

        .class-card:hover {
            transform: translateY(-8px);
        }

        /* Gradient text effect */
        .gradient-text {
            background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb {
            background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: linear-gradient(135deg, #2563eb 0%, #7c3aed 100%);
        }

        /* Loading animation */
        @@keyframes pulse {
            0%, 100% {
                opacity: 1;
            }
            50% {
                opacity: 0.5;
            }
        }

        .animate-pulse {
            animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
        }

        /* Modal backdrop blur effect */
        .backdrop-blur-sm {
            backdrop-filter: blur(4px);
        }

        /* Smooth transitions for all interactive elements */
        button, a, select, input {
            transition: all 0.3s ease;
        }

        /* Custom focus styles */
        button:focus, a:focus, select:focus, input:focus {
            outline: 2px solid #3b82f6;
            outline-offset: 2px;
        }

        /* Enhanced hover effects for buttons */
        .btn-gradient:hover {
            box-shadow: 0 10px 25px rgba(59, 130, 246, 0.3);
        }

        /* Filter section styling */
        .filter-section {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
        }

        /* Card level badges */
        .level-badge {
            backdrop-filter: blur(10px);
        }

        /* Responsive improvements */
        @@media (max-width: 768px) {
            .class-card {
                margin-bottom: 1rem;
            }

            .filter-section {
                padding: 1rem;
            }
        }

        /* Status indicators */
        .status-active {
            animation: pulse 2s infinite;
        }

        /* Search input enhancements */
        .search-input:focus {
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }
    </style>
}



<!-- Anti-forgery token -->
@Html.AntiForgeryToken()

@* Include QR Payment Modal *@
@await Html.PartialAsync("_QRPaymentModal")
