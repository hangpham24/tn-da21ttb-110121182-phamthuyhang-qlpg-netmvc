@model IEnumerable<GymManagement.Web.Data.Models.DangKy>

@{
    ViewData["Title"] = "ƒêƒÉng k√Ω c·ªßa t√¥i - Th√†nh vi√™n";
    Layout = "_MemberLayout";
}

<!-- MyRegistrations Page -->
<div class="min-h-screen bg-gray-50">
    <!-- Header Section -->
    <div class="border-b border-gray-200">
        <div class="force-header-width py-6">
            <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center">
                <div>
                    <h1 class="text-3xl font-bold text-gray-900 mb-2">üìã ƒêƒÉng k√Ω c·ªßa t√¥i</h1>
                    <p class="text-gray-600">Qu·∫£n l√Ω t·∫•t c·∫£ ƒëƒÉng k√Ω g√≥i t·∫≠p v√† l·ªõp h·ªçc c·ªßa b·∫°n</p>
                </div>
                <div class="mt-4 sm:mt-0 flex space-x-3">
                    <a asp-action="Packages" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                        ƒêƒÉng k√Ω g√≥i t·∫≠p
                    </a>
                    <a asp-action="Classes" class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                        ƒêƒÉng k√Ω l·ªõp h·ªçc
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="force-header-width py-8">
        <!-- Quick Stats Cards -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6 mb-8">
            <!-- Total Registrations -->
            <div class="bg-white rounded-xl shadow-sm p-6 border border-gray-100">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-blue-500 rounded-lg flex items-center justify-center">
                            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                            </svg>
                        </div>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-600">T·ªïng ƒëƒÉng k√Ω</p>
                        <p class="text-2xl font-bold text-gray-900">@(Model?.Count() ?? 0)</p>
                    </div>
                </div>
            </div>

            <!-- Active Registrations -->
            <div class="bg-white rounded-xl shadow-sm p-6 border border-gray-100">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-green-500 rounded-lg flex items-center justify-center">
                            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </div>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-600">ƒêang ho·∫°t ƒë·ªông</p>
                        <p class="text-2xl font-bold text-green-600">@(Model?.Count(r => r.TrangThai == "ACTIVE") ?? 0)</p>
                    </div>
                </div>
            </div>

            <!-- Expired Registrations -->
            <div class="bg-white rounded-xl shadow-sm p-6 border border-gray-100">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-orange-500 rounded-lg flex items-center justify-center">
                            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </div>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-600">ƒê√£ h·∫øt h·∫°n</p>
                        <p class="text-2xl font-bold text-orange-600">@(Model?.Count(r => r.TrangThai == "EXPIRED") ?? 0)</p>
                    </div>
                </div>
            </div>

            <!-- Pending Payment Registrations -->
            <div class="bg-white rounded-xl shadow-sm p-6 border border-gray-100">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-yellow-500 rounded-lg flex items-center justify-center">
                            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                            </svg>
                        </div>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-600">Ch·ªù thanh to√°n</p>
                        <p class="text-2xl font-bold text-yellow-600">@(Model?.Count(r => r.TrangThai == "PENDING_PAYMENT") ?? 0)</p>
                    </div>
                </div>
            </div>

            <!-- Cancelled Registrations -->
            <div class="bg-white rounded-xl shadow-sm p-6 border border-gray-100">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-red-500 rounded-lg flex items-center justify-center">
                            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                        </div>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-600">ƒê√£ h·ªßy</p>
                        <p class="text-2xl font-bold text-red-600">@(Model?.Count(r => r.TrangThai == "CANCELED" || r.TrangThai == "CANCELLED") ?? 0)</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Filter Tabs -->
        <div class="bg-white rounded-xl shadow-sm border border-gray-100 mb-6">
            <div class="px-6 py-4 border-b border-gray-200">
                <nav class="flex space-x-8">
                    <button onclick="filterRegistrations('all')" 
                            class="filter-tab active border-b-2 border-blue-500 py-2 px-1 text-sm font-medium text-blue-600">
                        T·∫•t c·∫£ (@(Model?.Count() ?? 0))
                    </button>
                    <button onclick="filterRegistrations('active')" 
                            class="filter-tab border-b-2 border-transparent py-2 px-1 text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300">
                        ƒêang ho·∫°t ƒë·ªông (@(Model?.Count(r => r.TrangThai == "ACTIVE") ?? 0))
                    </button>
                    <button onclick="filterRegistrations('pending_payment')"
                            class="filter-tab border-b-2 border-transparent py-2 px-1 text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300">
                        Ch·ªù thanh to√°n (@(Model?.Count(r => r.TrangThai == "PENDING_PAYMENT") ?? 0))
                    </button>
                    <button onclick="filterRegistrations('expired')"
                            class="filter-tab border-b-2 border-transparent py-2 px-1 text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300">
                        ƒê√£ h·∫øt h·∫°n (@(Model?.Count(r => r.TrangThai == "EXPIRED") ?? 0))
                    </button>
                    <button onclick="filterRegistrations('canceled')"
                            class="filter-tab border-b-2 border-transparent py-2 px-1 text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300">
                        ƒê√£ h·ªßy (@(Model?.Count(r => r.TrangThai == "CANCELED" || r.TrangThai == "CANCELLED") ?? 0))
                    </button>
                </nav>
            </div>
        </div>

        <!-- Registrations List -->
        @if (Model != null && Model.Any())
        {
            <div class="space-y-4">
                @foreach (var registration in Model.OrderByDescending(r => r.NgayTao))
                {
                    <div class="registration-item bg-white rounded-xl shadow-sm border border-gray-100 hover:shadow-md transition-shadow duration-200"
                         data-status="@registration.TrangThai.ToLower()">
                        <div class="p-6">
                            <div class="flex items-start justify-between">
                                <div class="flex-1">
                                    <!-- Registration Type & Name -->
                                    <div class="flex items-center mb-4">
                                        @if (registration.GoiTapId.HasValue)
                                        {
                                            <div class="flex-shrink-0 w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center mr-4">
                                                <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                                                </svg>
                                            </div>
                                            <div>
                                                <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 mb-2">
                                                    üèãÔ∏è G√≥i t·∫≠p
                                                </span>
                                                <h3 class="text-xl font-semibold text-gray-900">
                                                    @(registration.GoiTap?.TenGoi ?? "G√≥i t·∫≠p")
                                                </h3>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="flex-shrink-0 w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center mr-4">
                                                <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                                                </svg>
                                            </div>
                                            <div>
                                                <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 mb-2">
                                                    üë• L·ªõp h·ªçc
                                                </span>
                                                <h3 class="text-xl font-semibold text-gray-900">
                                                    @(registration.LopHoc?.TenLop ?? "L·ªõp h·ªçc")
                                                </h3>
                                            </div>
                                        }
                                    </div>

                                    <!-- Registration Details -->
                                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
                                        <div class="flex items-center p-3 bg-gray-50 rounded-lg">
                                            <svg class="w-5 h-5 text-gray-400 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                            </svg>
                                            <div>
                                                <span class="text-xs font-medium text-gray-500">Ng√†y ƒëƒÉng k√Ω</span>
                                                <div class="text-sm font-semibold text-gray-900">@registration.NgayTao.ToString("dd/MM/yyyy")</div>
                                            </div>
                                        </div>
                                        <div class="flex items-center p-3 bg-gray-50 rounded-lg">
                                            <svg class="w-5 h-5 text-gray-400 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                            </svg>
                                            <div>
                                                <span class="text-xs font-medium text-gray-500">Ng√†y b·∫Øt ƒë·∫ßu</span>
                                                <div class="text-sm font-semibold text-gray-900">@registration.NgayBatDau.ToString("dd/MM/yyyy")</div>
                                            </div>
                                        </div>
                                        <div class="flex items-center p-3 bg-gray-50 rounded-lg">
                                            <svg class="w-5 h-5 text-gray-400 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                            </svg>
                                            <div>
                                                <span class="text-xs font-medium text-gray-500">Ng√†y k·∫øt th√∫c</span>
                                                <div class="text-sm font-semibold text-gray-900">@registration.NgayKetThuc.ToString("dd/MM/yyyy")</div>
                                            </div>
                                        </div>
                                    </div>

                                    @if (registration.PhiDangKy.HasValue)
                                    {
                                        <div class="flex items-center p-3 bg-green-50 rounded-lg">
                                            <svg class="w-5 h-5 text-green-600 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                                            </svg>
                                            <div>
                                                <span class="text-xs font-medium text-green-600">Ph√≠ ƒëƒÉng k√Ω</span>
                                                <div class="text-lg font-bold text-green-700">@registration.PhiDangKy.Value.ToString("N0") VNƒê</div>
                                            </div>
                                        </div>
                                    }
                                </div>

                                <!-- Status & Actions -->
                                <div class="ml-6 text-right">
                                    <!-- Status Badge with Expiry Info -->
                                    <div class="mb-4">
                                        @if (registration.IsPackageRegistration)
                                        {
                                            <!-- Package status with expiry info -->
                                            <div class="space-y-2">
                                                @if (registration.TrangThai == "ACTIVE")
                                                {
                                                    <span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium @registration.ExpiryBadgeClass">
                                                        @if (registration.IsExpired)
                                                        {
                                                            <span>‚è∞ @registration.ExpiryStatus</span>
                                                        }
                                                        else if (registration.IsExpiringSoon)
                                                        {
                                                            <span>‚ö†Ô∏è @registration.ExpiryStatus</span>
                                                        }
                                                        else
                                                        {
                                                            <span>‚úÖ @registration.ExpiryStatus</span>
                                                        }
                                                    </span>
                                                    @if (registration.DaysUntilExpiry >= 0)
                                                    {
                                                        <div class="text-xs text-gray-500">
                                                            C√≤n @registration.DaysUntilExpiry ng√†y
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="text-xs text-red-500">
                                                            Qu√° h·∫°n @Math.Abs(registration.DaysUntilExpiry) ng√†y
                                                        </div>
                                                    }
                                                }
                                                else
                                                {
                                                    @switch (registration.TrangThai)
                                                    {
                                                        case "PENDING_PAYMENT":
                                                            <span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium bg-yellow-100 text-yellow-800">
                                                                üí≥ Ch·ªù thanh to√°n
                                                            </span>
                                                            break;
                                                        case "EXPIRED":
                                                            <span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium bg-red-100 text-red-800">
                                                                ‚è∞ ƒê√£ h·∫øt h·∫°n
                                                            </span>
                                                            break;
                                                        case "CANCELED":
                                                        case "CANCELLED":
                                                            <span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium bg-gray-100 text-gray-800">
                                                                ‚ùå ƒê√£ h·ªßy
                                                            </span>
                                                            break;
                                                        default:
                                                            <span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium bg-gray-100 text-gray-800">
                                                                @registration.TrangThai
                                                            </span>
                                                            break;
                                                    }
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <!-- Class registration status (unchanged) -->
                                            @switch (registration.TrangThai)
                                            {
                                                case "ACTIVE":
                                                    <span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium bg-green-100 text-green-800">
                                                        ‚úÖ ƒêang ho·∫°t ƒë·ªông
                                                    </span>
                                                    break;
                                                case "PENDING_PAYMENT":
                                                    <span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium bg-yellow-100 text-yellow-800">
                                                        üí≥ Ch·ªù thanh to√°n
                                                    </span>
                                                    break;
                                                case "EXPIRED":
                                                    <span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium bg-red-100 text-red-800">
                                                        ‚è∞ ƒê√£ h·∫øt h·∫°n
                                                    </span>
                                                    break;
                                                case "CANCELED":
                                                case "CANCELLED":
                                                    <span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium bg-gray-100 text-gray-800">
                                                        ‚ùå ƒê√£ h·ªßy
                                                    </span>
                                                    break;
                                                default:
                                                    <span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium bg-gray-100 text-gray-800">
                                                        @registration.TrangThai
                                                    </span>
                                                    break;
                                            }
                                        }
                                    </div>

                                    <!-- Action Buttons -->
                                    <div class="space-y-2">
                                        @* Payment button for PENDING_PAYMENT status *@
                                        @if (registration.TrangThai == "PENDING_PAYMENT")
                                        {
                                            <button type="button"
                                                    onclick="showPaymentModal(@registration.DangKyId, '@(registration.IsClassRegistration ? registration.LopHoc?.TenLop : registration.GoiTap?.TenGoi)', @(registration.PhiDangKy ?? 0))"
                                                    class="inline-flex items-center px-4 py-2 border border-yellow-300 text-sm font-medium rounded-lg text-yellow-700 bg-yellow-50 hover:bg-yellow-100 transition-colors duration-200">
                                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"></path>
                                                </svg>
                                                Thanh to√°n ngay
                                            </button>
                                        }

                                        @* Renewal button for packages that can be renewed *@
                                        @if (registration.CanRenew)
                                        {
                                            <button type="button"
                                                    onclick="showRenewalModal(@registration.DangKyId, '@(registration.GoiTap?.TenGoi ?? "G√≥i t·∫≠p")')"
                                                    class="inline-flex items-center px-4 py-2 border border-orange-300 text-sm font-medium rounded-lg text-orange-700 bg-orange-50 hover:bg-orange-100 transition-colors duration-200">
                                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                                                </svg>
                                                üîÑ Gia h·∫°n
                                            </button>
                                        }

                                        @if (registration.GoiTapId.HasValue)
                                        {
                                            <a href="@Url.Action("PackageDetails", "Member", new { id = registration.GoiTapId })"
                                               class="inline-flex items-center px-4 py-2 border border-blue-300 text-sm font-medium rounded-lg text-blue-700 bg-blue-50 hover:bg-blue-100 transition-colors duration-200">
                                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                                                </svg>
                                                Chi ti·∫øt g√≥i
                                            </a>
                                        }
                                        else if (registration.LopHocId.HasValue)
                                        {
                                            <a href="@Url.Action("ClassDetails", "Member", new { id = registration.LopHocId })"
                                               class="inline-flex items-center px-4 py-2 border border-green-300 text-sm font-medium rounded-lg text-green-700 bg-green-50 hover:bg-green-100 transition-colors duration-200">
                                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                                                </svg>
                                                Chi ti·∫øt l·ªõp
                                            </a>
                                        }

                                        @if (registration.TrangThai == "ACTIVE" && registration.CanCancel)
                                        {
                                            <button type="button"
                                                    onclick="showCancelModal(@registration.DangKyId, '@(registration.IsClassRegistration ? registration.LopHoc?.TenLop : registration.GoiTap?.TenGoi)')"
                                                    class="inline-flex items-center px-4 py-2 border border-red-300 text-sm font-medium rounded-lg text-red-700 bg-red-50 hover:bg-red-100 transition-colors duration-200">
                                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                                </svg>
                                                H·ªßy ƒëƒÉng k√Ω
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="bg-white rounded-xl shadow-sm border border-gray-100 text-center py-16">
                <svg class="w-20 h-20 text-gray-400 mx-auto mb-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                </svg>
                <h3 class="text-2xl font-semibold text-gray-900 mb-3">üìã Ch∆∞a c√≥ ƒëƒÉng k√Ω n√†o</h3>
                <p class="text-gray-600 mb-8 max-w-md mx-auto">H√£y b·∫Øt ƒë·∫ßu h√†nh tr√¨nh t·∫≠p luy·ªán c·ªßa b·∫°n b·∫±ng c√°ch ƒëƒÉng k√Ω g√≥i t·∫≠p ho·∫∑c l·ªõp h·ªçc ph√π h·ª£p</p>
                <div class="flex justify-center space-x-4">
                    <a asp-action="Packages" class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 transition-colors duration-200">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                        </svg>
                        Xem g√≥i t·∫≠p
                    </a>
                    <a asp-action="Classes" class="inline-flex items-center px-6 py-3 border border-gray-300 text-base font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 transition-colors duration-200">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                        </svg>
                        Xem l·ªõp h·ªçc
                    </a>
                </div>
            </div>
        }
    </div>



@section Styles {
    <style>
        /* FORCE CENTER AND SPECIFIC WIDTH */
        .force-header-width {
            width: 80rem !important;  /* max-w-7xl = 80rem */
            max-width: 80rem !important;
            margin-left: -300px !important;  /* Center horizontally */
            margin-right: -300px !important; /* Center horizontally */
            padding-left: 1rem !important;
            padding-right: 1rem !important;
            box-sizing: border-box !important;
        }

        @@media (min-width: 640px) {
            .force-header-width {
                padding-left: 1.5rem !important;
                padding-right: 1.5rem !important;
            }
        }

        @@media (min-width: 1024px) {
            .force-header-width {
                padding-left: 2rem !important;
                padding-right: 2rem !important;
            }
        }
    </style>
}

@section Scripts {
    <script>
        // Check for payment status messages
        document.addEventListener('DOMContentLoaded', function() {
            const urlParams = new URLSearchParams(window.location.search);
            const paymentStatus = urlParams.get('paymentStatus');
            const message = urlParams.get('message');

            if (paymentStatus && message) {
                const decodedMessage = decodeURIComponent(message.replace(/\+/g, ' '));
                if (paymentStatus === 'success') {
                    showNotification(decodedMessage, 'success');
                } else if (paymentStatus === 'error') {
                    showNotification(decodedMessage, 'error');
                }

                // Clean URL
                const cleanUrl = window.location.pathname;
                window.history.replaceState({}, document.title, cleanUrl);
            }
        });

        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg transition-all duration-300 ${
                type === 'success' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'
            }`;
            notification.textContent = message;

            document.body.appendChild(notification);

            setTimeout(() => {
                notification.style.opacity = '0';
                setTimeout(() => {
                    document.body.removeChild(notification);
                }, 300);
            }, 5000);
        }

        function filterRegistrations(status) {
            const items = document.querySelectorAll('.registration-item');
            const tabs = document.querySelectorAll('.filter-tab');

            // Update active tab
            tabs.forEach(tab => {
                tab.classList.remove('active', 'border-blue-500', 'text-blue-600');
                tab.classList.add('border-transparent', 'text-gray-500');
            });

            event.target.classList.add('active', 'border-blue-500', 'text-blue-600');
            event.target.classList.remove('border-transparent', 'text-gray-500');

            // Filter items
            items.forEach(item => {
                const itemStatus = item.dataset.status;
                if (status === 'all' ||
                    itemStatus === status ||
                    (status === 'canceled' && (itemStatus === 'canceled' || itemStatus === 'cancelled'))) {
                    item.style.display = 'block';
                } else {
                    item.style.display = 'none';
                }
            });
        }

        // Payment modal functions
        let currentPaymentId = null;
        let currentPaymentName = '';
        let currentPaymentAmount = 0;

        function showPaymentModal(dangKyId, name, amount) {
            currentPaymentId = dangKyId;
            currentPaymentName = name;
            currentPaymentAmount = amount;
            document.getElementById('paymentModal').classList.remove('hidden');
            document.getElementById('paymentItemName').textContent = name;
            document.getElementById('paymentAmount').textContent = amount.toLocaleString('vi-VN') + ' VNƒê';
        }

        function hidePaymentModal() {
            document.getElementById('paymentModal').classList.add('hidden');
            currentPaymentId = null;
            currentPaymentName = '';
            currentPaymentAmount = 0;
        }

        function processPayment(method) {
            if (!currentPaymentId) return;

            // Show loading state
            const button = event.target;
            const originalText = button.textContent;
            button.disabled = true;
            button.textContent = 'ƒêang x·ª≠ l√Ω...';

            if (method === 'VNPAY') {
                // Create payment first, then redirect to VNPay Area
                fetch('/ThanhToan/CreatePayment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: new URLSearchParams({
                        '__RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value,
                        'registrationId': currentPaymentId,
                        'amount': currentPaymentAmount,
                        'method': 'VNPAY',
                        'note': 'Thanh to√°n VNPay t·ª´ trang ƒëƒÉng k√Ω c·ªßa t√¥i'
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success && data.thanhToanId) {
                        // Call VNPay Area to create payment URL
                        return fetch('/VNPayAPI/Home/CreatePayment', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                thanhToanId: data.thanhToanId,
                                returnUrl: '/Member/MyRegistrations'
                            })
                        });
                    } else {
                        throw new Error(data.message || 'Kh√¥ng th·ªÉ t·∫°o thanh to√°n');
                    }
                })
                .then(response => response.json())
                .then(vnpayData => {
                    if (vnpayData.success && vnpayData.paymentUrl) {
                        window.location.href = vnpayData.paymentUrl;
                    } else {
                        throw new Error(vnpayData.message || 'Kh√¥ng th·ªÉ t·∫°o URL thanh to√°n VNPay');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('C√≥ l·ªói x·∫£y ra: ' + error.message);
                    button.disabled = false;
                    button.textContent = originalText;
                });
            } else if (method === 'CASH') {
                // Process cash payment via form submission
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '/ThanhToan/CreatePayment';

                // Add anti-forgery token
                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = token;
                form.appendChild(tokenInput);

                // Add registration ID
                const regIdInput = document.createElement('input');
                regIdInput.type = 'hidden';
                regIdInput.name = 'registrationId';
                regIdInput.value = currentPaymentId;
                form.appendChild(regIdInput);

                // Add amount
                const amountInput = document.createElement('input');
                amountInput.type = 'hidden';
                amountInput.name = 'amount';
                amountInput.value = currentPaymentAmount;
                form.appendChild(amountInput);

                // Add method
                const methodInput = document.createElement('input');
                methodInput.type = 'hidden';
                methodInput.name = 'method';
                methodInput.value = 'CASH';
                form.appendChild(methodInput);

                // Add note
                const noteInput = document.createElement('input');
                noteInput.type = 'hidden';
                noteInput.name = 'note';
                noteInput.value = 'Thanh to√°n ti·ªÅn m·∫∑t t·ª´ trang ƒëƒÉng k√Ω c·ªßa t√¥i';
                form.appendChild(noteInput);

                document.body.appendChild(form);
                form.submit();
            }
        }

        // Cancel registration modal functions
        let currentCancelId = null;
        let currentCancelName = '';

        function showCancelModal(dangKyId, name) {
            currentCancelId = dangKyId;
            currentCancelName = name;
            document.getElementById('cancelModal').classList.remove('hidden');
            document.getElementById('cancelItemName').textContent = name;
        }

        function hideCancelModal() {
            document.getElementById('cancelModal').classList.add('hidden');
            currentCancelId = null;
            currentCancelName = '';
            document.getElementById('cancelReason').value = '';
        }

        function confirmCancel() {
            if (!currentCancelId) return;

            const reason = document.getElementById('cancelReason').value.trim();

            // Create form and submit
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '@Url.Action("CancelRegistration", "DangKy")';

            // Add anti-forgery token
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
            const tokenInput = document.createElement('input');
            tokenInput.type = 'hidden';
            tokenInput.name = '__RequestVerificationToken';
            tokenInput.value = token;
            form.appendChild(tokenInput);

            // Add dangKyId
            const idInput = document.createElement('input');
            idInput.type = 'hidden';
            idInput.name = 'dangKyId';
            idInput.value = currentCancelId;
            form.appendChild(idInput);

            // Add reason if provided
            if (reason) {
                const reasonInput = document.createElement('input');
                reasonInput.type = 'hidden';
                reasonInput.name = 'lyDoHuy';
                reasonInput.value = reason;
                form.appendChild(reasonInput);
            }

            document.body.appendChild(form);
            form.submit();
        }

        // Renewal Modal Functions
        let currentRenewalDangKyId = null;

        function showRenewalModal(dangKyId, packageName) {
            currentRenewalDangKyId = dangKyId;
            document.getElementById('renewalPackageName').textContent = packageName;
            document.getElementById('renewalModal').classList.remove('hidden');
            updateRenewalFee(); // Calculate initial fee
        }

        function hideRenewalModal() {
            document.getElementById('renewalModal').classList.add('hidden');
            currentRenewalDangKyId = null;
        }

        function updateRenewalFee() {
            if (!currentRenewalDangKyId) return;

            const renewalMonths = document.getElementById('renewalDuration').value;
            const renewalFeeElement = document.getElementById('renewalFee');

            renewalFeeElement.textContent = 'ƒêang t√≠nh...';

            fetch('@Url.Action("GetRenewalInfo", "Member")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: `dangKyId=${currentRenewalDangKyId}&renewalMonths=${renewalMonths}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    renewalFeeElement.textContent = data.renewalFeeFormatted;
                } else {
                    renewalFeeElement.textContent = 'L·ªói t√≠nh ph√≠';
                    alert(data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                renewalFeeElement.textContent = 'L·ªói t√≠nh ph√≠';
            });
        }

        function processRenewal() {
            if (!currentRenewalDangKyId) return;

            const renewalMonths = document.getElementById('renewalDuration').value;
            const submitBtn = document.getElementById('renewalSubmitBtn');
            const originalText = submitBtn.textContent;

            submitBtn.textContent = 'ƒêang x·ª≠ l√Ω...';
            submitBtn.disabled = true;

            // Create renewal payment
            fetch('@Url.Action("CreateRenewalPayment", "Member")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: `dangKyId=${currentRenewalDangKyId}&renewalMonths=${renewalMonths}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // ‚úÖ FIXED: Send JSON to VNPayAPI instead of form data
                    fetch('@Url.Action("CreatePayment", "Home", new { area = "VNPayAPI" })', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        },
                        body: JSON.stringify({
                            ThanhToanId: data.thanhToanId,
                            ReturnUrl: window.location.origin + '/Member/MyRegistrations'
                        })
                    })
                    .then(response => response.json())
                    .then(vnpayData => {
                        if (vnpayData.success) {
                            // Redirect to VNPay payment URL
                            window.location.href = vnpayData.paymentUrl;
                        } else {
                            alert(vnpayData.message || 'C√≥ l·ªói x·∫£y ra khi t·∫°o thanh to√°n VNPay.');
                            submitBtn.textContent = originalText;
                            submitBtn.disabled = false;
                        }
                    })
                    .catch(error => {
                        console.error('VNPay Error:', error);
                        alert('C√≥ l·ªói x·∫£y ra khi k·∫øt n·ªëi VNPay.');
                        submitBtn.textContent = originalText;
                        submitBtn.disabled = false;
                    });
                } else {
                    alert(data.message);
                    submitBtn.textContent = originalText;
                    submitBtn.disabled = false;
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('C√≥ l·ªói x·∫£y ra khi t·∫°o thanh to√°n gia h·∫°n.');
                submitBtn.textContent = originalText;
                submitBtn.disabled = false;
            });
        }
    </script>
}

<!-- Payment Modal -->
<div id="paymentModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-xl bg-white">
        <div class="mt-3">
            <!-- Modal Header -->
            <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg font-semibold text-gray-900">üí≥ Thanh to√°n ƒëƒÉng k√Ω</h3>
                <button type="button" onclick="hidePaymentModal()" class="text-gray-400 hover:text-gray-600 transition-colors duration-200">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>

            <!-- Modal Body -->
            <div class="mb-6">
                <div class="bg-gray-50 rounded-lg p-4 mb-4">
                    <p class="text-sm text-gray-600 mb-2">ƒêƒÉng k√Ω:</p>
                    <p class="font-semibold text-gray-900" id="paymentItemName"></p>
                    <p class="text-sm text-gray-600 mt-2">S·ªë ti·ªÅn:</p>
                    <p class="text-xl font-bold text-green-600" id="paymentAmount"></p>
                </div>
                <p class="text-sm text-gray-600 mb-4">
                    Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n:
                </p>
            </div>

            <!-- Modal Footer -->
            <div class="space-y-3">
                <button type="button"
                        onclick="processPayment('VNPAY')"
                        class="w-full px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200 font-medium flex items-center justify-center">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"></path>
                    </svg>
                    Thanh to√°n VNPay
                </button>
                <button type="button"
                        onclick="processPayment('CASH')"
                        class="w-full px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors duration-200 font-medium flex items-center justify-center">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z"></path>
                    </svg>
                    Thanh to√°n ti·ªÅn m·∫∑t
                </button>
                <button type="button"
                        onclick="hidePaymentModal()"
                        class="w-full px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors duration-200 font-medium">
                    H·ªßy b·ªè
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Cancel Registration Modal -->
<div id="cancelModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-xl bg-white">
        <div class="mt-3">
            <!-- Modal Header -->
            <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg font-semibold text-gray-900">‚ö†Ô∏è X√°c nh·∫≠n h·ªßy ƒëƒÉng k√Ω</h3>
                <button type="button" onclick="hideCancelModal()" class="text-gray-400 hover:text-gray-600 transition-colors duration-200">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>

            <!-- Modal Body -->
            <div class="mb-6">
                <p class="text-sm text-gray-600 mb-4">
                    B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën h·ªßy ƒëƒÉng k√Ω <strong id="cancelItemName" class="text-gray-900"></strong>?
                </p>
                <div>
                    <label for="cancelReason" class="block text-sm font-medium text-gray-700 mb-2">
                        L√Ω do h·ªßy (t√πy ch·ªçn):
                    </label>
                    <textarea id="cancelReason"
                              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors duration-200"
                              rows="3"
                              placeholder="Nh·∫≠p l√Ω do h·ªßy ƒëƒÉng k√Ω..."></textarea>
                </div>
            </div>

            <!-- Modal Footer -->
            <div class="flex justify-end space-x-3">
                <button type="button"
                        onclick="hideCancelModal()"
                        class="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors duration-200 font-medium">
                    H·ªßy b·ªè
                </button>
                <button type="button"
                        onclick="confirmCancel()"
                        class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors duration-200 font-medium">
                    X√°c nh·∫≠n h·ªßy
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Renewal Modal -->
<div id="renewalModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-xl shadow-xl max-w-md w-full">
            <!-- Modal Header -->
            <div class="flex items-center justify-between p-6 border-b border-gray-200">
                <h3 class="text-lg font-semibold text-gray-900">üîÑ Gia h·∫°n g√≥i t·∫≠p</h3>
                <button type="button"
                        onclick="hideRenewalModal()"
                        class="text-gray-400 hover:text-gray-600 transition-colors duration-200">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>

            <!-- Modal Body -->
            <div class="p-6">
                <div class="mb-4">
                    <p class="text-gray-600 mb-2">G√≥i t·∫≠p: <span id="renewalPackageName" class="font-semibold text-gray-900"></span></p>
                </div>

                <div class="mb-4">
                    <label for="renewalDuration" class="block text-sm font-medium text-gray-700 mb-2">Ch·ªçn th·ªùi h·∫°n gia h·∫°n:</label>
                    <select id="renewalDuration"
                            onchange="updateRenewalFee()"
                            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors duration-200">
                        <option value="1">1 th√°ng</option>
                        <option value="3">3 th√°ng</option>
                        <option value="6">6 th√°ng</option>
                        <option value="12">12 th√°ng</option>
                    </select>
                </div>

                <div class="mb-4 p-4 bg-blue-50 rounded-lg">
                    <div class="flex justify-between items-center">
                        <span class="text-sm font-medium text-blue-700">Ph√≠ gia h·∫°n:</span>
                        <span id="renewalFee" class="text-lg font-bold text-blue-900">ƒêang t√≠nh...</span>
                    </div>
                </div>

                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Ph∆∞∆°ng th·ª©c thanh to√°n:</label>
                    <div class="flex items-center p-3 border border-gray-300 rounded-lg bg-gray-50">
                        <img src="https://vnpay.vn/s1/statics.vnpay.vn/2023/6/0oxhzjmxbksr1686814746087.png" alt="VNPay" class="w-8 h-8 mr-3">
                        <span class="text-sm font-medium text-gray-700">VNPay</span>
                    </div>
                </div>
            </div>

            <!-- Modal Footer -->
            <div class="flex justify-end space-x-3 p-6 border-t border-gray-200">
                <button type="button"
                        onclick="hideRenewalModal()"
                        class="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors duration-200 font-medium">
                    H·ªßy b·ªè
                </button>
                <button type="button"
                        id="renewalSubmitBtn"
                        onclick="processRenewal()"
                        class="px-6 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 transition-colors duration-200 font-medium">
                    Thanh to√°n gia h·∫°n
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Anti-forgery token for AJAX requests -->
@Html.AntiForgeryToken()
