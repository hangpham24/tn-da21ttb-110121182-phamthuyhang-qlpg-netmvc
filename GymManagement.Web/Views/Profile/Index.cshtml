@model GymManagement.Web.Models.DTOs.NguoiDungDto

@{
    ViewData["Title"] = "H·ªì s∆° c√° nh√¢n";
    if(User.IsInRole("Admin"))
    {
        Layout = "_Layout";
    }
    else if (User.IsInRole("Trainer"))
    {
        Layout = "_TrainerLayout";
    }
    else
    {
        Layout = "_MemberLayout";
    }
}

<style>
    .tab-button {
        transition: all 0.3s ease;
    }
    .tab-button.active {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
    }
    .tab-content {
        animation: fadeIn 0.5s ease-in-out;
    }
    @@keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }
    .stat-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    .stat-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 25px rgba(0,0,0,0.1);
    }
    .progress-ring {
        transform: rotate(-90deg);
    }
    .progress-ring-circle {
        transition: stroke-dasharray 0.35s;
        transform: rotate(-90deg);
        transform-origin: 50% 50%;
    }
    .metric-icon {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 48px;
        height: 48px;
        color: white;
        font-size: 20px;
    }
    .growth-positive {
        color: #10b981;
    }
    .growth-negative {
        color: #ef4444;
    }
    .growth-neutral {
        color: #6b7280;
    }
    .pulse-animation {
        animation: pulse 2s infinite;
    }
    @@keyframes pulse {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.5; }
    }
</style>

<div class="min-h-screen bg-gray-50 py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Header -->
        <div class="bg-white rounded-xl shadow-sm p-6 mb-8">
            <div class="flex items-center space-x-6">
                @if (!string.IsNullOrEmpty(Model.AnhDaiDien))
                {
                    <img src="@Model.AnhDaiDien" alt="@Model.HoTen" 
                         class="w-20 h-20 rounded-full object-cover" 
                         onerror="this.onerror=null; this.style.display='none'; this.nextElementSibling.style.display='flex';">
                    <div class="w-20 h-20 bg-blue-100 rounded-full items-center justify-center" style="display:none;">
                        <span class="text-2xl font-bold text-blue-600">@(Model.HoTen?.Substring(0, 1).ToUpper())</span>
                    </div>
                }
                else
                {
                    <div class="w-20 h-20 bg-blue-100 rounded-full flex items-center justify-center">
                        <span class="text-2xl font-bold text-blue-600">@(Model.HoTen?.Substring(0, 1).ToUpper())</span>
                    </div>
                }
                <div>
                    <h1 class="text-3xl font-bold text-gray-900">@Model.HoTen</h1>
                    <p class="text-gray-600">@Model.Email</p>
                    <p class="text-sm text-gray-500">Tham gia t·ª´ @Model.NgayTao.ToString("MMMM yyyy", new System.Globalization.CultureInfo("vi-VN"))</p>
                </div>
            </div>
        </div>

        <!-- Tabs Navigation -->
        <div class="bg-white rounded-xl shadow-sm mb-8">
            <div class="border-b border-gray-200">
                <nav class="-mb-px flex space-x-8 px-6" aria-label="Tabs">
                    <button type="button" onclick="switchTab('personal')" id="tab-personal" 
                            class="tab-button border-b-2 border-blue-500 text-blue-600 py-4 px-1 text-sm font-medium">
                        üë§ Th√¥ng tin c√° nh√¢n
                    </button>
                    @if (!User.IsInRole("Trainer"))
                    {
                        <button type="button" onclick="switchTab('stats')" id="tab-stats" 
                                            class="tab-button border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 py-4 px-1 text-sm font-medium">
                            üìä Th·ªëng k√™ t·∫≠p luy·ªán
                        </button>
                    }
                    
                    @* <button type="button" onclick="switchTab('trainers')" id="tab-trainers" 
                            class="tab-button border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 py-4 px-1 text-sm font-medium">
                        üèÉ Hu·∫•n luy·ªán vi√™n c·ªßa t√¥i
                    </button> *@
                </nav>
            </div>

            <!-- Personal Info Tab -->
            <div id="content-personal" class="tab-content p-6">
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                    <!-- Left Column - Display Info -->
                    <div class="space-y-6">
                        <div>
                            <h3 class="text-lg font-semibold text-gray-900 mb-4">Th√¥ng tin hi·ªán t·∫°i</h3>
                            <div class="space-y-4">
                                <div class="flex justify-between items-center py-3 border-b border-gray-100">
                                    <span class="text-gray-600">H·ªç v√† t√™n:</span>
                                    <span class="font-medium text-gray-900">@Model.HoTen</span>
                                </div>
                                <div class="flex justify-between items-center py-3 border-b border-gray-100">
                                    <span class="text-gray-600">Email:</span>
                                    <span class="font-medium text-gray-900">@Model.Email</span>
                                </div>
                                <div class="flex justify-between items-center py-3 border-b border-gray-100">
                                    <span class="text-gray-600">S·ªë ƒëi·ªán tho·∫°i:</span>
                                    <span class="font-medium text-gray-900">@(Model.SoDienThoai ?? "Ch∆∞a c·∫≠p nh·∫≠t")</span>
                                </div>
                                <div class="flex justify-between items-center py-3 border-b border-gray-100">
                                    <span class="text-gray-600">Ng√†y sinh:</span>
                                    <span class="font-medium text-gray-900">@(Model.NgaySinh?.ToString("dd/MM/yyyy") ?? "Ch∆∞a c·∫≠p nh·∫≠t")</span>
                                </div>
                                <div class="flex justify-between items-center py-3 border-b border-gray-100">
                                    <span class="text-gray-600">Gi·ªõi t√≠nh:</span>
                                    <span class="font-medium text-gray-900">@(Model.GioiTinh ?? "Ch∆∞a c·∫≠p nh·∫≠t")</span>
                                </div>
                                <div class="flex justify-between items-center py-3">
                                    <span class="text-gray-600">ƒê·ªãa ch·ªâ:</span>
                                    <span class="font-medium text-gray-900">@(Model.DiaChi ?? "Ch∆∞a c·∫≠p nh·∫≠t")</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Right Column - Edit Actions -->
                    <div class="space-y-6">
                        <div>
                            <h3 class="text-lg font-semibold text-gray-900 mb-4">Qu·∫£n l√Ω t√†i kho·∫£n</h3>
                            <div class="space-y-4">
                                <a asp-action="Edit" class="block w-full bg-blue-600 hover:bg-blue-700 text-white text-center py-3 px-4 rounded-lg font-medium transition duration-200">
                                    ‚úèÔ∏è Ch·ªânh s·ª≠a th√¥ng tin
                                </a>
                                <a asp-action="ChangePassword" class="block w-full bg-yellow-600 hover:bg-yellow-700 text-white text-center py-3 px-4 rounded-lg font-medium transition duration-200">
                                    üîí ƒê·ªïi m·∫≠t kh·∫©u
                                </a>
                                @* <a asp-action="Security" class="block w-full bg-green-600 hover:bg-green-700 text-white text-center py-3 px-4 rounded-lg font-medium transition duration-200">
                                    üõ°Ô∏è B·∫£o m·∫≠t t√†i kho·∫£n
                                </a> *@
                            </div>
                        </div>

                        @* <!-- Quick Stats Card -->
                        <div class="bg-gradient-to-br from-blue-50 to-indigo-100 p-6 rounded-lg">
                            <h4 class="text-lg font-semibold text-gray-900 mb-4">T√≥m t·∫Øt ho·∫°t ƒë·ªông</h4>
                            <div class="grid grid-cols-2 gap-4 text-center">
                                <div>
                                    <div class="text-2xl font-bold text-blue-600" id="quick-sessions">--</div>
                                    <div class="text-sm text-gray-600">Bu·ªïi t·∫≠p</div>
                                </div>
                                <div>
                                    <div class="text-2xl font-bold text-green-600" id="quick-frequency">--</div>
                                    <div class="text-sm text-gray-600">L·∫ßn/tu·∫ßn</div>
                                </div>
                            </div>
                        </div> *@
                    </div>
                </div>
            </div>

            <!-- Workout Stats Tab -->
            <div id="content-stats" class="tab-content p-6 hidden">
                <div class="grid grid-cols-1 xl:grid-cols-3 gap-8">
                    <!-- Stats Cards -->
                    <div class="xl:col-span-1 space-y-4">
                        <div class="bg-blue-50 p-6 rounded-lg stat-card">
                            <div class="flex items-center">
                                <div class="w-12 h-12 bg-blue-500 rounded-lg flex items-center justify-center mr-4">
                                    <span class="text-white text-xl">üèÉ</span>
                                </div>
                                <div>
                                    <div class="text-2xl font-bold text-blue-600 pulse-animation" id="total-sessions">--</div>
                                    <div class="text-sm text-gray-600">T·ªïng bu·ªïi t·∫≠p</div>
                                </div>
                            </div>
                        </div>

                        <div class="bg-green-50 p-6 rounded-lg stat-card">
                            <div class="flex items-center">
                                <div class="w-12 h-12 bg-green-500 rounded-lg flex items-center justify-center mr-4">
                                    <span class="text-white text-xl">üí∞</span>
                                </div>
                                <div>
                                    <div class="text-2xl font-bold text-green-600 pulse-animation" id="total-cost">--</div>
                                    <div class="text-sm text-gray-600">T·ªïng chi ph√≠</div>
                                </div>
                            </div>
                        </div>

                        <div class="bg-purple-50 p-6 rounded-lg stat-card">
                            <div class="flex items-center">
                                <div class="w-12 h-12 bg-purple-500 rounded-lg flex items-center justify-center mr-4">
                                    <span class="text-white text-xl">üìà</span>
                                </div>
                                <div>
                                    <div class="text-2xl font-bold text-purple-600 pulse-animation" id="frequency">--</div>
                                    <div class="text-sm text-gray-600">L·∫ßn/tu·∫ßn (TB)</div>
                                </div>
                            </div>
                        </div>

                        <div class="bg-yellow-50 p-6 rounded-lg stat-card">
                            <div class="text-center">
                                <div class="text-lg font-semibold text-gray-900 mb-2">Th√°ng n√†y</div>
                                <div class="text-3xl font-bold text-yellow-600 pulse-animation" id="this-month">--</div>
                                <div class="text-sm text-gray-600">bu·ªïi t·∫≠p</div>
                                <div class="text-xs mt-1">
                                    <span id="monthly-growth" class="growth-neutral">--</span>% so v·ªõi th√°ng tr∆∞·ªõc
                                </div>
                            </div>
                        </div>

                        <div class="bg-indigo-50 p-6 rounded-lg stat-card">
                            <div class="flex items-center">
                                <div class="w-12 h-12 bg-indigo-500 rounded-lg flex items-center justify-center mr-4">
                                    <span class="text-white text-xl">üî•</span>
                                </div>
                                <div>
                                    <div class="text-2xl font-bold text-indigo-600 pulse-animation" id="workout-streak">--</div>
                                    <div class="text-sm text-gray-600">Streak (ng√†y)</div>
                                </div>
                            </div>
                        </div>

                        <div class="bg-teal-50 p-6 rounded-lg stat-card">
                            <div class="flex items-center">
                                <div class="w-12 h-12 bg-teal-500 rounded-lg flex items-center justify-center mr-4">
                                    <span class="text-white text-xl">üìä</span>
                                </div>
                                <div>
                                    <div class="text-2xl font-bold text-teal-600 pulse-animation" id="consistency-score">--</div>
                                    <div class="text-sm text-gray-600">ƒêi·ªÉm nh·∫•t qu√°n (%)</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Chart and Additional Stats Area -->
                    <div class="xl:col-span-2 space-y-6">
                        <div class="bg-white p-6 border border-gray-200 rounded-lg">
                            <h3 class="text-lg font-semibold text-gray-900 mb-4">üìä Th·ªëng k√™ 6 th√°ng g·∫ßn ƒë√¢y</h3>
                            <div class="relative h-80">
                                <canvas id="monthlyChart"></canvas>
                            </div>
                        </div>

                        <!-- Additional Stats -->
                        <div class="bg-white p-6 border border-gray-200 rounded-lg">
                            <h3 class="text-lg font-semibold text-gray-900 mb-4">üìà Th√¥ng tin chi ti·∫øt</h3>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div class="bg-gray-50 p-4 rounded-lg">
                                    <div class="flex items-center justify-between">
                                        <span class="text-sm font-medium text-gray-600">Ng√†y ho·∫°t ƒë·ªông nhi·ªÅu nh·∫•t</span>
                                        <span class="text-sm font-bold text-gray-900" id="most-active-day">--</span>
                                    </div>
                                </div>
                                <div class="bg-gray-50 p-4 rounded-lg">
                                    <div class="flex items-center justify-between">
                                        <span class="text-sm font-medium text-gray-600">Khung gi·ªù y√™u th√≠ch</span>
                                        <span class="text-sm font-bold text-gray-900" id="favorite-time-slot">--</span>
                                    </div>
                                </div>
                                <div class="bg-gray-50 p-4 rounded-lg">
                                    <div class="flex items-center justify-between">
                                        <span class="text-sm font-medium text-gray-600">Th·ªùi gian t·∫≠p TB</span>
                                        <span class="text-sm font-bold text-gray-900" id="avg-session-duration">--</span>
                                    </div>
                                </div>
                                <div class="bg-gray-50 p-4 rounded-lg">
                                    <div class="flex items-center justify-between">
                                        <span class="text-sm font-medium text-gray-600">Ng√†y b·∫Øt ƒë·∫ßu t·∫≠p</span>
                                        <span class="text-sm font-bold text-gray-900" id="first-attendance">--</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- My Trainers Tab -->
            <div id="content-trainers" class="tab-content p-6 hidden">
                <div class="mb-6">
                    <h3 class="text-lg font-semibold text-gray-900">üë®‚Äçüè´ Danh s√°ch hu·∫•n luy·ªán vi√™n</h3>
                    <p class="text-gray-600">C√°c hu·∫•n luy·ªán vi√™n ƒë√£ v√† ƒëang h∆∞·ªõng d·∫´n b·∫°n</p>
                </div>

                <div id="trainers-content">
                    <div class="flex items-center justify-center py-8">
                        <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mr-3"></div>
                        <span class="text-gray-500">ƒêang t·∫£i danh s√°ch hu·∫•n luy·ªán vi√™n...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let currentTab = 'personal';
        let monthlyChart = null;

        function switchTab(tabName) {
            // Hide all tab contents
            document.querySelectorAll('.tab-content').forEach(content => {
                content.classList.add('hidden');
            });

            // Remove active styles from all tabs
            document.querySelectorAll('.tab-button').forEach(button => {
                button.classList.remove('border-blue-500', 'text-blue-600');
                button.classList.add('border-transparent', 'text-gray-500');
            });

            // Show selected tab content
            document.getElementById(`content-${tabName}`).classList.remove('hidden');

            // Add active styles to selected tab
            const selectedTab = document.getElementById(`tab-${tabName}`);
            selectedTab.classList.add('border-blue-500', 'text-blue-600');
            selectedTab.classList.remove('border-transparent', 'text-gray-500');

            currentTab = tabName;

            // Load data based on tab
            if (tabName === 'stats') {
                loadPersonalStats();
            } else if (tabName === 'trainers') {
                loadTrainers();
            }
        }

        function loadPersonalStats() {
            // Load basic stats
            fetch('/Profile/GetPersonalStats')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const stats = data.stats;

                        // Update stats cards with null checks (match API response case)
                        document.getElementById('total-sessions').textContent = stats.totalSessions || 0;
                        document.getElementById('total-cost').textContent = (stats.totalCost || 0).toLocaleString('vi-VN') + ' VNƒê';
                        document.getElementById('frequency').textContent = stats.frequency || 0;
                        document.getElementById('this-month').textContent = stats.thisMonth || 0;

                        // Update new metrics with animation (match API response case)
                        const growthElement = document.getElementById('monthly-growth');
                        if (growthElement) {
                            const growth = stats.monthlyGrowth || 0;
                            growthElement.textContent = growth > 0 ? `+${growth}` : growth;
                            growthElement.className = growth > 0 ? 'growth-positive' : growth < 0 ? 'growth-negative' : 'growth-neutral';
                        }

                        // Remove pulse animation after data loads
                        setTimeout(() => {
                            document.querySelectorAll('.pulse-animation').forEach(el => {
                                el.classList.remove('pulse-animation');
                            });
                        }, 1000);

                        // Update additional info (match API response case)
                        if (stats.firstAttendanceDate) {
                            document.getElementById('first-attendance').textContent = stats.firstAttendanceDate;
                        }

                        // Update quick stats in personal tab with null checks
                        document.getElementById('quick-sessions').textContent = stats.totalSessions || 0;
                        document.getElementById('quick-frequency').textContent = stats.frequency || 0;

                        // Create chart (match API response case)
                        createMonthlyChart(stats.monthlyData);
                    } else {
                        console.error('Error loading stats:', data.message);
                    }
                })
                .catch(error => {
                    console.error('Error loading personal stats:', error);
                });

            // Load detailed stats
            fetch('/Profile/GetDetailedStats')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const detailedStats = data.detailedStats;

                        // Update detailed metrics with null checks (match API response case)
                        document.getElementById('workout-streak').textContent = detailedStats.workoutStreak || 0;
                        document.getElementById('consistency-score').textContent = detailedStats.consistencyScore || 0;
                        document.getElementById('most-active-day').textContent = detailedStats.mostActiveDay || '--';
                        document.getElementById('favorite-time-slot').textContent = detailedStats.favoriteTimeSlot || '--';
                        document.getElementById('avg-session-duration').textContent = detailedStats.averageSessionDuration || '--';
                    } else {
                        console.error('Error loading detailed stats:', data.message);
                    }
                })
                .catch(error => {
                    console.error('Error loading detailed stats:', error);
                });
        }

        function createMonthlyChart(monthlyData) {
            const ctx = document.getElementById('monthlyChart').getContext('2d');
            
            if (monthlyChart) {
                monthlyChart.destroy();
            }
            
            monthlyChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: monthlyData.map(d => d.month),
                    datasets: [{
                        label: 'S·ªë bu·ªïi t·∫≠p',
                        data: monthlyData.map(d => d.count),
                        borderColor: 'rgb(59, 130, 246)',
                        backgroundColor: 'rgba(59, 130, 246, 0.1)',
                        tension: 0.4,
                        fill: true,
                        pointBackgroundColor: 'rgb(59, 130, 246)',
                        pointBorderColor: '#fff',
                        pointBorderWidth: 2,
                        pointRadius: 6
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: 'rgba(0, 0, 0, 0.1)'
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    }
                }
            });
        }

        function loadTrainers() {
            fetch('/Profile/MyTrainers')
                .then(response => response.text())
                .then(html => {
                    // Extract only the trainers content from the returned HTML
                    const parser = new DOMParser();
                    const doc = parser.parseFromString(html, 'text/html');
                    const trainersData = doc.querySelector('script[type="application/json"]');
                    
                    if (trainersData) {
                        const trainers = JSON.parse(trainersData.textContent);
                        displayTrainers(trainers);
                    } else {
                        // Fallback: make AJAX call to get trainers data
                        loadTrainersData();
                    }
                })
                .catch(error => {
                    console.error('Error loading trainers:', error);
                    loadTrainersData();
                });
        }

        function loadTrainersData() {
            // Since we can't easily extract ViewBag data via AJAX, we'll load it directly
            // This would need to be implemented as a separate API endpoint
            const trainersContent = document.getElementById('trainers-content');
            trainersContent.innerHTML = `
                <div class="text-center py-8">
                    <p class="text-gray-500">T√≠nh nƒÉng n√†y ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn.</p>
                    <p class="text-sm text-gray-400 mt-2">Vui l√≤ng reload trang v√† ch·ªçn tab "Hu·∫•n luy·ªán vi√™n c·ªßa t√¥i" ƒë·ªÉ xem th√¥ng tin.</p>
                </div>
            `;
        }

        function displayTrainers(trainers) {
            const trainersContent = document.getElementById('trainers-content');
            
            if (!trainers || trainers.length === 0) {
                trainersContent.innerHTML = `
                    <div class="text-center py-8">
                        <svg class="w-16 h-16 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                        </svg>
                        <h3 class="text-lg font-medium text-gray-900 mb-2">Ch∆∞a c√≥ hu·∫•n luy·ªán vi√™n</h3>
                        <p class="text-gray-500">B·∫°n ch∆∞a ƒëƒÉng k√Ω l·ªõp h·ªçc n√†o c√≥ hu·∫•n luy·ªán vi√™n h∆∞·ªõng d·∫´n.</p>
                        <a href="${window.location.origin}/Member/Classes" class="mt-4 inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">
                            Xem l·ªõp h·ªçc
                        </a>
                    </div>
                `;
                return;
            }

            let html = '<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">';
            
            trainers.forEach(trainer => {
                html += `
                    <div class="bg-white border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow">
                        <div class="flex items-center mb-4">
                            <div class="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mr-4">
                                <span class="text-lg font-bold text-blue-600">${trainer.HoTen.charAt(0)}</span>
                            </div>
                            <div>
                                <h4 class="text-lg font-semibold text-gray-900">${trainer.HoTen}</h4>
                                <p class="text-sm text-gray-600">Hu·∫•n luy·ªán vi√™n</p>
                            </div>
                        </div>
                        
                        <div class="space-y-2 mb-4">
                            <div class="flex items-center text-sm text-gray-600">
                                <span class="mr-2">üìß</span>
                                ${trainer.Email || 'Ch∆∞a c·∫≠p nh·∫≠t'}
                            </div>
                            <div class="flex items-center text-sm text-gray-600">
                                <span class="mr-2">üì±</span>
                                ${trainer.SoDienThoai || 'Ch∆∞a c·∫≠p nh·∫≠t'}
                            </div>
                        </div>
                        
                        <div class="border-t pt-4">
                            <p class="text-sm font-medium text-gray-900 mb-2">L·ªõp h·ªçc c·ªßa b·∫°n (${trainer.TotalClasses}):</p>
                            <div class="space-y-1">
                                ${trainer.MyClasses.map(className => 
                                    `<span class="inline-block bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded mr-1 mb-1">${className}</span>`
                                ).join('')}
                            </div>
                        </div>
                    </div>
                `;
            });
            
            html += '</div>';
            trainersContent.innerHTML = html;
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            // Load quick stats for personal tab
            loadPersonalStats();
        });
    </script>
}
