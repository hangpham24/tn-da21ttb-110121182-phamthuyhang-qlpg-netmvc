<!DOCTYPE html>
<html lang="vi" class="h-full bg-gray-50 ">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Quản Lý Phòng GYM</title>

    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>

    <!-- Flowbite CSS -->
    <link href="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.css" rel="stylesheet" />

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <!-- Backup Font Awesome CDN -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v6.4.0/css/all.css" />

    <!-- QRCode.js Library -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcode/1.5.3/qrcode.min.js"></script>

    <!-- Face-API.js for face recognition -->
    <script src="https://cdn.jsdelivr.net/npm/face-api.js@0.22.2/dist/face-api.min.js"></script>

    <!-- Global Face-API Models Manager -->
    <script src="~/js/face-api-global.js" asp-append-version="true"></script>

    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <!-- Custom CSS -->
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/class-management.css" asp-append-version="true" />

    @await RenderSectionAsync("Styles", required: false)
</head>

<body class="h-full bg-gray-50 ">
    <!-- Sidebar -->
    <aside id="logo-sidebar"
        class="fixed top-0 left-0 z-40 w-64 h-screen pt-20 transition-transform -translate-x-full bg-white border-r border-gray-200 sm:translate-x-0 "
        aria-label="Sidebar">
        <div class="h-full px-3 pb-4 overflow-y-auto bg-white ">
            <!-- Sidebar Header -->
            @* <div class="flex items-center p-2 mb-5">
                <img src="~/images/gym-logo.png" class="h-8 me-3" alt="GYM Logo" onerror="this.style.display='none'">
                <span class="text-xl font-semibold text-gray-900 ">🏋️ GYM Admin</span>
            </div> *@

            <ul class="space-y-1 font-medium">
                @if (User.IsInRole("Admin"))
                {
                    <li>
                        <a asp-controller="Home" asp-action="Dashboard"
                            class="flex items-center p-3 text-gray-900 rounded-lg hover:bg-gray-100 group @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Home" && ViewContext.RouteData.Values["Action"]?.ToString() == "Dashboard" ? "bg-gray-100 " : "")">
                            <svg class="flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 group-hover:text-gray-900"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                                viewBox="0 0 22 21">
                                <path
                                    d="M16.975 11H10V4.025a1 1 0 0 0-1.066-.998 8.5 8.5 0 1 0 9.039 9.039.999.999 0 0 0-1-1.066h.002Z" />
                                <path
                                    d="M12.5 0c-.157 0-.311.01-.565.027A1 1 0 0 0 11 1.02V10h8.975a1 1 0 0 0 1-.935c.013-.188.028-.374.028-.565A8.51 8.51 0 0 0 12.5 0Z" />
                            </svg>
                            <span class="flex-1 ms-3 whitespace-nowrap">📊 Dashboard Admin</span>
                        </a>
                    </li>

                    <li>
                        <a asp-controller="User" asp-action="Index"
                            class="flex items-center p-3 text-gray-900 rounded-lg hover:bg-gray-100 group @(ViewContext.RouteData.Values["Controller"]?.ToString() == "User" && ViewContext.RouteData.Values["Action"]?.ToString() == "Index" && ViewBag.LoaiNguoiDung == null ? "bg-gray-100" : "")">
                            <svg class="flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 group-hover:text-gray-900" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z">
                                </path>
                            </svg>
                            <span class="flex-1 ms-3 whitespace-nowrap">👥 Tất cả người dùng</span>
                        </a>
                    </li>
                }

                @if (User.IsInRole("Admin"))
                {
                    <li>
                        <a asp-controller="GoiTap" asp-action="Index"
                            class="flex items-center p-3 text-gray-900 rounded-lg hover:bg-gray-100 group @(ViewContext.RouteData.Values["Controller"]?.ToString() == "GoiTap" ? "bg-gray-100 " : "")">
                            <svg class="flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 group-hover:text-gray-900"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                                viewBox="0 0 18 20">
                                <path
                                    d="M17 5.923A1 1 0 0 0 16 5h-3V4a4 4 0 1 0-8 0v1H2a1 1 0 0 0-1 .923L.086 17.846A2 2 0 0 0 2.08 20h13.84a2 2 0 0 0 1.994-2.153L17 5.923ZM7 9a1 1 0 0 1-2 0V7h2v2Zm0-5a2 2 0 1 1 4 0v1H7V4Zm6 5a1 1 0 1 1-2 0V7h2v2Z" />
                            </svg>
                            <span class="flex-1 ms-3 whitespace-nowrap">💳 Quản lý gói tập</span>
                        </a>
                    </li>
                }
                @if (User.IsInRole("Admin"))
                {
                    <li>
                        <a asp-controller="TinTuc" asp-action="Index"
                            class="flex items-center p-3 text-gray-900 rounded-lg hover:bg-gray-100 group @(ViewContext.RouteData.Values["Controller"]?.ToString() == "TinTuc" ? "bg-gray-100 " : "")">
                            <svg class="flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 group-hover:text-gray-900"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                                viewBox="0 0 20 20">
                                <path
                                    d="M18 7.5h-.423l-.452-1.09.3-.3a1.5 1.5 0 0 0 0-2.121L16.01 2.575a1.5 1.5 0 0 0-2.121 0l-.3.3-1.089-.452V2A1.5 1.5 0 0 0 11 .5H9A1.5 1.5 0 0 0 7.5 2v.423l-1.09.452-.3-.3a1.5 1.5 0 0 0-2.121 0L2.576 3.99a1.5 1.5 0 0 0 0 2.121l.3.3L2.423 7.5H2A1.5 1.5 0 0 0 .5 9v2A1.5 1.5 0 0 0 2 12.5h.423l.452 1.09-.3.3a1.5 1.5 0 0 0 0 2.121l1.415 1.413a1.5 1.5 0 0 0 2.121 0l.3-.3 1.09.452V18A1.5 1.5 0 0 0 9 19.5h2a1.5 1.5 0 0 0 1.5-1.5v-.423l1.09-.452.3.3a1.5 1.5 0 0 0 2.121 0L17.424 16.01a1.5 1.5 0 0 0 0-2.121l-.3-.3.452-1.09H18a1.5 1.5 0 0 0 1.5-1.5V9A1.5 1.5 0 0 0 18 7.5Zm-8 6a3.5 3.5 0 1 1 0-7 3.5 3.5 0 0 1 0 7Z" />
                            </svg>
                            <span class="flex-1 ms-3 whitespace-nowrap">📰 Quản lý tin tức</span>
                        </a>
                    </li>
                }
                @if (User.IsInRole("Admin"))
                {
                    <li>
                        <a asp-controller="LopHoc" asp-action="Index"
                            class="flex items-center p-3 text-gray-900 rounded-lg hover:bg-gray-100 group @(ViewContext.RouteData.Values["Controller"]?.ToString() == "LopHoc" ? "bg-gray-100 " : "")">
                            <svg class="flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 group-hover:text-gray-900"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                                viewBox="0 0 20 20">
                                <path d="M5 5V.13a2.96 2.96 0 0 0-1.293.749L.879 3.707A2.96 2.96 0 0 0 .13 5H5Z" />
                                <path
                                    d="M6.737 11.061a2.961 2.961 0 0 1 .81-1.515l6.117-6.116A4.839 4.839 0 0 1 16 2.141V2a1.97 1.97 0 0 0-1.933-2H7v5a2 2 0 0 1-2 2H0v11a1.969 1.969 0 0 0 1.933 2h12.134A1.97 1.97 0 0 0 16 18v-3.093l-1.546 1.546c-.413.413-.94.695-1.513.81l-3.4.679a2.947 2.947 0 0 1-1.85-.227 2.96 2.96 0 0 1-1.635-3.257l.681-3.397Z" />
                                <path
                                    d="M8.961 16a.93.93 0 0 0 .189-.019l3.4-.679a.961.961 0 0 0 .49-.263l6.118-6.117a2.884 2.884 0 0 0-4.079-4.078l-6.117 6.117a.96.96 0 0 0-.263.491l-.679 3.4A.961.961 0 0 0 8.961 16Zm7.477-9.8a.958.958 0 0 1 .68-.281.961.961 0 0 1 .682 1.644l-.315.315-1.36-1.36.313-.318Zm-5.911 5.911 4.236-4.236 1.359 1.359-4.236 4.237-1.7.339.341-1.699Z" />
                            </svg>
                            <span class="flex-1 ms-3 whitespace-nowrap">🎓 Quản lý lớp học</span>
                        </a>
                    </li>
                }
                <!-- Admin Registration Management -->
                @if (User.IsInRole("Admin"))
                {
                    <li>
                        <a asp-controller="DangKy" asp-action="Index"
                            class="flex items-center p-3 text-gray-900 rounded-lg hover:bg-gray-100 group @(ViewContext.RouteData.Values["Controller"]?.ToString() == "DangKy" ? "bg-gray-100 " : "")">
                            <svg class="flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 group-hover:text-gray-900"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                                viewBox="0 0 20 20">
                                <path
                                    d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z" />
                            </svg>
                            <span class="flex-1 ms-3 whitespace-nowrap">📅 Quản lý đăng ký</span>
                        </a>
                    </li>
                }



                <!-- Admin Menu -->
                @if (User.IsInRole("Admin"))
                {
                    <li>
                        <a asp-controller="Booking" asp-action="Index"
                            class="flex items-center p-3 text-gray-900 rounded-lg hover:bg-gray-100 group @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Booking" ? "bg-gray-100 " : "")">
                            <svg class="flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 group-hover:text-gray-900"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                                viewBox="0 0 20 20">
                                <path
                                    d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z" />
                            </svg>
                            <span class="flex-1 ms-3 whitespace-nowrap">📅 Quản lý đặt lịch</span>
                        </a>
                    </li>
                    <li>
                        <a asp-controller="DiemDanh" asp-action="Index"
                            class="flex items-center p-3 text-gray-900 rounded-lg hover:bg-gray-100 group @(ViewContext.RouteData.Values["Controller"]?.ToString() == "DiemDanh" ? "bg-gray-100 " : "")">
                            <svg class="flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 group-hover:text-gray-900"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                                viewBox="0 0 20 20">
                                <path
                                    d="M10 0C4.612 0 0 4.336 0 9.667 0 17 10 20 10 20s10-3 10-10.333C20 4.336 15.388 0 10 0Zm0 14.5a4.833 4.833 0 1 1 0-9.667 4.833 4.833 0 0 1 0 9.667Z" />
                                <path d="M10 6.5a3.167 3.167 0 1 0 0 6.334 3.167 3.167 0 0 0 0-6.334Z" />
                            </svg>
                            <span class="flex-1 ms-3 whitespace-nowrap">✅ Quản lý điểm danh</span>
                        </a>
                    </li>
                    @* <li>
                        <a asp-controller="Reception" asp-action="Station"
                            class="flex items-center p-3 text-gray-900 rounded-lg hover:bg-gray-100 group @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Reception" ? "bg-gray-100 " : "")">
                            <svg class="flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 group-hover:text-gray-900"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                                viewBox="0 0 20 20">
                                <path d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                <path d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                            </svg>
                            <span class="flex-1 ms-3 whitespace-nowrap">👁️ Reception Station</span>
                        </a>
                    </li>
                    <li>
                        <a asp-controller="WalkIn" asp-action="Dashboard"
                            class="flex items-center p-3 text-gray-900 rounded-lg hover:bg-gray-100 group @(ViewContext.RouteData.Values["Controller"]?.ToString() == "WalkIn" ? "bg-gray-100 " : "")">
                            <svg class="flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 group-hover:text-gray-900"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                                viewBox="0 0 20 20">
                                <path d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m3 5.197H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"/>
                            </svg>
                            <span class="flex-1 ms-3 whitespace-nowrap">🚶 Quản lý khách vãng lai</span>
                        </a>
                    </li> *@
                    <li>
                        <a asp-controller="FaceManagement" asp-action="AdminManage"
                            class="flex items-center p-3 text-gray-900 rounded-lg hover:bg-gray-100 group @(ViewContext.RouteData.Values["Controller"]?.ToString() == "FaceManagement" ? "bg-gray-100 " : "")">
                            <svg class="flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 group-hover:text-gray-900"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                                viewBox="0 0 20 20">
                                <path d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                            </svg>
                            <span class="flex-1 ms-3 whitespace-nowrap">👥 Quản lý khuôn mặt</span>
                        </a>
                    </li>
                    @* <li>
                        <a asp-controller="FaceTest" asp-action="Index"
                            class="flex items-center p-3 text-gray-900 rounded-lg hover:bg-gray-100 group @(ViewContext.RouteData.Values["Controller"]?.ToString() == "FaceTest" ? "bg-gray-100 " : "")">
                            <svg class="flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 group-hover:text-gray-900"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                                viewBox="0 0 20 20">
                                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            <span class="flex-1 ms-3 whitespace-nowrap">🧪 Face Recognition Test</span>
                        </a>
                    </li> *@

                    <li>
                        <a asp-controller="BangLuong" asp-action="Index"
                            class="flex items-center p-3 text-gray-900 rounded-lg hover:bg-gray-100 group @(ViewContext.RouteData.Values["Controller"]?.ToString() == "BangLuong" ? "bg-gray-100 " : "")">
                            <svg class="flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 group-hover:text-gray-900"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                                viewBox="0 0 20 20">
                                <path
                                    d="M11.074 4 8.442.408A.95.95 0 0 0 7.014.254L2.926 2.408A.95.95 0 0 0 2.33 3.1L1.324 8.58a.95.95 0 0 0 .254 1.042l4.592 4.592a.95.95 0 0 0 1.042.254l5.48-1.006a.95.95 0 0 0 .692-.696l2.154-4.088a.95.95 0 0 0-.254-1.042L11.074 4Z" />
                                <path d="M6.5 5.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z" />
                            </svg>
                            <span class="flex-1 ms-3 whitespace-nowrap">💰 Quản lý lương</span>
                        </a>
                    </li>
                    <li>
                        <a asp-controller="BaoCao" asp-action="Revenue"
                            class="flex items-center p-3 text-gray-900 rounded-lg hover:bg-gray-100 group @(ViewContext.RouteData.Values["Controller"]?.ToString() == "BaoCao" ? "bg-gray-100 " : "")">
                            <svg class="flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 group-hover:text-gray-900"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                                viewBox="0 0 22 21">
                                <path
                                    d="M16.975 11H10V4.025a1 1 0 0 0-1.066-.998 8.5 8.5 0 1 0 9.039 9.039.999.999 0 0 0-1-1.066h.002Z" />
                                <path
                                    d="M12.5 0c-.157 0-.311.01-.565.027A1 1 0 0 0 11 1.02V10h8.975a1 1 0 0 0 1-.935c.013-.188.028-.374.028-.565A8.51 8.51 0 0 0 12.5 0Z" />
                            </svg>
                            <span class="flex-1 ms-3 whitespace-nowrap">📊 Báo cáo</span>
                        </a>
                    </li>
                    @* <li>
                        <a asp-controller="Analytics" asp-action="Dashboard"
                            class="flex items-center p-3 text-gray-900 rounded-lg hover:bg-gray-100 group @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Analytics" ? "bg-gray-100 " : "")">
                            <svg class="flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 group-hover:text-gray-900"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                                viewBox="0 0 22 21">
                                <path
                                    d="M16.975 11H10V4.025a1 1 0 0 0-1.066-.998 8.5 8.5 0 1 0 9.039 9.039.999.999 0 0 0-1-1.066h.002Z" />
                                <path
                                    d="M12.5 0c-.157 0-.311.01-.565.027A1 1 0 0 0 11 1.02V10h8.975a1 1 0 0 0 1-.935c.013-.188.028-.374.028-.565A8.51 8.51 0 0 0 12.5 0Z" />
                            </svg>
                            <span class="flex-1 ms-3 whitespace-nowrap">📈 Analytics</span>
                        </a>
                    </li> *@
                    <li>
                        <a asp-controller="ThongBao" asp-action="Index"
                            class="flex items-center p-3 text-gray-900 rounded-lg hover:bg-gray-100 group @(ViewContext.RouteData.Values["Controller"]?.ToString() == "ThongBao" ? "bg-gray-100 " : "")">
                            <svg class="flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 group-hover:text-gray-900"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                                viewBox="0 0 24 24">
                                <path
                                    d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z" />
                            </svg>
                            <span class="flex-1 ms-3 whitespace-nowrap">📢 Quản lý thông báo</span>
                        </a>
                    </li>
                    <li>
                        <a asp-controller="KhuyenMai" asp-action="Index"
                            class="flex items-center p-3 text-gray-900 rounded-lg hover:bg-gray-100 group @(ViewContext.RouteData.Values["Controller"]?.ToString() == "KhuyenMai" ? "bg-gray-100 " : "")">
                            <svg class="flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 group-hover:text-gray-900"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                                viewBox="0 0 20 20">
                                <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"/>
                                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                            </svg>
                            <span class="flex-1 ms-3 whitespace-nowrap">🎫 Quản lý khuyến mãi</span>
                        </a>
                    </li>
                }
            </ul>
        </div>
    </aside>

    <!-- Top navbar - Fixed header -->
    <nav class="fixed top-0 z-50 w-full bg-white border-b border-gray-200 ">
        <div class="px-3 py-3 lg:px-5 lg:pl-3">
            <div class="flex items-center justify-between">
                <div class="flex items-center justify-start rtl:justify-end">
                    <button data-drawer-target="logo-sidebar" data-drawer-toggle="logo-sidebar"
                        aria-controls="logo-sidebar" type="button"
                        class="inline-flex items-center p-2 text-sm text-gray-500 rounded-lg sm:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 ">
                        <span class="sr-only">Open sidebar</span>
                        <svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20"
                            xmlns="http://www.w3.org/2000/svg">
                            <path clip-rule="evenodd" fill-rule="evenodd"
                                d="M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z">
                            </path>
                        </svg>
                    </button>
                    <a asp-controller="Home" asp-action="Index" class="flex ms-2 md:me-24">
                        <img src="~/images/gym-logo.png" class="h-8 me-3" alt="GYM Logo"
                            onerror="this.style.display='none'">
                        <span class="self-center text-xl font-semibold sm:text-2xl whitespace-nowrap brand-text">🏋️
                            Quản Lý GYM</span>
                    </a>
                </div>
                <div class="flex items-center">
                    <div class="flex items-center ms-3">
                        <!-- Notifications -->
                        <button type="button" id="notificationBtn" onclick="openNotificationModal()"
                            class="relative p-2 text-gray-400 hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 rounded-full me-3">
                            <span class="sr-only">View notifications</span>
                            <!-- Bell Icon -->
                            <span class="text-xl">🔔</span>
                            <!-- Notification Badge -->
                            <span id="notificationBadge" class="absolute -top-1 -right-1 inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white bg-red-600 rounded-full hidden"></span>
                        </button>

                        <!-- Dark mode toggle -->
                        <button id="theme-toggle" type="button"
                            class="text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-4 focus:ring-gray-200 rounded-lg text-sm p-2.5 me-3">
                            <svg id="theme-toggle-dark-icon" class="hidden w-5 h-5" fill="currentColor"
                                viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
                            </svg>
                            <svg id="theme-toggle-light-icon" class="hidden w-5 h-5" fill="currentColor"
                                viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                <path
                                    d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
                                    fill-rule="evenodd" clip-rule="evenodd"></path>
                            </svg>
                        </button>

                        <!-- User menu -->
                        <div class="relative">
                            <button type="button"
                                class="flex text-sm bg-gray-800 rounded-full focus:ring-4 focus:ring-gray-300 "
                                aria-expanded="false" data-dropdown-toggle="dropdown-user">
                                <span class="sr-only">Open user menu</span>
                                @await Component.InvokeAsync("UserAvatar", new { cssClass = "w-8 h-8" })
                            </button>
                            <div class="z-50 hidden my-4 text-base list-none bg-white divide-y divide-gray-100 rounded-lg shadow "
                                id="dropdown-user">
                                <div class="px-4 py-3" role="none">
                                    <p class="text-sm text-gray-900 " role="none">
                                        @User.Identity?.Name ?? "Admin User"
                                    </p>
                                    <p class="text-sm font-medium text-gray-900 truncate " role="none">
                                        @User.FindFirst(System.Security.Claims.ClaimTypes.Email)?.Value ??
                                        "admin@gym.com"
                                    </p>
                                </div>
                                <ul class="py-1" role="none">
                                    <li>
                                        <a asp-controller="Profile" asp-action="Index"
                                            class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 "
                                            role="menuitem">
                                            <i class="fas fa-user me-2"></i>Hồ sơ cá nhân
                                        </a>
                                    </li>
                                    <li>
                                        <a asp-controller="Profile" asp-action="ChangePassword"
                                            class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 "
                                            role="menuitem">
                                            <i class="fas fa-key me-2"></i>Đổi mật khẩu
                                        </a>
                                    </li>
                                    <li>
                                        <a asp-controller="Profile" asp-action="Security"
                                            class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 "
                                            role="menuitem">
                                            <i class="fas fa-shield-alt me-2"></i>Bảo mật
                                        </a>
                                    </li>
                                    <li>
                                        <hr class="my-1 border-gray-200 ">
                                    </li>
                                    <li>
                                        <a asp-controller="Auth" asp-action="Logout"
                                            class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 "
                                            role="menuitem">
                                            <i class="fas fa-sign-out-alt me-2"></i>Đăng xuất
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main content -->
    <div class="p-4 sm:ml-64">
        <!-- Page content with proper top margin -->
        <div class="pt-16">
            @RenderBody()
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <!-- Dark mode toggle script -->
    <script>
        var themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
        var themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

        // Initialize theme - default to light mode
        if (!('color-theme' in localStorage)) {
            localStorage.setItem('color-theme', 'light');
        }

        // Change the icons inside the button based on previous settings
        if (localStorage.getItem('color-theme') === 'dark') {
            document.documentElement.classList.add('dark');
            themeToggleLightIcon.classList.remove('hidden');
        } else {
            document.documentElement.classList.remove('dark');
            themeToggleDarkIcon.classList.remove('hidden');
        }

        var themeToggleBtn = document.getElementById('theme-toggle');

        themeToggleBtn.addEventListener('click', function () {

            // toggle icons inside button
            themeToggleDarkIcon.classList.toggle('hidden');
            themeToggleLightIcon.classList.toggle('hidden');

            // if set via local storage previously
            if (localStorage.getItem('color-theme')) {
                if (localStorage.getItem('color-theme') === 'light') {
                    document.documentElement.classList.add('dark');
                    localStorage.setItem('color-theme', 'dark');
                } else {
                    document.documentElement.classList.remove('dark');
                    localStorage.setItem('color-theme', 'light');
                }

                // if NOT set via local storage previously
            } else {
                if (document.documentElement.classList.contains('dark')) {
                    document.documentElement.classList.remove('dark');
                    localStorage.setItem('color-theme', 'light');
                } else {
                    document.documentElement.classList.add('dark');
                    localStorage.setItem('color-theme', 'dark');
                }
            }

        });

        // Dropdown menu functionality
        document.addEventListener('DOMContentLoaded', function () {
            // Handle all dropdown toggles
            const dropdownButtons = document.querySelectorAll('[data-collapse-toggle]');

            dropdownButtons.forEach(button => {
                button.addEventListener('click', function () {
                    const targetId = this.getAttribute('data-collapse-toggle');
                    const targetElement = document.getElementById(targetId);
                    const arrow = this.querySelector('.dropdown-arrow');

                    if (targetElement) {
                        targetElement.classList.toggle('hidden');

                        // Rotate arrow
                        if (arrow) {
                            arrow.classList.toggle('rotate-180');
                        }
                    }
                });
            });

            // Close dropdowns when clicking outside
            document.addEventListener('click', function (event) {
                if (!event.target.closest('[data-collapse-toggle]') && !event.target.closest('[id^="dropdown-"]')) {
                    dropdownButtons.forEach(button => {
                        const targetId = button.getAttribute('data-collapse-toggle');
                        const targetElement = document.getElementById(targetId);
                        const arrow = button.querySelector('.dropdown-arrow');

                        if (targetElement && !targetElement.classList.contains('hidden')) {
                            targetElement.classList.add('hidden');
                            if (arrow) {
                                arrow.classList.remove('rotate-180');
                            }
                        }
                    });
                }
            });
        });
    </script>

    <!-- Flowbite JS -->
    <script src="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.js"></script>

    <!-- Class Management JS -->
    <script src="~/js/class-management.js"></script>

    <!-- Real-time Updates JS -->
    <script src="~/js/real-time-updates.js"></script>

    @await RenderSectionAsync("Scripts", required: false)

    <!-- Notification Modal -->
    <div id="notificationModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden z-50">
        <div class="flex items-center justify-center min-h-screen p-4">
            <div class="bg-white rounded-lg shadow-xl w-full max-w-md h-96 flex flex-col">
                <!-- Modal Header -->
                <div class="flex justify-between items-center p-4 border-b border-gray-200">
                    <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                        <svg class="w-5 h-5 mr-2 text-blue-600" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z"/>
                        </svg>
                        Thông báo
                    </h3>
                    <button type="button" onclick="closeNotificationModal()" class="text-gray-400 hover:text-gray-600 transition-colors duration-200">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>

                <!-- Modal Body -->
                <div class="flex-1 overflow-y-auto p-4" id="notificationContent">
                    <div class="flex items-center justify-center h-full">
                        <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
                    </div>
                </div>

                <!-- Modal Footer -->
                <div class="border-t border-gray-200 p-4 space-y-2">
                    <button id="loadAllNotificationsBtn" onclick="loadAllNotifications()"
                        class="w-full bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors duration-200">
                        📋 Xem tất cả thông báo
                    </button>
                    <button id="markAllReadBtn" onclick="markAllAsRead()"
                        class="w-full bg-gray-100 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-200 transition-colors duration-200">
                        ✅ Đánh dấu tất cả đã đọc
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Notification JavaScript -->
    <script>
        let currentNotifications = [];
        let showingAllNotifications = false;

        // Open notification modal
        async function openNotificationModal() {
            document.getElementById('notificationModal').classList.remove('hidden');
            await loadUnreadNotifications();
        }

        // Close notification modal
        function closeNotificationModal() {
            document.getElementById('notificationModal').classList.add('hidden');
            showingAllNotifications = false;
        }

        // Load unread notifications
        async function loadUnreadNotifications() {
            try {
                console.log('Loading unread notifications...'); // Debug log
                showLoading();

                const response = await fetch('/api/thongbao/unread', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    }
                });

                console.log('Unread response status:', response.status); // Debug log

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();
                console.log('Unread response data:', data); // Debug log

                if (data.success && data.notifications) {
                    currentNotifications = data.notifications;
                    displayNotifications(currentNotifications);
                    updateNotificationBadge(data.count);

                    // Reset button state
                    const btn = document.getElementById('loadAllNotificationsBtn');
                    btn.innerHTML = '📋 Xem tất cả thông báo';
                    btn.disabled = false;
                    btn.classList.remove('opacity-50', 'cursor-not-allowed');
                    showingAllNotifications = false;
                } else {
                    console.error('Unread API returned error:', data);
                    showError(data.message || 'Không thể tải thông báo');
                }
            } catch (error) {
                console.error('Error loading unread notifications:', error);
                showError('Có lỗi xảy ra khi tải thông báo: ' + error.message);
            }
        }

        // Load all notifications
        async function loadAllNotifications() {
            try {
                console.log('Loading all notifications...'); // Debug log
                showLoading();

                const response = await fetch('/api/thongbao/all?page=1&pageSize=50', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    }
                });

                console.log('Response status:', response.status); // Debug log

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();
                console.log('Response data:', data); // Debug log

                if (data.success && data.notifications) {
                    currentNotifications = data.notifications;
                    displayNotifications(currentNotifications);
                    showingAllNotifications = true;

                    // Update button text
                    const btn = document.getElementById('loadAllNotificationsBtn');
                    btn.innerHTML = '📋 Đang hiển thị tất cả (' + data.notifications.length + ')';
                    btn.disabled = true;
                    btn.classList.add('opacity-50', 'cursor-not-allowed');

                    showNotificationToast(`Đã tải ${data.notifications.length} thông báo`, 'success');
                } else {
                    console.error('API returned error:', data);
                    showError(data.message || 'Không thể tải thông báo');
                }
            } catch (error) {
                console.error('Error loading all notifications:', error);
                showError('Có lỗi xảy ra khi tải thông báo: ' + error.message);
            }
        }

        // Display notifications
        function displayNotifications(notifications) {
            const content = document.getElementById('notificationContent');

            if (notifications.length === 0) {
                content.innerHTML = `
                    <div class="text-center text-gray-500 h-full flex items-center justify-center">
                        <div>
                            <svg class="w-12 h-12 mx-auto mb-4 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-5 5-5-5h5v-12h5v12z"/>
                            </svg>
                            <p>Không có thông báo nào</p>
                        </div>
                    </div>
                `;
                return;
            }

            const notificationHtml = notifications.map(notification => `
                <div class="notification-item ${!notification.daDoc ? 'bg-blue-50 border-l-4 border-blue-400' : 'bg-white'} p-3 mb-3 rounded-lg border border-gray-200 hover:shadow-md transition-shadow duration-200">
                    <div class="flex items-start">
                        <div class="flex-shrink-0 mr-3">
                            <span class="text-xl">${notification.icon}</span>
                        </div>
                        <div class="flex-1 min-w-0">
                            <h4 class="text-sm font-medium text-gray-900 mb-1">${notification.tieuDe}</h4>
                            <p class="text-sm text-gray-600 mb-2">${notification.noiDung}</p>
                            <p class="text-xs text-gray-400">${formatTimeAgo(notification.thoiGianTao)}</p>
                        </div>
                        ${!notification.daDoc ? '<div class="flex-shrink-0"><div class="w-2 h-2 bg-blue-600 rounded-full"></div></div>' : ''}
                    </div>
                </div>
            `).join('');

            content.innerHTML = notificationHtml;
        }

        // Mark all as read
        async function markAllAsRead() {
            try {
                const response = await fetch('/api/thongbao/mark-all-read', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    }
                });

                const data = await response.json();
                if (data.success) {
                    // Update UI
                    currentNotifications = currentNotifications.map(n => ({...n, daDoc: true}));
                    displayNotifications(currentNotifications);
                    updateNotificationBadge(0);

                    // Show success message
                    showNotificationToast('Đã đánh dấu tất cả thông báo là đã đọc', 'success');
                } else {
                    showNotificationToast('Có lỗi xảy ra', 'error');
                }
            } catch (error) {
                console.error('Error marking all as read:', error);
                showNotificationToast('Có lỗi xảy ra', 'error');
            }
        }

        // Update notification badge
        function updateNotificationBadge(count) {
            const badge = document.getElementById('notificationBadge');
            if (count > 0) {
                badge.textContent = count > 99 ? '99+' : count;
                badge.classList.remove('hidden');
            } else {
                badge.classList.add('hidden');
            }
        }

        // Format time ago
        function formatTimeAgo(dateString) {
            const now = new Date();
            const date = new Date(dateString);
            const diffInSeconds = Math.floor((now - date) / 1000);

            if (diffInSeconds < 60) return 'Vừa xong';
            if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} phút trước`;
            if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} giờ trước`;
            if (diffInSeconds < 2592000) return `${Math.floor(diffInSeconds / 86400)} ngày trước`;

            return date.toLocaleDateString('vi-VN');
        }

        // Show loading
        function showLoading() {
            document.getElementById('notificationContent').innerHTML = `
                <div class="flex items-center justify-center h-full">
                    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
                </div>
            `;
        }

        // Show error
        function showError(message) {
            document.getElementById('notificationContent').innerHTML = `
                <div class="text-center text-red-500 h-full flex items-center justify-center">
                    <div>
                        <svg class="w-12 h-12 mx-auto mb-4 text-red-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                        </svg>
                        <p>${message}</p>
                    </div>
                </div>
            `;
        }

        // Show notification toast
        function showNotificationToast(message, type = 'info') {
            const typeClasses = {
                success: 'bg-green-500',
                error: 'bg-red-500',
                warning: 'bg-yellow-500',
                info: 'bg-blue-500'
            };

            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 z-50 ${typeClasses[type]} text-white px-6 py-3 rounded-lg shadow-lg transform transition-all duration-300 translate-x-full`;
            notification.textContent = message;

            document.body.appendChild(notification);

            // Animate in
            setTimeout(() => {
                notification.classList.remove('translate-x-full');
            }, 100);

            // Remove after 3 seconds
            setTimeout(() => {
                notification.classList.add('translate-x-full');
                setTimeout(() => {
                    notification.remove();
                }, 300);
            }, 3000);
        }

        // Load notification count on page load
        document.addEventListener('DOMContentLoaded', async function() {
            try {
                const response = await fetch('/api/thongbao/unread');
                const data = await response.json();
                if (data.success) {
                    updateNotificationBadge(data.count);
                }
            } catch (error) {
                console.error('Error loading notification count:', error);
            }
        });

        // Close modal when clicking outside
        document.getElementById('notificationModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeNotificationModal();
            }
        });
    </script>

    <!-- ✅ Enhanced System Components -->
    <script src="~/js/loading-manager.js" asp-append-version="true"></script>
    <script src="~/js/notification-manager.js" asp-append-version="true"></script>

    <!-- ✅ User Authentication Meta for SSE -->
    @if (User.Identity?.IsAuthenticated == true)
    {
        <meta name="user-authenticated" content="true" />
        <meta name="user-id" content="@User.Identity.Name" />
    }
</body>

</html>
